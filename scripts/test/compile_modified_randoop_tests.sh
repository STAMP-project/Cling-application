INPUT="subject_generator/subjects.csv"
OLDIFS=$IFS
IFS=,
[ ! -f $INPUT ] && { echo "$INPUT file not found"; }

counter=0
while read tool execution_id project caller_class callee_class type
do
  # skip the title row
  if [[ "$counter" -eq "0" ]]; then
    counter=1
    continue
  fi
  if [[ "$tool" != randoop* ]]; then
    continue
  fi
  # Prepare project cp
    CPEntriesDir="projects/$project/cp-entries.txt"
    CPEntriesContent=$( cat $CPEntriesDir)
    preparedCPs=$( python scripts/python/reassemble-cps.py $CPEntriesContent "$project")
  # Detecting tests
    if [[ "$tool" == "randoop-caller5" ]]; then
        echo "Detecting the generated test suite by Randoop. execution id: $execution_id, project: $project, target class: $caller_class"
        resultDir="results/randoop5/$project-$caller_class-$execution_id"
    elif [[ "$tool" == "randoop-callee5" ]]; then
        echo "Detecting the generated test suite by Randoop. execution id: $execution_id, project: $project, target class: $callee_class"
        resultDir="results/randoop5/$project-$callee_class-$execution_id"
    elif [[ "$tool" == "randoop" ]]; then
        echo "Detecting the generated test suite by Randoop. execution id: $execution_id, project: $project, caller class: $caller_class, callee class: $callee_class"
        resultDir="results/randoop10/$project-$caller_class-$callee_class-$execution_id"
    fi


    echo "test suite generated by $tool: $resultDir"
    if [[ -d $resultDir ]]; then
        echo "Checking if the test need the re-compilation...."
        if [[ -f "$resultDir/flakyRegressionTest" ]]; then
            echo "Re-Compiling Regression tests"
            numberOfRegressionTests=0
            while :
            do
                if [[ -f "$resultDir/RegressionTest$numberOfRegressionTests.java" ]]; then
                    # compile detected regression test test
                    detectedTest="$resultDir/RegressionTest$numberOfRegressionTests.java"
                    javac -cp "$preparedCPs:$(cat libs/test_execution/classpath.txt)" $detectedTest &
                    numberOfRegressionTests=$((numberOfRegressionTests+1))
                else
                    numberOfRegressionTests=$((numberOfRegressionTests-1))
                    break
                fi
            done 

            # Here, we need to check if all of the compilations are done
            while (( $(pgrep -l java | wc -l) >= 1 ))
            do
                sleep 1
            done
            echo "Compilation of regression tests are done. Compile the main test"
            javac -cp "$preparedCPs:$resultDir:$(cat libs/test_execution/classpath.txt)" "$resultDir/RegressionTest.java" &
        else
            echo "Not needed."
        fi
    else
        echo "! Could not find test suite"
    fi

  

done < $INPUT



 while (( $(pgrep -l javac | wc -l) > 0 ))
    do
                sleep 1
    done
