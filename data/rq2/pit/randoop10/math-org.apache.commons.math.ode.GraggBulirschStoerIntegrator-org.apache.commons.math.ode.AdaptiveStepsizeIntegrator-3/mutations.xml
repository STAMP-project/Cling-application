<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>50</index><block>0</block><killingTest>RegressionTest0.test00013(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/ode/SwitchingFunctionsHandler::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15389'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>0</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>0</block><killingTest>RegressionTest0.test00013(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/ode/DummyStepHandler::getInstance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>0</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::resetInternalState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>Removed assignment to member variable minStep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTest>RegressionTest0.test00013(RegressionTest0)</killingTest><description>Removed assignment to member variable maxStep</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17856'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTest/><description>Removed assignment to member variable initialStep</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17856'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTest/><description>Removed assignment to member variable scalAbsoluteTolerance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17856'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>0</block><killingTest/><description>Removed assignment to member variable scalRelativeTolerance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17856'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>0</block><killingTest/><description>Removed assignment to member variable vecAbsoluteTolerance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17856'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>0</block><killingTest/><description>Removed assignment to member variable vecRelativeTolerance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>44</index><block>0</block><killingTest>RegressionTest0.test00013(RegressionTest0)</killingTest><description>Removed assignment to member variable handler</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDD)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>51</index><block>0</block><killingTest>RegressionTest0.test00013(RegressionTest0)</killingTest><description>Removed assignment to member variable switchesHandler</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>50</index><block>1</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/ode/SwitchingFunctionsHandler::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5045'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>1</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5045'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>1</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5045'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>1</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>1</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/ode/DummyStepHandler::getInstance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>1</block><killingTest>RegressionTest0.test00181(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::resetInternalState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTest>RegressionTest0.test00181(RegressionTest0)</killingTest><description>Removed assignment to member variable minStep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTest>RegressionTest0.test00181(RegressionTest0)</killingTest><description>Removed assignment to member variable maxStep</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5045'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>1</block><killingTest/><description>Removed assignment to member variable initialStep</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5045'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>1</block><killingTest/><description>Removed assignment to member variable scalAbsoluteTolerance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5045'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>1</block><killingTest/><description>Removed assignment to member variable scalRelativeTolerance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5045'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>1</block><killingTest/><description>Removed assignment to member variable vecAbsoluteTolerance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5045'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>1</block><killingTest/><description>Removed assignment to member variable vecRelativeTolerance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>44</index><block>1</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>Removed assignment to member variable handler</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD[D[D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>51</index><block>1</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>Removed assignment to member variable switchesHandler</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9948'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>addSwitchingFunction</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/SwitchingFunction;DDI)V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>8</block><killingTest/><description>removed call to org/apache/commons/math/ode/SwitchingFunctionsHandler::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>42</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>52</index><block>47</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>42</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>44</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>48</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>79</index><block>50</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>45</index><block>47</block><killingTest/><description>removed call to java/lang/Double::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>53</index><block>47</block><killingTest/><description>removed call to java/lang/Double::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>55</index><block>47</block><killingTest/><description>removed call to org/apache/commons/math/ode/IntegratorException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>44</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>47</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>47</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>47</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>21</index><block>45</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>77</index><block>50</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>84</index><block>51</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>42</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>43</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>44</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>48</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>50</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>42</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>47</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>90</index><block>51</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::filterStep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>43</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>43</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>42</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>44</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>64</index><block>48</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>79</index><block>50</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>42</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>44</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>64</index><block>48</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>79</index><block>50</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>filterStep</mutatedMethod><methodDescription>(DZ)D</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>90</index><block>51</block><killingTest/><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::filterStep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getCurrentSignedStepsize</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>53</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getCurrentSignedStepsize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getCurrentSignedStepsize</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>53</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getCurrentSignedStepsize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getCurrentStepStart</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>52</block><killingTest>RegressionTest0.test00065(RegressionTest0)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getCurrentStepStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getCurrentStepStart</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>52</block><killingTest>RegressionTest0.test00065(RegressionTest0)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getCurrentStepStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getMaxStep</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>56</block><killingTest>RegressionTest0.test00013(RegressionTest0)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getMaxStep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getMaxStep</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>56</block><killingTest>RegressionTest0.test00013(RegressionTest0)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getMaxStep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getMinStep</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>55</block><killingTest>RegressionTest0.test00148(RegressionTest0)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getMinStep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getMinStep</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>55</block><killingTest>RegressionTest0.test00148(RegressionTest0)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getMinStep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getStepHandler</mutatedMethod><methodDescription>()Lorg/apache/commons/math/ode/StepHandler;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>7</block><killingTest>RegressionTest0.test00105(RegressionTest0)</killingTest><description>replaced return value with null for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getStepHandler</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>getStepHandler</mutatedMethod><methodDescription>()Lorg/apache/commons/math/ode/StepHandler;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest>RegressionTest0.test00105(RegressionTest0)</killingTest><description>mutated return of Object value for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getStepHandler to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>103</index><block>31</block><killingTest/><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>200</index><block>36</block><killingTest/><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>207</index><block>36</block><killingTest/><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>209</index><block>36</block><killingTest/><description>replaced call to java/lang/Math::max with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>220</index><block>37</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>222</index><block>37</block><killingTest/><description>replaced call to java/lang/Math::max with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>233</index><block>38</block><killingTest/><description>replaced call to java/lang/Math::pow with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>241</index><block>38</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>244</index><block>38</block><killingTest/><description>replaced call to java/lang/Math::min with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>251</index><block>38</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>253</index><block>38</block><killingTest/><description>replaced call to java/lang/Math::max with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>26</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><block>29</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>127</index><block>32</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>169</index><block>34</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>216</index><block>36</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>261</index><block>38</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>274</index><block>39</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>22</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>26</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>26</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>26</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>86</index><block>28</block><killingTest/><description>Substituted 1.0E-10 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>29</block><killingTest/><description>Substituted 1.0E-10 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>95</index><block>30</block><killingTest/><description>Substituted 1.0E-6 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>99</index><block>31</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Substituted 0.01 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>120</index><block>32</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>158</index><block>34</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>162</index><block>34</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>214</index><block>36</block><killingTest/><description>Substituted 1.0E-15 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>217</index><block>37</block><killingTest/><description>Substituted 1.0E-6 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>218</index><block>37</block><killingTest/><description>Substituted 0.001 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>226</index><block>38</block><killingTest/><description>Substituted 0.01 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>229</index><block>38</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>239</index><block>38</block><killingTest/><description>Substituted 100.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>249</index><block>38</block><killingTest/><description>Substituted 1.0E-12 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>19</index><block>25</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>115</index><block>32</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>288</index><block>41</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>27</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>27</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>27</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>27</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>27</block><killingTest>RegressionTest0.test00006(RegressionTest0)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>27</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>31</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>31</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>33</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>33</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>34</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>35</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><block>35</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><block>35</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><block>35</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><block>36</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><block>37</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>38</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>232</index><block>38</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><block>38</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><block>38</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>22</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>26</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>28</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>29</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>31</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>32</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>169</index><block>34</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><block>36</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>261</index><block>38</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>274</index><block>39</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>284</index><block>40</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>103</index><block>31</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>200</index><block>36</block><killingTest/><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>207</index><block>36</block><killingTest/><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>209</index><block>36</block><killingTest/><description>removed call to java/lang/Math::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>220</index><block>37</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>222</index><block>37</block><killingTest/><description>removed call to java/lang/Math::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>233</index><block>38</block><killingTest/><description>removed call to java/lang/Math::pow</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>241</index><block>38</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>244</index><block>38</block><killingTest/><description>removed call to java/lang/Math::min</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>251</index><block>38</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>253</index><block>38</block><killingTest/><description>removed call to java/lang/Math::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>259</index><block>38</block><killingTest/><description>removed call to org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getMinStep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>265</index><block>39</block><killingTest/><description>removed call to org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getMinStep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>272</index><block>39</block><killingTest/><description>removed call to org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getMaxStep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>278</index><block>40</block><killingTest/><description>removed call to org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::getMaxStep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>22</index><block>25</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::initializeStep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>294</index><block>41</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::initializeStep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>23</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>111</index><block>31</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>284</index><block>40</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>23</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>111</index><block>31</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>284</index><block>40</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>22</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>41</index><block>26</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>88</index><block>28</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>92</index><block>29</block><killingTest>RegressionTest0.test00006(RegressionTest0)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>127</index><block>32</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>169</index><block>34</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>216</index><block>36</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>261</index><block>38</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>274</index><block>39</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>22</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>41</index><block>26</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>88</index><block>28</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>92</index><block>29</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>127</index><block>32</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>169</index><block>34</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>216</index><block>36</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>261</index><block>38</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>274</index><block>39</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>25</block><killingTest/><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::initializeStep</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>294</index><block>41</block><killingTest/><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/AdaptiveStepsizeIntegrator::initializeStep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>initializeStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;ZI[DD[D[D[D[D)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>155</index><block>34</block><killingTest>RegressionTest0.test00008(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/ode/FirstOrderDifferentialEquations::computeDerivatives</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>resetInternalState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>54</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>resetInternalState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>54</block><killingTest>RegressionTest0.test00065(RegressionTest0)</killingTest><description>Substituted NaN with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>resetInternalState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>54</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>resetInternalState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>54</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>resetInternalState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>54</block><killingTest>RegressionTest0.test00065(RegressionTest0)</killingTest><description>Removed assignment to member variable stepStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>resetInternalState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>54</block><killingTest>RegressionTest0.test00015(RegressionTest0)</killingTest><description>Removed assignment to member variable stepSize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>148</index><block>19</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>151</index><block>19</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>153</index><block>19</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>154</index><block>19</block><killingTest/><description>replaced call to java/lang/Math::max with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>172</index><block>20</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>157</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>21</index><block>10</block><killingTest/><description>removed call to java/lang/Integer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>29</index><block>10</block><killingTest/><description>removed call to java/lang/Integer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>31</index><block>10</block><killingTest/><description>removed call to org/apache/commons/math/ode/IntegratorException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>54</index><block>12</block><killingTest/><description>removed call to java/lang/Integer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>62</index><block>12</block><killingTest/><description>removed call to java/lang/Integer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>64</index><block>12</block><killingTest/><description>removed call to org/apache/commons/math/ode/IntegratorException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>91</index><block>15</block><killingTest/><description>removed call to java/lang/Integer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>100</index><block>15</block><killingTest/><description>removed call to java/lang/Integer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>102</index><block>15</block><killingTest/><description>removed call to org/apache/commons/math/ode/IntegratorException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>129</index><block>18</block><killingTest/><description>removed call to java/lang/Integer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>138</index><block>18</block><killingTest/><description>removed call to java/lang/Integer::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>140</index><block>18</block><killingTest/><description>removed call to org/apache/commons/math/ode/IntegratorException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>173</index><block>20</block><killingTest/><description>removed call to java/lang/Double::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>175</index><block>20</block><killingTest/><description>removed call to org/apache/commons/math/ode/IntegratorException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>10</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>10</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>10</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>12</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>12</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>12</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>15</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>86</index><block>15</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>15</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>121</index><block>18</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>18</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>132</index><block>18</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>149</index><block>19</block><killingTest/><description>Substituted 1.0E-12 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>163</index><block>20</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>166</index><block>20</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>19</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>19</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>20</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='270'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>17</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='270'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>9</block><killingTest/><description>removed call to org/apache/commons/math/ode/FirstOrderDifferentialEquations::getDimension</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>10</block><killingTest/><description>removed call to org/apache/commons/math/ode/FirstOrderDifferentialEquations::getDimension</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>11</block><killingTest/><description>removed call to org/apache/commons/math/ode/FirstOrderDifferentialEquations::getDimension</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>12</block><killingTest/><description>removed call to org/apache/commons/math/ode/FirstOrderDifferentialEquations::getDimension</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>148</index><block>19</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>151</index><block>19</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>153</index><block>19</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>154</index><block>19</block><killingTest/><description>removed call to java/lang/Math::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>172</index><block>20</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='270'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>9</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>11</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>71</index><block>13</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>14</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>109</index><block>16</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>115</index><block>17</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='270'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>9</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>11</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>71</index><block>13</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>14</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>109</index><block>16</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>115</index><block>17</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>157</index><block>19</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>sanityChecks</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>157</index><block>19</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7116'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7116'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6715'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>4</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7116'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7116'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7116'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>2</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7116'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>3</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7116'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>2</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7116'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>3</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6715'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>4</block><killingTest/><description>Removed assignment to member variable initialStep</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='840'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setInitialStepSize</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>5</block><killingTest/><description>Removed assignment to member variable initialStep</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6430'><sourceFile>AdaptiveStepsizeIntegrator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.AdaptiveStepsizeIntegrator</mutatedClass><mutatedMethod>setStepHandler</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/StepHandler;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>6</block><killingTest/><description>Removed assignment to member variable handler</description></mutation>
</mutations>
