<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTest>RegressionTest100.test20042(RegressionTest100)</killingTest><description>Removed assignment to member variable real</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTest>RegressionTest108.test21677(RegressionTest108)</killingTest><description>Removed assignment to member variable imaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>25</index><block>5</block><killingTest>RegressionTest83.test16724(RegressionTest83)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1052'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>5</block><killingTest>RegressionTest103.test20603(RegressionTest103)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>42</index><block>7</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>57</index><block>8</block><killingTest>RegressionTest12.test02585(RegressionTest12)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>63</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='836'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>78</index><block>10</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>93</index><block>11</block><killingTest>RegressionTest83.test16724(RegressionTest83)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>99</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4940'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTest>RegressionTest1.test00249(RegressionTest1)</killingTest><description>Substituted NaN with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>4</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>Substituted Infinity with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='81'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>6</block><killingTest>RegressionTest22.test04577(RegressionTest22)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>9</block><killingTest>RegressionTest47.test09490(RegressionTest47)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>6</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>9</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10124'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>3</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>5</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='602'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>5</block><killingTest>RegressionTest34.test06935(RegressionTest34)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>7</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='836'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>10</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>99</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest>RegressionTest1.test00249(RegressionTest1)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>19</index><block>4</block><killingTest>RegressionTest99.test19981(RegressionTest99)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>43</index><block>7</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>65</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='836'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>79</index><block>10</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>101</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10124'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>1</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>15</index><block>3</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3177'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>6</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>73</index><block>9</block><killingTest>RegressionTest7.test01401(RegressionTest7)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>1</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>15</index><block>3</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>6</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>73</index><block>9</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='602'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>30</index><block>5</block><killingTest>RegressionTest34.test06935(RegressionTest34)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>30</index><block>5</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTest>RegressionTest1.test00249(RegressionTest1)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>4</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>7</block><killingTest/><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>8</block><killingTest>RegressionTest47.test09501(RegressionTest47)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>10</block><killingTest>RegressionTest7.test01401(RegressionTest7)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>101</index><block>11</block><killingTest>RegressionTest33.test06756(RegressionTest33)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='682'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>75</block><killingTest>RegressionTest80.test16113(RegressionTest80)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='598'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>73</block><killingTest>RegressionTest99.test19845(RegressionTest99)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5489'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::sqrt1z</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>75</block><killingTest>RegressionTest17.test03477(RegressionTest17)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::negate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>74</block><killingTest>RegressionTest129.test25807(RegressionTest129)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>23</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5489'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>73</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='598'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>73</block><killingTest>RegressionTest99.test19845(RegressionTest99)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>74</block><killingTest>RegressionTest129.test25807(RegressionTest129)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::acos to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::acos to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::sqrt1z with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='682'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>75</block><killingTest>RegressionTest80.test16113(RegressionTest80)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>75</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='843'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>75</block><killingTest>RegressionTest109.test21879(RegressionTest109)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::log with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1058'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>21</index><block>75</block><killingTest>RegressionTest24.test04852(RegressionTest24)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::negate with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='682'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>75</block><killingTest>RegressionTest80.test16113(RegressionTest80)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>12</block><killingTest>RegressionTest27.test05588(RegressionTest27)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>12</block><killingTest>RegressionTest27.test05588(RegressionTest27)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='277'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>12</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='441'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>12</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>12</block><killingTest>RegressionTest27.test05588(RegressionTest27)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>15</index><block>12</block><killingTest>RegressionTest27.test05588(RegressionTest27)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>12</block><killingTest>RegressionTest27.test05588(RegressionTest27)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='191'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>14</index><block>12</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='542'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>78</block><killingTest>RegressionTest72.test14474(RegressionTest72)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>78</block><killingTest>RegressionTest6.test01301(RegressionTest6)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>78</block><killingTest>RegressionTest6.test01301(RegressionTest6)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='301'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>76</block><killingTest>RegressionTest18.test03748(RegressionTest18)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7862'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>76</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>78</block><killingTest>RegressionTest15.test03103(RegressionTest15)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::sqrt1z</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>78</block><killingTest>RegressionTest15.test03103(RegressionTest15)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>78</block><killingTest>RegressionTest15.test03103(RegressionTest15)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>78</block><killingTest>RegressionTest15.test03103(RegressionTest15)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='93'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>78</block><killingTest>RegressionTest115.test23151(RegressionTest115)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::negate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>78</block><killingTest>RegressionTest15.test03103(RegressionTest15)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>77</block><killingTest>RegressionTest20.test04031(RegressionTest20)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::asin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>23</index><block>78</block><killingTest>RegressionTest15.test03103(RegressionTest15)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7862'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>76</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='301'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>76</block><killingTest>RegressionTest18.test03748(RegressionTest18)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>77</block><killingTest>RegressionTest20.test04031(RegressionTest20)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::asin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>78</block><killingTest>RegressionTest15.test03103(RegressionTest15)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::asin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>14</index><block>78</block><killingTest>RegressionTest6.test01301(RegressionTest6)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::sqrt1z with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='191'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>78</block><killingTest>RegressionTest18.test03748(RegressionTest18)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='285'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>78</block><killingTest>RegressionTest34.test06808(RegressionTest34)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='191'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>78</block><killingTest>RegressionTest18.test03748(RegressionTest18)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::log with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='191'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>21</index><block>78</block><killingTest>RegressionTest18.test03748(RegressionTest18)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::negate with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='191'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>78</block><killingTest>RegressionTest18.test03748(RegressionTest18)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>15</index><block>81</block><killingTest>RegressionTest27.test05589(RegressionTest27)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>81</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::subtract with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>81</block><killingTest>RegressionTest27.test05589(RegressionTest27)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>81</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>27</index><block>81</block><killingTest>RegressionTest27.test05589(RegressionTest27)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='54'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>81</block><killingTest>RegressionTest56.test11327(RegressionTest56)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>81</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='129'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>79</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5323'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>79</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>81</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>81</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>81</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>81</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>81</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>81</block><killingTest>RegressionTest114.test22979(RegressionTest114)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>81</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>80</block><killingTest>RegressionTest100.test20066(RegressionTest100)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::atan</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>28</index><block>81</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::atan</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5323'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>79</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='129'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>79</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>80</block><killingTest>RegressionTest100.test20066(RegressionTest100)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::atan to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>81</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::atan to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>81</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>81</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::subtract with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>81</block><killingTest>RegressionTest27.test05589(RegressionTest27)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>20</index><block>81</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::log with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>25</index><block>81</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='54'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>26</index><block>81</block><killingTest>RegressionTest56.test11327(RegressionTest56)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>27</index><block>81</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='81'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>18</index><block>15</block><killingTest>RegressionTest60.test12173(RegressionTest60)</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>13</block><killingTest>RegressionTest40.test08013(RegressionTest40)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='257'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>13</block><killingTest>RegressionTest110.test22088(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>15</block><killingTest>RegressionTest12.test02405(RegressionTest12)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>RegressionTest129.test25807(RegressionTest129)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::conjugate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>15</block><killingTest>RegressionTest12.test02405(RegressionTest12)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::conjugate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='257'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>13</block><killingTest>RegressionTest110.test22088(RegressionTest110)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>13</block><killingTest>RegressionTest40.test08013(RegressionTest40)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>RegressionTest129.test25807(RegressionTest129)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::conjugate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>15</block><killingTest>RegressionTest12.test02405(RegressionTest12)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::conjugate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='81'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>15</block><killingTest>RegressionTest60.test12173(RegressionTest60)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='85'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>84</block><killingTest>RegressionTest87.test17593(RegressionTest87)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>84</block><killingTest>RegressionTest105.test21099(RegressionTest105)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>84</block><killingTest>RegressionTest71.test14264(RegressionTest71)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>27</index><block>84</block><killingTest>RegressionTest122.test24478(RegressionTest122)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>24</index><block>84</block><killingTest>RegressionTest122.test24478(RegressionTest122)</killingTest><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2844'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>84</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>84</block><killingTest>RegressionTest61.test12206(RegressionTest61)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>82</block><killingTest>RegressionTest122.test24478(RegressionTest122)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4318'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>82</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>84</block><killingTest>RegressionTest105.test21099(RegressionTest105)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='95'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>84</block><killingTest>RegressionTest105.test21099(RegressionTest105)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>84</block><killingTest>RegressionTest122.test24478(RegressionTest122)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>84</block><killingTest>RegressionTest122.test24478(RegressionTest122)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>84</block><killingTest>RegressionTest24.test04973(RegressionTest24)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>83</block><killingTest>RegressionTest111.test22305(RegressionTest111)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>30</index><block>84</block><killingTest>RegressionTest24.test04973(RegressionTest24)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::cos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4318'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>82</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>82</block><killingTest>RegressionTest122.test24478(RegressionTest122)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>83</block><killingTest>RegressionTest111.test22305(RegressionTest111)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::cos to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>84</block><killingTest>RegressionTest24.test04973(RegressionTest24)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::cos to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>29</index><block>84</block><killingTest>RegressionTest38.test07663(RegressionTest38)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>87</block><killingTest>RegressionTest3.test00659(RegressionTest3)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>87</block><killingTest>RegressionTest3.test00659(RegressionTest3)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1185'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>87</block><killingTest>RegressionTest72.test14575(RegressionTest72)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>87</block><killingTest>RegressionTest41.test08340(RegressionTest41)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='702'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>87</block><killingTest>RegressionTest116.test23360(RegressionTest116)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='205'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>87</block><killingTest>RegressionTest56.test11294(RegressionTest56)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>85</block><killingTest>RegressionTest106.test21302(RegressionTest106)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4810'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>85</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>87</block><killingTest>RegressionTest3.test00659(RegressionTest3)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>87</block><killingTest>RegressionTest3.test00659(RegressionTest3)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='157'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>87</block><killingTest>RegressionTest119.test23933(RegressionTest119)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='157'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>87</block><killingTest>RegressionTest119.test23933(RegressionTest119)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>87</block><killingTest>RegressionTest57.test11440(RegressionTest57)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>86</block><killingTest>RegressionTest2.test00527(RegressionTest2)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>87</block><killingTest>RegressionTest57.test11440(RegressionTest57)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::cosh</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4810'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>85</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>85</block><killingTest>RegressionTest106.test21302(RegressionTest106)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>86</block><killingTest>RegressionTest2.test00527(RegressionTest2)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::cosh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>87</block><killingTest>RegressionTest57.test11440(RegressionTest57)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::cosh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>87</block><killingTest>RegressionTest1.test00249(RegressionTest1)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>118</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>118</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>118</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::createComplex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>56</index><block>25</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3224'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>58</index><block>25</block><killingTest>RegressionTest66.test13376(RegressionTest66)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5650'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5664'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>19</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>20</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>26</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3708'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>122</index><block>29</block><killingTest>RegressionTest103.test20744(RegressionTest103)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>134</index><block>30</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>27</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>27</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>28</block><killingTest>RegressionTest101.test20235(RegressionTest101)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>28</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>28</block><killingTest>RegressionTest101.test20235(RegressionTest101)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>28</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='96'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>28</block><killingTest>RegressionTest39.test07965(RegressionTest39)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>28</block><killingTest>RegressionTest101.test20235(RegressionTest101)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>28</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>28</block><killingTest>RegressionTest101.test20235(RegressionTest101)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><block>28</block><killingTest>RegressionTest101.test20235(RegressionTest101)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>30</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>30</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>31</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTest>RegressionTest120.test24084(RegressionTest120)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='36'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>17</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>19</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>20</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>22</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>23</block><killingTest>RegressionTest27.test05589(RegressionTest27)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>25</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>26</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>29</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>16</block><killingTest>RegressionTest120.test24084(RegressionTest120)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6516'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>17</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>19</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>19</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4529'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>22</block><killingTest>RegressionTest62.test12481(RegressionTest62)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>23</block><killingTest>RegressionTest27.test05589(RegressionTest27)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>25</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>25</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>116</index><block>28</block><killingTest>RegressionTest114.test22979(RegressionTest114)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>137</index><block>30</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>175</index><block>31</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>13</index><block>18</block><killingTest>RegressionTest98.test19799(RegressionTest98)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>38</index><block>21</block><killingTest>RegressionTest61.test12266(RegressionTest61)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>51</index><block>24</block><killingTest>RegressionTest128.test25796(RegressionTest128)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>79</index><block>27</block><killingTest/><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>117</index><block>28</block><killingTest>RegressionTest114.test22979(RegressionTest114)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>138</index><block>30</block><killingTest/><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>176</index><block>31</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='36'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>16</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6516'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>17</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5664'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>19</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5664'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>34</index><block>20</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4529'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>22</block><killingTest>RegressionTest62.test12481(RegressionTest62)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4529'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>23</block><killingTest>RegressionTest62.test12481(RegressionTest62)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1493'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>66</index><block>26</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5539'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>124</index><block>29</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>16</block><killingTest>RegressionTest120.test24084(RegressionTest120)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='36'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>17</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>19</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>34</index><block>20</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>22</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>23</block><killingTest>RegressionTest27.test05589(RegressionTest27)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>66</index><block>26</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>124</index><block>29</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>60</index><block>25</block><killingTest>RegressionTest125.test25051(RegressionTest125)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>60</index><block>25</block><killingTest>RegressionTest124.test24809(RegressionTest124)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>18</block><killingTest>RegressionTest98.test19799(RegressionTest98)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>21</block><killingTest>RegressionTest61.test12266(RegressionTest61)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>24</block><killingTest>RegressionTest128.test25796(RegressionTest128)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>27</block><killingTest/><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>117</index><block>28</block><killingTest>RegressionTest114.test22979(RegressionTest114)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>138</index><block>30</block><killingTest/><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>176</index><block>31</block><killingTest>RegressionTest103.test20740(RegressionTest103)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>78</index><block>27</block><killingTest/><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>116</index><block>28</block><killingTest>RegressionTest101.test20235(RegressionTest101)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>137</index><block>30</block><killingTest/><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>175</index><block>31</block><killingTest>RegressionTest27.test05589(RegressionTest27)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>84</index><block>42</block><killingTest>RegressionTest62.test12532(RegressionTest62)</killingTest><description>replaced boolean return with false for org/apache/commons/math/complex/Complex::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>84</index><block>42</block><killingTest>RegressionTest107.test21420(RegressionTest107)</killingTest><description>replaced boolean return with true for org/apache/commons/math/complex/Complex::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>33</block><killingTest>RegressionTest22.test04569(RegressionTest22)</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>35</block><killingTest>RegressionTest27.test05489(RegressionTest27)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>40</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>41</block><killingTest>RegressionTest40.test08080(RegressionTest40)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>42</block><killingTest>RegressionTest107.test21420(RegressionTest107)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>32</block><killingTest>RegressionTest107.test21420(RegressionTest107)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>34</block><killingTest>RegressionTest27.test05489(RegressionTest27)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='104'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>36</block><killingTest>RegressionTest62.test12532(RegressionTest62)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>38</block><killingTest>RegressionTest103.test20745(RegressionTest103)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>39</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='104'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>36</block><killingTest>RegressionTest62.test12532(RegressionTest62)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>37</block><killingTest>RegressionTest62.test12532(RegressionTest62)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>38</block><killingTest>RegressionTest103.test20745(RegressionTest103)</killingTest><description>removed call to java/lang/Double::doubleToRawLongBits</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>38</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>38</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>removed call to java/lang/Double::doubleToRawLongBits</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>39</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>removed call to java/lang/Double::doubleToRawLongBits</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>39</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>39</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>removed call to java/lang/Double::doubleToRawLongBits</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>34</block><killingTest>RegressionTest27.test05489(RegressionTest27)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='104'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>33</index><block>36</block><killingTest>RegressionTest62.test12532(RegressionTest62)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>51</index><block>38</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='402'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>59</index><block>39</block><killingTest>RegressionTest86.test17211(RegressionTest86)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>32</block><killingTest>RegressionTest107.test21420(RegressionTest107)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>34</block><killingTest>RegressionTest62.test12532(RegressionTest62)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='559'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>33</index><block>36</block><killingTest>RegressionTest105.test21024(RegressionTest105)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>51</index><block>38</block><killingTest>RegressionTest103.test20745(RegressionTest103)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2422'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>59</index><block>39</block><killingTest>RegressionTest105.test21078(RegressionTest105)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>84</index><block>42</block><killingTest>RegressionTest107.test21420(RegressionTest107)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>15</index><block>90</block><killingTest>RegressionTest62.test12496(RegressionTest62)</killingTest><description>replaced call to java/lang/Math::exp with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>90</block><killingTest>RegressionTest62.test12496(RegressionTest62)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>90</block><killingTest>RegressionTest55.test11059(RegressionTest55)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>90</block><killingTest>RegressionTest62.test12496(RegressionTest62)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>90</block><killingTest>RegressionTest114.test22983(RegressionTest114)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>88</block><killingTest>RegressionTest62.test12496(RegressionTest62)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5524'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>90</block><killingTest>RegressionTest62.test12496(RegressionTest62)</killingTest><description>removed call to java/lang/Math::exp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>90</block><killingTest>RegressionTest62.test12496(RegressionTest62)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>90</block><killingTest>RegressionTest38.test07680(RegressionTest38)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>90</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>89</block><killingTest>RegressionTest87.test17434(RegressionTest87)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::exp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>31</index><block>90</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::exp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5524'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>88</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>88</block><killingTest>RegressionTest62.test12496(RegressionTest62)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>89</block><killingTest>RegressionTest87.test17434(RegressionTest87)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::exp to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>90</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::exp to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>30</index><block>90</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>46</block><killingTest>RegressionTest108.test21677(RegressionTest108)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>46</block><killingTest>RegressionTest100.test20056(RegressionTest100)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>47</block><killingTest>RegressionTest100.test20042(RegressionTest100)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>47</block><killingTest>RegressionTest100.test20042(RegressionTest100)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>44</block><killingTest/><description>Substituted 7 with 8</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>45</block><killingTest/><description>Substituted 37 with 38</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>45</block><killingTest/><description>Substituted 17 with 18</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>45</block><killingTest>RegressionTest105.test21106(RegressionTest105)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>45</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>45</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>43</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>43</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>45</block><killingTest/><description>removed call to org/apache/commons/math/util/MathUtils::hash</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>45</block><killingTest/><description>removed call to org/apache/commons/math/util/MathUtils::hash</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>44</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math/complex/Complex::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>24</index><block>45</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math/complex/Complex::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>43</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>43</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>44</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>45</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>23</index><block>56</block><killingTest>RegressionTest1.test00368(RegressionTest1)</killingTest><description>replaced boolean return with true for org/apache/commons/math/complex/Complex::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>55</block><killingTest>RegressionTest1.test00300(RegressionTest1)</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>56</block><killingTest>RegressionTest1.test00368(RegressionTest1)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>52</block><killingTest>RegressionTest1.test00300(RegressionTest1)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>53</block><killingTest>RegressionTest105.test21059(RegressionTest105)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>54</block><killingTest>RegressionTest105.test21059(RegressionTest105)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='414'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>52</block><killingTest>RegressionTest109.test21925(RegressionTest109)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>53</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10227'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>54</block><killingTest/><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>52</block><killingTest>RegressionTest1.test00300(RegressionTest1)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>53</block><killingTest>RegressionTest105.test21059(RegressionTest105)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10227'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>54</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='414'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>52</block><killingTest>RegressionTest109.test21925(RegressionTest109)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>53</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>54</block><killingTest>RegressionTest105.test21059(RegressionTest105)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>56</block><killingTest>RegressionTest1.test00300(RegressionTest1)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>20</index><block>51</block><killingTest>RegressionTest104.test20945(RegressionTest104)</killingTest><description>replaced boolean return with true for org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>50</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>51</block><killingTest>RegressionTest104.test20945(RegressionTest104)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>48</block><killingTest>RegressionTest104.test20945(RegressionTest104)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>49</block><killingTest>RegressionTest104.test20945(RegressionTest104)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='643'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>48</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed call to java/lang/Double::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='216'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>49</block><killingTest>RegressionTest88.test17647(RegressionTest88)</killingTest><description>removed call to java/lang/Double::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>48</block><killingTest>RegressionTest104.test20945(RegressionTest104)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='216'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>49</block><killingTest>RegressionTest88.test17647(RegressionTest88)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='643'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>48</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>49</block><killingTest>RegressionTest104.test20945(RegressionTest104)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>51</block><killingTest>RegressionTest1.test00379(RegressionTest1)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='128'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>93</block><killingTest>RegressionTest83.test16727(RegressionTest83)</killingTest><description>replaced call to java/lang/Math::log with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>21</index><block>93</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>replaced call to java/lang/Math::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>91</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8654'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>91</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='128'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>93</block><killingTest>RegressionTest83.test16727(RegressionTest83)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>93</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>removed call to java/lang/Math::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>93</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>removed call to java/lang/Math::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>93</block><killingTest>RegressionTest26.test05395(RegressionTest26)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>92</block><killingTest>RegressionTest87.test17434(RegressionTest87)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>23</index><block>93</block><killingTest>RegressionTest26.test05395(RegressionTest26)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8654'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>91</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>91</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>92</block><killingTest>RegressionTest87.test17434(RegressionTest87)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::log to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>93</block><killingTest>RegressionTest26.test05395(RegressionTest26)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::log to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>93</block><killingTest>RegressionTest63.test12651(RegressionTest63)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>65</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>65</block><killingTest>RegressionTest118.test23704(RegressionTest118)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>65</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>65</block><killingTest>RegressionTest118.test23704(RegressionTest118)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>65</block><killingTest>RegressionTest13.test02693(RegressionTest13)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='149'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>65</block><killingTest>RegressionTest101.test20235(RegressionTest101)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>57</block><killingTest>RegressionTest26.test05300(RegressionTest26)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>58</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>60</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>61</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>62</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>63</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>57</block><killingTest>RegressionTest14.test02990(RegressionTest14)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1445'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>58</block><killingTest>RegressionTest111.test22271(RegressionTest111)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2120'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>60</block><killingTest>RegressionTest42.test08462(RegressionTest42)</killingTest><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9816'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>61</block><killingTest/><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9816'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>62</block><killingTest/><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9816'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>63</block><killingTest/><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>65</block><killingTest>RegressionTest33.test06639(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>13</index><block>59</block><killingTest>RegressionTest129.test25807(RegressionTest129)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>37</index><block>64</block><killingTest>RegressionTest104.test20870(RegressionTest104)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>65</index><block>65</block><killingTest>RegressionTest33.test06639(RegressionTest33)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>57</block><killingTest>RegressionTest26.test05300(RegressionTest26)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1445'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>58</block><killingTest>RegressionTest111.test22271(RegressionTest111)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>60</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>61</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>62</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9816'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>63</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>57</block><killingTest>RegressionTest14.test02990(RegressionTest14)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>58</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2120'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>60</block><killingTest>RegressionTest42.test08462(RegressionTest42)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9816'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>61</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9816'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>62</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>63</block><killingTest>RegressionTest57.test11579(RegressionTest57)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>59</block><killingTest>RegressionTest129.test25807(RegressionTest129)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>64</block><killingTest>RegressionTest104.test20870(RegressionTest104)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>65</block><killingTest>RegressionTest33.test06639(RegressionTest33)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>64</index><block>65</block><killingTest>RegressionTest123.test24736(RegressionTest123)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='325'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>16</index><block>68</block><killingTest>RegressionTest29.test05849(RegressionTest29)</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>19</index><block>68</block><killingTest>RegressionTest51.test10310(RegressionTest51)</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='58'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>66</block><killingTest>RegressionTest43.test08772(RegressionTest43)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8127'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>66</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>68</block><killingTest>RegressionTest101.test20268(RegressionTest101)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>67</block><killingTest>RegressionTest47.test09598(RegressionTest47)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::negate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>21</index><block>68</block><killingTest>RegressionTest101.test20268(RegressionTest101)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::negate</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8127'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>66</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='58'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>66</block><killingTest>RegressionTest43.test08772(RegressionTest43)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>67</block><killingTest>RegressionTest47.test09598(RegressionTest47)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::negate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>68</block><killingTest>RegressionTest101.test20268(RegressionTest101)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::negate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>20</index><block>68</block><killingTest>RegressionTest51.test10310(RegressionTest51)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>96</block><killingTest>RegressionTest98.test19617(RegressionTest98)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='26'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>9</index><block>95</block><killingTest/><description>removed call to java/lang/NullPointerException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>94</block><killingTest>RegressionTest65.test13019(RegressionTest65)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>96</block><killingTest>RegressionTest65.test13019(RegressionTest65)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>96</block><killingTest>RegressionTest65.test13019(RegressionTest65)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>96</block><killingTest>RegressionTest65.test13019(RegressionTest65)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::exp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>19</index><block>96</block><killingTest>RegressionTest65.test13019(RegressionTest65)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::pow</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>94</block><killingTest>RegressionTest22.test04528(RegressionTest22)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>94</block><killingTest>RegressionTest65.test13019(RegressionTest65)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>96</block><killingTest>RegressionTest65.test13019(RegressionTest65)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::pow to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='54'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>96</block><killingTest>RegressionTest123.test24646(RegressionTest123)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::log with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>96</block><killingTest>RegressionTest105.test21103(RegressionTest105)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>96</block><killingTest>RegressionTest105.test21103(RegressionTest105)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::exp with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='73'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>99</block><killingTest>RegressionTest105.test21099(RegressionTest105)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='73'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>99</block><killingTest>RegressionTest105.test21099(RegressionTest105)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='57'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>99</block><killingTest>RegressionTest60.test12028(RegressionTest60)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>99</block><killingTest>RegressionTest100.test20069(RegressionTest100)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3904'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>99</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>99</block><killingTest>RegressionTest127.test25568(RegressionTest127)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>97</block><killingTest>RegressionTest33.test06700(RegressionTest33)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4655'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>97</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='73'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>99</block><killingTest>RegressionTest105.test21099(RegressionTest105)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='73'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>99</block><killingTest>RegressionTest105.test21099(RegressionTest105)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>99</block><killingTest>RegressionTest100.test20069(RegressionTest100)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>99</block><killingTest>RegressionTest100.test20069(RegressionTest100)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>99</block><killingTest>RegressionTest100.test20042(RegressionTest100)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>98</block><killingTest>RegressionTest92.test18527(RegressionTest92)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>99</block><killingTest>RegressionTest100.test20042(RegressionTest100)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4655'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>97</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>97</block><killingTest>RegressionTest33.test06700(RegressionTest33)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>98</block><killingTest>RegressionTest92.test18527(RegressionTest92)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>99</block><killingTest>RegressionTest100.test20042(RegressionTest100)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>99</block><killingTest>RegressionTest55.test11179(RegressionTest55)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1149'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>102</block><killingTest>RegressionTest126.test25317(RegressionTest126)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>102</block><killingTest>RegressionTest22.test04445(RegressionTest22)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>102</block><killingTest>RegressionTest32.test06557(RegressionTest32)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>102</block><killingTest>RegressionTest30.test06078(RegressionTest30)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7946'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>102</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>102</block><killingTest>RegressionTest32.test06557(RegressionTest32)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='86'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>100</block><killingTest>RegressionTest32.test06557(RegressionTest32)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8100'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1149'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>102</block><killingTest>RegressionTest126.test25317(RegressionTest126)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1149'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>102</block><killingTest>RegressionTest126.test25317(RegressionTest126)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>102</block><killingTest>RegressionTest32.test06557(RegressionTest32)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>102</block><killingTest>RegressionTest32.test06557(RegressionTest32)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>102</block><killingTest>RegressionTest40.test08099(RegressionTest40)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>101</block><killingTest>RegressionTest101.test20229(RegressionTest101)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>102</block><killingTest>RegressionTest40.test08099(RegressionTest40)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sinh</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8100'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>100</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='86'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>100</block><killingTest>RegressionTest32.test06557(RegressionTest32)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>101</block><killingTest>RegressionTest101.test20229(RegressionTest101)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sinh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>102</block><killingTest>RegressionTest40.test08099(RegressionTest40)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sinh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>102</block><killingTest>RegressionTest22.test04445(RegressionTest22)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='329'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>35</index><block>108</block><killingTest>RegressionTest18.test03748(RegressionTest18)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>41</index><block>108</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1685'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>68</index><block>110</block><killingTest>RegressionTest39.test07965(RegressionTest39)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='428'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>75</index><block>110</block><killingTest>RegressionTest45.test09114(RegressionTest45)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::indicator with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1834'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>108</block><killingTest>RegressionTest36.test07360(RegressionTest36)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='429'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>105</block><killingTest>RegressionTest34.test06808(RegressionTest34)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='429'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>106</block><killingTest>RegressionTest34.test06808(RegressionTest34)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>107</block><killingTest>RegressionTest34.test06808(RegressionTest34)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>107</block><killingTest>RegressionTest34.test06808(RegressionTest34)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>108</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1233'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>108</block><killingTest>RegressionTest118.test23668(RegressionTest118)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>109</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1685'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>110</block><killingTest>RegressionTest39.test07965(RegressionTest39)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>108</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>108</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>109</block><killingTest>RegressionTest11.test02313(RegressionTest11)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>109</block><killingTest>RegressionTest11.test02313(RegressionTest11)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>110</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>110</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='428'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>110</block><killingTest>RegressionTest45.test09114(RegressionTest45)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='41'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>103</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='129'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>105</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='429'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>106</block><killingTest>RegressionTest34.test06808(RegressionTest34)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>108</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9865'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>103</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>107</block><killingTest>RegressionTest128.test25794(RegressionTest128)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>108</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>108</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>108</block><killingTest>RegressionTest11.test02313(RegressionTest11)</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>109</block><killingTest>RegressionTest107.test21565(RegressionTest107)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>110</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='428'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>75</index><block>110</block><killingTest>RegressionTest45.test09114(RegressionTest45)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>110</block><killingTest>RegressionTest123.test24663(RegressionTest123)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>104</block><killingTest>RegressionTest2.test00527(RegressionTest2)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>107</block><killingTest>RegressionTest128.test25794(RegressionTest128)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>61</index><block>109</block><killingTest>RegressionTest107.test21565(RegressionTest107)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>79</index><block>110</block><killingTest>RegressionTest123.test24663(RegressionTest123)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9865'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>103</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='429'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>105</block><killingTest>RegressionTest34.test06808(RegressionTest34)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='429'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>106</block><killingTest>RegressionTest34.test06808(RegressionTest34)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='41'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>103</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='129'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>105</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1946'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>106</block><killingTest>RegressionTest36.test07360(RegressionTest36)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>49</index><block>108</block><killingTest>RegressionTest35.test07048(RegressionTest35)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='329'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>49</index><block>108</block><killingTest>RegressionTest18.test03748(RegressionTest18)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>104</block><killingTest>RegressionTest2.test00527(RegressionTest2)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>107</block><killingTest>RegressionTest128.test25794(RegressionTest128)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>109</block><killingTest>RegressionTest107.test21565(RegressionTest107)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>110</block><killingTest>RegressionTest123.test24663(RegressionTest123)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2373'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>107</block><killingTest/><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>60</index><block>109</block><killingTest>RegressionTest11.test02313(RegressionTest11)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>78</index><block>110</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='105'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>9</index><block>111</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='105'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>111</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::subtract with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='105'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>111</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='105'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>111</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>111</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>111</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>111</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>111</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>12</index><block>111</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt1z</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>111</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt1z to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='105'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>6</index><block>111</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='105'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>111</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>111</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::subtract with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>11</index><block>111</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::sqrt with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>72</block><killingTest>RegressionTest104.test20870(RegressionTest104)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='587'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>72</block><killingTest>RegressionTest56.test11327(RegressionTest56)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>69</block><killingTest>RegressionTest0.test00082(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>70</block><killingTest>RegressionTest104.test20870(RegressionTest104)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1021'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>69</block><killingTest>RegressionTest99.test19881(RegressionTest99)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9874'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>70</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='80'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>72</block><killingTest>RegressionTest10.test02145(RegressionTest10)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>72</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>72</block><killingTest>RegressionTest104.test20870(RegressionTest104)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>13</index><block>71</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>72</block><killingTest>RegressionTest104.test20870(RegressionTest104)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>69</block><killingTest>RegressionTest0.test00082(RegressionTest0)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9874'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>70</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1021'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>69</block><killingTest>RegressionTest99.test19881(RegressionTest99)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>70</block><killingTest>RegressionTest104.test20870(RegressionTest104)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>71</block><killingTest>RegressionTest36.test07347(RegressionTest36)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::subtract to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>72</block><killingTest>RegressionTest104.test20870(RegressionTest104)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::subtract to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>72</block><killingTest>RegressionTest33.test06729(RegressionTest33)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>37</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='430'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>41</index><block>114</block><killingTest>RegressionTest34.test06935(RegressionTest34)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='430'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>114</block><killingTest>RegressionTest34.test06935(RegressionTest34)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='66'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>114</block><killingTest>RegressionTest106.test21302(RegressionTest106)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>114</block><killingTest>RegressionTest5.test01086(RegressionTest5)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='430'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>114</block><killingTest>RegressionTest34.test06935(RegressionTest34)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='33'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>112</block><killingTest>RegressionTest5.test01086(RegressionTest5)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4657'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>112</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='430'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>114</block><killingTest>RegressionTest34.test06935(RegressionTest34)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>114</block><killingTest>RegressionTest31.test06381(RegressionTest31)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>113</block><killingTest>RegressionTest100.test20013(RegressionTest100)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::tan</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>45</index><block>114</block><killingTest>RegressionTest31.test06381(RegressionTest31)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::tan</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4657'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>112</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='33'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>112</block><killingTest>RegressionTest5.test01086(RegressionTest5)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>113</block><killingTest>RegressionTest100.test20013(RegressionTest100)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::tan to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>114</block><killingTest>RegressionTest31.test06381(RegressionTest31)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::tan to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='106'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>44</index><block>114</block><killingTest>RegressionTest37.test07581(RegressionTest37)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>37</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='175'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>41</index><block>117</block><killingTest>RegressionTest56.test11327(RegressionTest56)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='175'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>117</block><killingTest>RegressionTest56.test11327(RegressionTest56)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>115</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4149'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>115</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='175'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>117</block><killingTest>RegressionTest56.test11327(RegressionTest56)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>117</block><killingTest>RegressionTest105.test21013(RegressionTest105)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>116</block><killingTest>RegressionTest25.test05171(RegressionTest25)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::tanh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>45</index><block>117</block><killingTest>RegressionTest105.test21013(RegressionTest105)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::tanh</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4149'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>115</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>115</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>116</block><killingTest>RegressionTest25.test05171(RegressionTest25)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::tanh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>117</block><killingTest>RegressionTest105.test21013(RegressionTest105)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::tanh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>44</index><block>117</block><killingTest>RegressionTest27.test05545(RegressionTest27)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
</mutations>
