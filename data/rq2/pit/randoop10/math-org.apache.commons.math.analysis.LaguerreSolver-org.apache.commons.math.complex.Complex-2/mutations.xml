<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='45'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTest>RegressionTest116.test23275(RegressionTest116)</killingTest><description>Removed assignment to member variable real</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTest>RegressionTest100.test20098(RegressionTest100)</killingTest><description>Removed assignment to member variable imaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3989'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>25</index><block>5</block><killingTest>RegressionTest31.test06391(RegressionTest31)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>5</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>42</index><block>7</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>57</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>63</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6086'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>78</index><block>10</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='77'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>93</index><block>11</block><killingTest>RegressionTest82.test16467(RegressionTest82)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>99</index><block>11</block><killingTest>RegressionTest37.test07477(RegressionTest37)</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9283'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTest>RegressionTest0.test00088(RegressionTest0)</killingTest><description>Substituted NaN with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>4</block><killingTest>RegressionTest98.test19673(RegressionTest98)</killingTest><description>Substituted Infinity with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>6</block><killingTest>RegressionTest82.test16424(RegressionTest82)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>9</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>11</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>8</block><killingTest>RegressionTest29.test05932(RegressionTest29)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>11</block><killingTest>RegressionTest37.test07477(RegressionTest37)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>11</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>11</block><killingTest>RegressionTest37.test07477(RegressionTest37)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>11</block><killingTest>RegressionTest37.test07477(RegressionTest37)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>6</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>9</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9326'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='236'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>3</block><killingTest>RegressionTest98.test19673(RegressionTest98)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>5</block><killingTest>RegressionTest53.test10704(RegressionTest53)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>5</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>7</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6086'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>10</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>11</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>99</index><block>11</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>2</block><killingTest>RegressionTest0.test00088(RegressionTest0)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>19</index><block>4</block><killingTest>RegressionTest98.test19673(RegressionTest98)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>43</index><block>7</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>65</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6086'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>79</index><block>10</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>101</index><block>11</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9326'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>1</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='236'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>15</index><block>3</block><killingTest>RegressionTest98.test19673(RegressionTest98)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4486'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>6</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>73</index><block>9</block><killingTest>RegressionTest21.test04360(RegressionTest21)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>1</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>15</index><block>3</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>6</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>73</index><block>9</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>30</index><block>5</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>30</index><block>5</block><killingTest>RegressionTest53.test10704(RegressionTest53)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTest>RegressionTest0.test00088(RegressionTest0)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>4</block><killingTest>RegressionTest98.test19673(RegressionTest98)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>7</block><killingTest/><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>8</block><killingTest>RegressionTest12.test02463(RegressionTest12)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>10</block><killingTest>RegressionTest21.test04360(RegressionTest21)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>101</index><block>11</block><killingTest>RegressionTest104.test20828(RegressionTest104)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>75</block><killingTest>RegressionTest70.test14155(RegressionTest70)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>75</block><killingTest>RegressionTest70.test14155(RegressionTest70)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>75</block><killingTest>RegressionTest70.test14155(RegressionTest70)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>73</block><killingTest>RegressionTest37.test07405(RegressionTest37)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3953'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>75</block><killingTest>RegressionTest110.test22065(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::sqrt1z</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>75</block><killingTest>RegressionTest110.test22065(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>75</block><killingTest>RegressionTest110.test22065(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>75</block><killingTest>RegressionTest110.test22065(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>75</block><killingTest>RegressionTest110.test22065(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::negate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>75</block><killingTest>RegressionTest110.test22065(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>74</block><killingTest>RegressionTest1.test00336(RegressionTest1)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>23</index><block>75</block><killingTest>RegressionTest110.test22065(RegressionTest110)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3953'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>73</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>73</block><killingTest>RegressionTest37.test07405(RegressionTest37)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>74</block><killingTest>RegressionTest1.test00336(RegressionTest1)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::acos to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>75</block><killingTest>RegressionTest110.test22065(RegressionTest110)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::acos to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>75</block><killingTest>RegressionTest70.test14155(RegressionTest70)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::sqrt1z with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>75</block><killingTest>RegressionTest90.test18152(RegressionTest90)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>75</block><killingTest>RegressionTest90.test18152(RegressionTest90)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>75</block><killingTest>RegressionTest70.test14155(RegressionTest70)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::log with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>21</index><block>75</block><killingTest>RegressionTest90.test18152(RegressionTest90)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::negate with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>acos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>75</block><killingTest>RegressionTest90.test18152(RegressionTest90)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>12</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>12</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>12</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>12</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>12</block><killingTest>RegressionTest14.test02817(RegressionTest14)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>15</index><block>12</block><killingTest>RegressionTest14.test02817(RegressionTest14)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>12</block><killingTest>RegressionTest14.test02817(RegressionTest14)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>14</index><block>12</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>78</block><killingTest>RegressionTest101.test20390(RegressionTest101)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>78</block><killingTest>RegressionTest101.test20390(RegressionTest101)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>78</block><killingTest>RegressionTest101.test20390(RegressionTest101)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>76</block><killingTest>RegressionTest101.test20390(RegressionTest101)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4856'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>76</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>78</block><killingTest>RegressionTest10.test02185(RegressionTest10)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::sqrt1z</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>78</block><killingTest>RegressionTest10.test02185(RegressionTest10)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>78</block><killingTest>RegressionTest10.test02185(RegressionTest10)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>78</block><killingTest>RegressionTest10.test02185(RegressionTest10)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>78</block><killingTest>RegressionTest10.test02185(RegressionTest10)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::negate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>78</block><killingTest>RegressionTest10.test02185(RegressionTest10)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>77</block><killingTest>RegressionTest93.test18632(RegressionTest93)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::asin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>23</index><block>78</block><killingTest>RegressionTest10.test02185(RegressionTest10)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4856'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>76</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>76</block><killingTest>RegressionTest101.test20390(RegressionTest101)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>77</block><killingTest>RegressionTest93.test18632(RegressionTest93)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::asin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>78</block><killingTest>RegressionTest10.test02185(RegressionTest10)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::asin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>14</index><block>78</block><killingTest>RegressionTest101.test20390(RegressionTest101)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::sqrt1z with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>78</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>78</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>78</block><killingTest>RegressionTest101.test20390(RegressionTest101)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::log with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>21</index><block>78</block><killingTest>RegressionTest83.test16778(RegressionTest83)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::negate with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='70'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>asin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>78</block><killingTest>RegressionTest83.test16778(RegressionTest83)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>15</index><block>81</block><killingTest>RegressionTest115.test23158(RegressionTest115)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::subtract with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>81</block><killingTest>RegressionTest115.test23158(RegressionTest115)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>27</index><block>81</block><killingTest>RegressionTest115.test23158(RegressionTest115)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>79</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8219'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>79</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>81</block><killingTest>RegressionTest30.test06064(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>81</block><killingTest>RegressionTest30.test06064(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>81</block><killingTest>RegressionTest30.test06064(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>81</block><killingTest>RegressionTest30.test06064(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>81</block><killingTest>RegressionTest30.test06064(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>81</block><killingTest>RegressionTest0.test00106(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>81</block><killingTest>RegressionTest30.test06064(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>80</block><killingTest>RegressionTest9.test01918(RegressionTest9)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::atan</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>28</index><block>81</block><killingTest>RegressionTest30.test06064(RegressionTest30)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::atan</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8219'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>79</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>79</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>80</block><killingTest>RegressionTest9.test01918(RegressionTest9)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::atan to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>81</block><killingTest>RegressionTest30.test06064(RegressionTest30)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::atan to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::subtract with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>81</block><killingTest>RegressionTest115.test23158(RegressionTest115)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>20</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::log with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>25</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>26</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>atan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>27</index><block>81</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7628'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>18</index><block>15</block><killingTest>RegressionTest25.test05181(RegressionTest25)</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>13</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8457'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>13</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>15</block><killingTest>RegressionTest40.test08171(RegressionTest40)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>RegressionTest37.test07561(RegressionTest37)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::conjugate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>15</block><killingTest>RegressionTest40.test08171(RegressionTest40)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::conjugate</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8457'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>13</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>13</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>RegressionTest37.test07561(RegressionTest37)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::conjugate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>15</block><killingTest>RegressionTest40.test08171(RegressionTest40)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::conjugate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7628'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>15</block><killingTest>RegressionTest25.test05181(RegressionTest25)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>84</block><killingTest>RegressionTest9.test01957(RegressionTest9)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>84</block><killingTest>RegressionTest9.test01957(RegressionTest9)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='57'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>84</block><killingTest>RegressionTest82.test16467(RegressionTest82)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='163'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>27</index><block>84</block><killingTest>RegressionTest92.test18560(RegressionTest92)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1456'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>24</index><block>84</block><killingTest>RegressionTest21.test04281(RegressionTest21)</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>84</block><killingTest>RegressionTest32.test06573(RegressionTest32)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>84</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>82</block><killingTest>RegressionTest45.test09033(RegressionTest45)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5998'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>82</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>84</block><killingTest>RegressionTest9.test01957(RegressionTest9)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>84</block><killingTest>RegressionTest9.test01957(RegressionTest9)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='163'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>84</block><killingTest>RegressionTest92.test18560(RegressionTest92)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='163'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>84</block><killingTest>RegressionTest92.test18560(RegressionTest92)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>84</block><killingTest>RegressionTest96.test19259(RegressionTest96)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>83</block><killingTest>RegressionTest9.test01918(RegressionTest9)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>30</index><block>84</block><killingTest>RegressionTest96.test19259(RegressionTest96)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::cos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5998'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>82</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>82</block><killingTest>RegressionTest45.test09033(RegressionTest45)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>83</block><killingTest>RegressionTest9.test01918(RegressionTest9)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::cos to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>84</block><killingTest>RegressionTest96.test19259(RegressionTest96)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::cos to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>29</index><block>84</block><killingTest>RegressionTest9.test01957(RegressionTest9)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>87</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>87</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>87</block><killingTest>RegressionTest29.test05932(RegressionTest29)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>87</block><killingTest>RegressionTest29.test05932(RegressionTest29)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>87</block><killingTest>RegressionTest29.test05932(RegressionTest29)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>87</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>85</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3551'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>85</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>87</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>87</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>87</block><killingTest>RegressionTest29.test05932(RegressionTest29)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>87</block><killingTest>RegressionTest29.test05932(RegressionTest29)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>87</block><killingTest>RegressionTest33.test06636(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>86</block><killingTest>RegressionTest84.test16853(RegressionTest84)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>87</block><killingTest>RegressionTest33.test06636(RegressionTest33)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::cosh</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3551'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>85</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>85</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>86</block><killingTest>RegressionTest84.test16853(RegressionTest84)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::cosh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>87</block><killingTest>RegressionTest33.test06636(RegressionTest33)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::cosh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>87</block><killingTest>RegressionTest102.test20466(RegressionTest102)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>118</block><killingTest>RegressionTest113.test22774(RegressionTest113)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>118</block><killingTest>RegressionTest113.test22774(RegressionTest113)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>118</block><killingTest>RegressionTest113.test22774(RegressionTest113)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::createComplex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3782'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>56</index><block>25</block><killingTest>RegressionTest51.test10238(RegressionTest51)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='160'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>58</index><block>25</block><killingTest>RegressionTest114.test22882(RegressionTest114)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8569'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='159'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>19</block><killingTest>RegressionTest59.test11986(RegressionTest59)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='130'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>20</block><killingTest>RegressionTest2.test00538(RegressionTest2)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>26</block><killingTest>RegressionTest2.test00538(RegressionTest2)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>122</index><block>29</block><killingTest>RegressionTest59.test11986(RegressionTest59)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>134</index><block>30</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>27</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>27</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='98'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>28</block><killingTest>RegressionTest110.test22002(RegressionTest110)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>28</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>28</block><killingTest>RegressionTest2.test00538(RegressionTest2)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>28</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>28</block><killingTest>RegressionTest2.test00538(RegressionTest2)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>28</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>28</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='76'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>28</block><killingTest>RegressionTest106.test21320(RegressionTest106)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='63'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><block>28</block><killingTest>RegressionTest104.test20847(RegressionTest104)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>30</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>30</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>31</block><killingTest>RegressionTest84.test16947(RegressionTest84)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>31</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>31</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>31</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><block>31</block><killingTest>RegressionTest59.test11986(RegressionTest59)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>31</block><killingTest>RegressionTest84.test16947(RegressionTest84)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>31</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='80'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><block>31</block><killingTest>RegressionTest100.test20090(RegressionTest100)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>31</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='137'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>17</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='120'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>19</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='120'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>20</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>22</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>23</block><killingTest>RegressionTest115.test23158(RegressionTest115)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>25</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>26</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>29</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='79'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>16</block><killingTest>RegressionTest33.test06703(RegressionTest33)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8805'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>17</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='120'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>19</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='120'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>19</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5531'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>22</block><killingTest>RegressionTest12.test02576(RegressionTest12)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>23</block><killingTest>RegressionTest115.test23158(RegressionTest115)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3782'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>25</block><killingTest>RegressionTest51.test10238(RegressionTest51)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>25</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>116</index><block>28</block><killingTest>RegressionTest0.test00106(RegressionTest0)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>137</index><block>30</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>175</index><block>31</block><killingTest>RegressionTest27.test05515(RegressionTest27)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>13</index><block>18</block><killingTest>RegressionTest0.test00088(RegressionTest0)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>38</index><block>21</block><killingTest>RegressionTest41.test08385(RegressionTest41)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>51</index><block>24</block><killingTest>RegressionTest108.test21609(RegressionTest108)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>79</index><block>27</block><killingTest/><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>117</index><block>28</block><killingTest>RegressionTest0.test00106(RegressionTest0)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>138</index><block>30</block><killingTest/><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>176</index><block>31</block><killingTest>RegressionTest27.test05515(RegressionTest27)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>16</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8805'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>17</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1324'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>19</block><killingTest>RegressionTest21.test04335(RegressionTest21)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1324'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>34</index><block>20</block><killingTest>RegressionTest21.test04335(RegressionTest21)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5531'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>22</block><killingTest>RegressionTest12.test02576(RegressionTest12)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5531'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>23</block><killingTest>RegressionTest12.test02576(RegressionTest12)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8409'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>66</index><block>26</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8567'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>124</index><block>29</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='79'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>16</block><killingTest>RegressionTest33.test06703(RegressionTest33)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='137'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>17</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='120'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>19</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='120'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>34</index><block>20</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>22</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>23</block><killingTest>RegressionTest115.test23158(RegressionTest115)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>66</index><block>26</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>124</index><block>29</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>60</index><block>25</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3782'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>60</index><block>25</block><killingTest>RegressionTest51.test10238(RegressionTest51)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>18</block><killingTest>RegressionTest0.test00088(RegressionTest0)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>21</block><killingTest>RegressionTest41.test08385(RegressionTest41)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>24</block><killingTest>RegressionTest108.test21609(RegressionTest108)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>27</block><killingTest/><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>117</index><block>28</block><killingTest>RegressionTest0.test00106(RegressionTest0)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>138</index><block>30</block><killingTest/><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>176</index><block>31</block><killingTest>RegressionTest27.test05515(RegressionTest27)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>78</index><block>27</block><killingTest/><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>116</index><block>28</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>137</index><block>30</block><killingTest/><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>175</index><block>31</block><killingTest>RegressionTest115.test23158(RegressionTest115)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='307'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>84</index><block>42</block><killingTest>RegressionTest28.test05676(RegressionTest28)</killingTest><description>replaced boolean return with false for org/apache/commons/math/complex/Complex::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>84</index><block>42</block><killingTest>RegressionTest23.test04727(RegressionTest23)</killingTest><description>replaced boolean return with true for org/apache/commons/math/complex/Complex::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>33</block><killingTest>RegressionTest28.test05676(RegressionTest28)</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>35</block><killingTest>RegressionTest32.test06478(RegressionTest32)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='288'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>40</block><killingTest>RegressionTest52.test10464(RegressionTest52)</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>41</block><killingTest>RegressionTest10.test02076(RegressionTest10)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>42</block><killingTest>RegressionTest23.test04727(RegressionTest23)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>32</block><killingTest>RegressionTest23.test04727(RegressionTest23)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>34</block><killingTest>RegressionTest32.test06478(RegressionTest32)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='506'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>36</block><killingTest>RegressionTest101.test20330(RegressionTest101)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>38</block><killingTest>RegressionTest110.test22002(RegressionTest110)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='116'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>39</block><killingTest>RegressionTest84.test16907(RegressionTest84)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3649'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>36</block><killingTest>RegressionTest65.test13149(RegressionTest65)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='280'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>37</block><killingTest>RegressionTest65.test13149(RegressionTest65)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>38</block><killingTest>RegressionTest110.test22002(RegressionTest110)</killingTest><description>removed call to java/lang/Double::doubleToRawLongBits</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='186'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>38</block><killingTest>RegressionTest110.test22105(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='186'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>38</block><killingTest>RegressionTest110.test22105(RegressionTest110)</killingTest><description>removed call to java/lang/Double::doubleToRawLongBits</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='116'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>39</block><killingTest>RegressionTest84.test16907(RegressionTest84)</killingTest><description>removed call to java/lang/Double::doubleToRawLongBits</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='580'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>39</block><killingTest>RegressionTest21.test04246(RegressionTest21)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='580'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>39</block><killingTest>RegressionTest21.test04246(RegressionTest21)</killingTest><description>removed call to java/lang/Double::doubleToRawLongBits</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>34</block><killingTest>RegressionTest32.test06478(RegressionTest32)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3649'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>33</index><block>36</block><killingTest>RegressionTest65.test13149(RegressionTest65)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='288'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>51</index><block>38</block><killingTest>RegressionTest52.test10464(RegressionTest52)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='288'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>59</index><block>39</block><killingTest>RegressionTest52.test10464(RegressionTest52)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>32</block><killingTest>RegressionTest23.test04727(RegressionTest23)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='821'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>34</block><killingTest>RegressionTest52.test10464(RegressionTest52)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='506'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>33</index><block>36</block><killingTest>RegressionTest101.test20330(RegressionTest101)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>51</index><block>38</block><killingTest>RegressionTest110.test22002(RegressionTest110)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='116'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>59</index><block>39</block><killingTest>RegressionTest84.test16907(RegressionTest84)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>84</index><block>42</block><killingTest>RegressionTest23.test04727(RegressionTest23)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>15</index><block>90</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>replaced call to java/lang/Math::exp with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>90</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='286'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>90</block><killingTest>RegressionTest20.test04017(RegressionTest20)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='286'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>90</block><killingTest>RegressionTest20.test04017(RegressionTest20)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>90</block><killingTest>RegressionTest85.test17099(RegressionTest85)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>88</block><killingTest>RegressionTest85.test17099(RegressionTest85)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7990'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>90</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>removed call to java/lang/Math::exp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>90</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='286'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>90</block><killingTest>RegressionTest20.test04017(RegressionTest20)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>90</block><killingTest>RegressionTest21.test04272(RegressionTest21)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>89</block><killingTest>RegressionTest110.test22054(RegressionTest110)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::exp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>31</index><block>90</block><killingTest>RegressionTest21.test04272(RegressionTest21)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::exp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7990'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>88</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>88</block><killingTest>RegressionTest85.test17099(RegressionTest85)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>89</block><killingTest>RegressionTest110.test22054(RegressionTest110)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::exp to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>90</block><killingTest>RegressionTest21.test04272(RegressionTest21)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::exp to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>30</index><block>90</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>46</block><killingTest>RegressionTest100.test20098(RegressionTest100)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>46</block><killingTest>RegressionTest100.test20098(RegressionTest100)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>47</block><killingTest>RegressionTest116.test23275(RegressionTest116)</killingTest><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>47</block><killingTest>RegressionTest116.test23275(RegressionTest116)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>44</block><killingTest/><description>Substituted 7 with 8</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>45</block><killingTest/><description>Substituted 37 with 38</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>45</block><killingTest/><description>Substituted 17 with 18</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>45</block><killingTest>RegressionTest111.test22398(RegressionTest111)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>45</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>45</block><killingTest>RegressionTest28.test05756(RegressionTest28)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>43</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>43</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>45</block><killingTest/><description>removed call to org/apache/commons/math/util/MathUtils::hash</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>45</block><killingTest/><description>removed call to org/apache/commons/math/util/MathUtils::hash</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>44</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math/complex/Complex::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>24</index><block>45</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math/complex/Complex::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>43</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>43</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>44</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>45</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>23</index><block>56</block><killingTest>RegressionTest112.test22413(RegressionTest112)</killingTest><description>replaced boolean return with true for org/apache/commons/math/complex/Complex::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='202'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>55</block><killingTest>RegressionTest27.test05455(RegressionTest27)</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>56</block><killingTest>RegressionTest112.test22413(RegressionTest112)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='202'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>52</block><killingTest>RegressionTest27.test05455(RegressionTest27)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>53</block><killingTest>RegressionTest103.test20774(RegressionTest103)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>54</block><killingTest>RegressionTest103.test20774(RegressionTest103)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='769'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>52</block><killingTest>RegressionTest17.test03539(RegressionTest17)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='202'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>53</block><killingTest>RegressionTest27.test05455(RegressionTest27)</killingTest><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9403'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>54</block><killingTest/><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='202'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>52</block><killingTest>RegressionTest27.test05455(RegressionTest27)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>53</block><killingTest>RegressionTest103.test20774(RegressionTest103)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9403'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>54</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='769'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>52</block><killingTest>RegressionTest17.test03539(RegressionTest17)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='202'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>53</block><killingTest>RegressionTest27.test05455(RegressionTest27)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>54</block><killingTest>RegressionTest103.test20774(RegressionTest103)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isInfinite</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>56</block><killingTest>RegressionTest112.test22413(RegressionTest112)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>20</index><block>51</block><killingTest>RegressionTest20.test04008(RegressionTest20)</killingTest><description>replaced boolean return with true for org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>50</block><killingTest>RegressionTest16.test03378(RegressionTest16)</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>51</block><killingTest>RegressionTest20.test04008(RegressionTest20)</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>48</block><killingTest>RegressionTest20.test04008(RegressionTest20)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>49</block><killingTest>RegressionTest20.test04008(RegressionTest20)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='139'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>48</block><killingTest>RegressionTest6.test01368(RegressionTest6)</killingTest><description>removed call to java/lang/Double::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4455'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>49</block><killingTest>RegressionTest32.test06565(RegressionTest32)</killingTest><description>removed call to java/lang/Double::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>48</block><killingTest>RegressionTest20.test04008(RegressionTest20)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4455'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>49</block><killingTest>RegressionTest32.test06565(RegressionTest32)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='139'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>48</block><killingTest>RegressionTest6.test01368(RegressionTest6)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>49</block><killingTest>RegressionTest20.test04008(RegressionTest20)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>51</block><killingTest>RegressionTest16.test03378(RegressionTest16)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>93</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>replaced call to java/lang/Math::log with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>21</index><block>93</block><killingTest>RegressionTest12.test02570(RegressionTest12)</killingTest><description>replaced call to java/lang/Math::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>91</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8922'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>91</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>93</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>93</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>removed call to java/lang/Math::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>93</block><killingTest>RegressionTest12.test02570(RegressionTest12)</killingTest><description>removed call to java/lang/Math::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>93</block><killingTest>RegressionTest14.test02822(RegressionTest14)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>92</block><killingTest>RegressionTest1.test00336(RegressionTest1)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>23</index><block>93</block><killingTest>RegressionTest14.test02822(RegressionTest14)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8922'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>91</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>91</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>92</block><killingTest>RegressionTest1.test00336(RegressionTest1)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::log to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>93</block><killingTest>RegressionTest14.test02822(RegressionTest14)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::log to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>93</block><killingTest>RegressionTest1.test00293(RegressionTest1)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>65</block><killingTest>RegressionTest10.test02170(RegressionTest10)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>65</block><killingTest>RegressionTest10.test02170(RegressionTest10)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>65</block><killingTest>RegressionTest12.test02511(RegressionTest12)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>65</block><killingTest>RegressionTest10.test02170(RegressionTest10)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>65</block><killingTest>RegressionTest10.test02170(RegressionTest10)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='122'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>65</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>57</block><killingTest>RegressionTest20.test04008(RegressionTest20)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>58</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>60</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>61</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>62</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>63</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>57</block><killingTest>RegressionTest68.test13782(RegressionTest68)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9134'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>58</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2525'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>60</block><killingTest>RegressionTest76.test15359(RegressionTest76)</killingTest><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9058'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>61</block><killingTest/><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9058'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>62</block><killingTest/><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9058'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>63</block><killingTest/><description>removed call to java/lang/Double::isInfinite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>65</block><killingTest>RegressionTest107.test21461(RegressionTest107)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>13</index><block>59</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>37</index><block>64</block><killingTest>RegressionTest35.test07030(RegressionTest35)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>65</index><block>65</block><killingTest>RegressionTest107.test21461(RegressionTest107)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>57</block><killingTest>RegressionTest20.test04008(RegressionTest20)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9134'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>58</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>60</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>61</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>62</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9058'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>63</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>57</block><killingTest>RegressionTest68.test13782(RegressionTest68)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>58</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2525'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>60</block><killingTest>RegressionTest76.test15359(RegressionTest76)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9058'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>61</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9058'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>62</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>63</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>59</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>64</block><killingTest>RegressionTest35.test07030(RegressionTest35)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>65</block><killingTest>RegressionTest107.test21461(RegressionTest107)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='36'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>64</index><block>65</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>16</index><block>68</block><killingTest>RegressionTest14.test02899(RegressionTest14)</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='52'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>19</index><block>68</block><killingTest>RegressionTest12.test02511(RegressionTest12)</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>66</block><killingTest>RegressionTest2.test00557(RegressionTest2)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7256'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>66</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>68</block><killingTest>RegressionTest113.test22774(RegressionTest113)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>67</block><killingTest>RegressionTest26.test05257(RegressionTest26)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::negate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>21</index><block>68</block><killingTest>RegressionTest113.test22774(RegressionTest113)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::negate</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7256'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>66</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>66</block><killingTest>RegressionTest2.test00557(RegressionTest2)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>67</block><killingTest>RegressionTest26.test05257(RegressionTest26)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::negate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>68</block><killingTest>RegressionTest113.test22774(RegressionTest113)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::negate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='56'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>20</index><block>68</block><killingTest>RegressionTest14.test02899(RegressionTest14)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>96</block><killingTest>RegressionTest20.test04017(RegressionTest20)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>9</index><block>95</block><killingTest/><description>removed call to java/lang/NullPointerException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>94</block><killingTest>RegressionTest107.test21562(RegressionTest107)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>96</block><killingTest>RegressionTest107.test21562(RegressionTest107)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::log</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>96</block><killingTest>RegressionTest107.test21562(RegressionTest107)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>96</block><killingTest>RegressionTest107.test21562(RegressionTest107)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::exp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>19</index><block>96</block><killingTest>RegressionTest107.test21562(RegressionTest107)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::pow</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='426'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>94</block><killingTest>RegressionTest107.test21453(RegressionTest107)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>94</block><killingTest>RegressionTest107.test21562(RegressionTest107)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>96</block><killingTest>RegressionTest107.test21562(RegressionTest107)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::pow to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>96</block><killingTest>RegressionTest20.test04017(RegressionTest20)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::log with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>96</block><killingTest>RegressionTest109.test21967(RegressionTest109)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>96</block><killingTest>RegressionTest20.test04017(RegressionTest20)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::exp with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>99</block><killingTest>RegressionTest108.test21704(RegressionTest108)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>99</block><killingTest>RegressionTest108.test21704(RegressionTest108)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='130'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>99</block><killingTest>RegressionTest54.test10922(RegressionTest54)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='130'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>99</block><killingTest>RegressionTest54.test10922(RegressionTest54)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>99</block><killingTest>RegressionTest108.test21704(RegressionTest108)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>99</block><killingTest>RegressionTest103.test20774(RegressionTest103)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>97</block><killingTest>RegressionTest29.test05904(RegressionTest29)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7389'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>97</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>99</block><killingTest>RegressionTest108.test21704(RegressionTest108)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>99</block><killingTest>RegressionTest108.test21704(RegressionTest108)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='130'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>99</block><killingTest>RegressionTest54.test10922(RegressionTest54)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='130'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>99</block><killingTest>RegressionTest54.test10922(RegressionTest54)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>99</block><killingTest>RegressionTest35.test07099(RegressionTest35)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>98</block><killingTest>RegressionTest14.test02817(RegressionTest14)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>99</block><killingTest>RegressionTest35.test07099(RegressionTest35)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7389'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>97</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>97</block><killingTest>RegressionTest29.test05904(RegressionTest29)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>98</block><killingTest>RegressionTest14.test02817(RegressionTest14)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>99</block><killingTest>RegressionTest35.test07099(RegressionTest35)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sin to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>99</block><killingTest>RegressionTest108.test21704(RegressionTest108)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>102</block><killingTest>RegressionTest35.test07144(RegressionTest35)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>102</block><killingTest>RegressionTest35.test07144(RegressionTest35)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>102</block><killingTest>RegressionTest114.test22868(RegressionTest114)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>102</block><killingTest>RegressionTest114.test22868(RegressionTest114)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>102</block><killingTest>RegressionTest10.test02023(RegressionTest10)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>102</block><killingTest>RegressionTest114.test22868(RegressionTest114)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>100</block><killingTest>RegressionTest35.test07144(RegressionTest35)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5329'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>102</block><killingTest>RegressionTest35.test07144(RegressionTest35)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>102</block><killingTest>RegressionTest35.test07144(RegressionTest35)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>102</block><killingTest>RegressionTest114.test22868(RegressionTest114)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>102</block><killingTest>RegressionTest114.test22868(RegressionTest114)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>102</block><killingTest>RegressionTest19.test03878(RegressionTest19)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>101</block><killingTest>RegressionTest58.test11733(RegressionTest58)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>102</block><killingTest>RegressionTest19.test03878(RegressionTest19)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sinh</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5329'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>100</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>100</block><killingTest>RegressionTest35.test07144(RegressionTest35)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>101</block><killingTest>RegressionTest58.test11733(RegressionTest58)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sinh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>102</block><killingTest>RegressionTest19.test03878(RegressionTest19)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sinh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>102</block><killingTest>RegressionTest35.test07144(RegressionTest35)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='118'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>35</index><block>108</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>41</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>68</index><block>110</block><killingTest>RegressionTest83.test16778(RegressionTest83)</killingTest><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>75</index><block>110</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::indicator with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7893'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>108</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>105</block><killingTest>RegressionTest0.test00156(RegressionTest0)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>106</block><killingTest>RegressionTest0.test00156(RegressionTest0)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>107</block><killingTest>RegressionTest49.test09924(RegressionTest49)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>107</block><killingTest>RegressionTest70.test14155(RegressionTest70)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='148'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>109</block><killingTest>RegressionTest76.test15244(RegressionTest76)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>110</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='148'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>109</block><killingTest>RegressionTest76.test15244(RegressionTest76)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='148'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>109</block><killingTest>RegressionTest76.test15244(RegressionTest76)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>110</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>110</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>110</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>103</block><killingTest>RegressionTest49.test09924(RegressionTest49)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>105</block><killingTest>RegressionTest0.test00156(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>106</block><killingTest>RegressionTest0.test00156(RegressionTest0)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8483'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>103</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>107</block><killingTest>RegressionTest32.test06530(RegressionTest32)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>109</block><killingTest>RegressionTest30.test06082(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>110</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>75</index><block>110</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::indicator</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>110</block><killingTest>RegressionTest107.test21461(RegressionTest107)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>104</block><killingTest>RegressionTest58.test11718(RegressionTest58)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>107</block><killingTest>RegressionTest32.test06530(RegressionTest32)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>61</index><block>109</block><killingTest>RegressionTest30.test06082(RegressionTest30)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>79</index><block>110</block><killingTest>RegressionTest107.test21461(RegressionTest107)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8483'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>103</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>105</block><killingTest>RegressionTest0.test00156(RegressionTest0)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>106</block><killingTest>RegressionTest0.test00156(RegressionTest0)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>103</block><killingTest>RegressionTest49.test09924(RegressionTest49)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>105</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8414'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>106</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>49</index><block>108</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='118'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>49</index><block>108</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>104</block><killingTest>RegressionTest58.test11718(RegressionTest58)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>107</block><killingTest>RegressionTest32.test06530(RegressionTest32)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>109</block><killingTest>RegressionTest30.test06082(RegressionTest30)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>110</block><killingTest>RegressionTest107.test21461(RegressionTest107)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='742'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>107</block><killingTest>RegressionTest52.test10464(RegressionTest52)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>60</index><block>109</block><killingTest>RegressionTest4.test00840(RegressionTest4)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>78</index><block>110</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='116'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>9</index><block>111</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>111</block><killingTest>RegressionTest10.test02170(RegressionTest10)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::subtract with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>111</block><killingTest>RegressionTest10.test02170(RegressionTest10)</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>111</block><killingTest>RegressionTest10.test02170(RegressionTest10)</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>111</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>111</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>111</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>111</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>12</index><block>111</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::sqrt1z</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>111</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::sqrt1z to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>6</index><block>111</block><killingTest>RegressionTest10.test02170(RegressionTest10)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='116'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>111</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>111</block><killingTest>RegressionTest66.test13368(RegressionTest66)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::subtract with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='116'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>sqrt1z</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>11</index><block>111</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::sqrt with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='132'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>72</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='42'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>72</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>69</block><killingTest>RegressionTest2.test00429(RegressionTest2)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='37'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>70</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1366'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>69</block><killingTest>RegressionTest107.test21581(RegressionTest107)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9157'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>70</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='132'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>72</block><killingTest>RegressionTest49.test09905(RegressionTest49)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getReal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='42'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>72</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>72</block><killingTest>RegressionTest110.test22188(RegressionTest110)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>13</index><block>71</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>72</block><killingTest>RegressionTest110.test22188(RegressionTest110)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>69</block><killingTest>RegressionTest2.test00429(RegressionTest2)</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9157'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>70</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1366'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>69</block><killingTest>RegressionTest107.test21581(RegressionTest107)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='37'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>70</block><killingTest>RegressionTest26.test05229(RegressionTest26)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>71</block><killingTest>RegressionTest30.test06145(RegressionTest30)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::subtract to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>72</block><killingTest>RegressionTest110.test22188(RegressionTest110)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::subtract to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='42'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>72</block><killingTest>RegressionTest116.test23313(RegressionTest116)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>114</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>114</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>37</index><block>114</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>41</index><block>114</block><killingTest>RegressionTest32.test06573(RegressionTest32)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>114</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>114</block><killingTest>RegressionTest32.test06573(RegressionTest32)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>114</block><killingTest>RegressionTest7.test01600(RegressionTest7)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>114</block><killingTest>RegressionTest7.test01600(RegressionTest7)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>114</block><killingTest>RegressionTest7.test01600(RegressionTest7)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>114</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>114</block><killingTest>RegressionTest32.test06573(RegressionTest32)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>112</block><killingTest>RegressionTest7.test01600(RegressionTest7)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1943'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>112</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>114</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>114</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>114</block><killingTest>RegressionTest37.test07485(RegressionTest37)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>114</block><killingTest>RegressionTest32.test06573(RegressionTest32)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>114</block><killingTest>RegressionTest42.test08485(RegressionTest42)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>113</block><killingTest>RegressionTest93.test18632(RegressionTest93)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::tan</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>45</index><block>114</block><killingTest>RegressionTest42.test08485(RegressionTest42)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::tan</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1943'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>112</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>112</block><killingTest>RegressionTest7.test01600(RegressionTest7)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>113</block><killingTest>RegressionTest93.test18632(RegressionTest93)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::tan to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>114</block><killingTest>RegressionTest42.test08485(RegressionTest42)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::tan to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tan</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>44</index><block>114</block><killingTest>RegressionTest32.test06538(RegressionTest32)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::cosh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>replaced call to java/lang/Math::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>37</index><block>117</block><killingTest>RegressionTest45.test09199(RegressionTest45)</killingTest><description>replaced call to org/apache/commons/math/util/MathUtils::sinh with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>41</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>replaced call to java/lang/Math::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>117</block><killingTest>RegressionTest79.test15858(RegressionTest79)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>117</block><killingTest>RegressionTest45.test09199(RegressionTest45)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>115</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2218'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>115</block><killingTest/><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::cosh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>removed call to java/lang/Math::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>117</block><killingTest>RegressionTest45.test09199(RegressionTest45)</killingTest><description>removed call to org/apache/commons/math/util/MathUtils::sinh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>removed call to java/lang/Math::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>117</block><killingTest>RegressionTest16.test03382(RegressionTest16)</killingTest><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>116</block><killingTest>RegressionTest8.test01740(RegressionTest8)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::tanh</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>45</index><block>117</block><killingTest>RegressionTest16.test03382(RegressionTest16)</killingTest><description>replaced return value with null for org/apache/commons/math/complex/Complex::tanh</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2218'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>115</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>115</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>116</block><killingTest>RegressionTest8.test01740(RegressionTest8)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::tanh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>117</block><killingTest>RegressionTest16.test03382(RegressionTest16)</killingTest><description>mutated return of Object value for org/apache/commons/math/complex/Complex::tanh to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>tanh</mutatedMethod><methodDescription>()Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>44</index><block>117</block><killingTest>RegressionTest53.test10745(RegressionTest53)</killingTest><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description></mutation>
</mutations>
