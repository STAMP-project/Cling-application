import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test03501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03501");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval4 = mutableInterval2.toInterval();
        mutableInterval2.setStartMillis(1644572130296L);
        mutableInterval2.setStartMillis(1644572353467L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(interval4);
    }

    @Test
    public void test03502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03502");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField69 = chronology66.weeks();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.yearOfCentury();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.062Z/2022-02-11T09:40:04.062Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.062Z/2022-02-11T09:40:04.062Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.062Z/2022-02-11T09:40:04.062Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404062L + "'", long14 == 1644572404062L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404062L + "'", long30 == 1644572404062L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
    }

    @Test
    public void test03503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03503");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        mutableInterval70.setEndMillis(1644572130296L);
        org.joda.time.MutableInterval mutableInterval73 = mutableInterval70.toMutableInterval();
        org.joda.time.DateTime dateTime74 = mutableInterval70.getStart();
        org.joda.time.Interval interval75 = mutableInterval70.toInterval();
        org.joda.time.MutableInterval mutableInterval76 = mutableInterval70.toMutableInterval();
        java.lang.String str77 = mutableInterval70.toString();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:04.083Z/2022-02-11T09:40:04.083Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:04.083Z/2022-02-11T09:40:04.083Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:04.083Z/2022-02-11T09:40:04.083Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572404083L + "'", long16 == 1644572404083L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572404083L + "'", long32 == 1644572404083L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(mutableInterval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(mutableInterval76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:30.296Z" + "'", str77, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:30.296Z");
    }

    @Test
    public void test03504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03504");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.hourOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField74 = chronology66.centuries();
        org.joda.time.DateTimeField dateTimeField75 = chronology66.secondOfDay();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((java.lang.Object) chronology66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: org.joda.time.chrono.ISOChronology");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.107Z/2022-02-11T09:40:04.107Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.107Z/2022-02-11T09:40:04.107Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.107Z/2022-02-11T09:40:04.107Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404107L + "'", long14 == 1644572404107L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404107L + "'", long30 == 1644572404107L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03505");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.MutableInterval mutableInterval17 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology18 = mutableInterval17.getChronology();
        org.joda.time.DateTimeField dateTimeField19 = chronology18.monthOfYear();
        org.joda.time.DateTimeField dateTimeField20 = chronology18.millisOfDay();
        mutableInterval10.setChronology(chronology18);
        org.joda.time.Period period22 = mutableInterval10.toPeriod();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = mutableInterval25.toPeriod(periodType26);
        java.lang.Object obj28 = mutableInterval25.clone();
        org.joda.time.DateTime dateTime29 = mutableInterval25.getStart();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        mutableInterval48.setDurationAfterStart(0L);
        boolean boolean52 = mutableInterval48.equals((java.lang.Object) (-1));
        long long53 = mutableInterval48.getEndMillis();
        org.joda.time.DateTime dateTime54 = mutableInterval48.getEnd();
        boolean boolean55 = mutableInterval41.isAfter((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean56 = dateTime38.isAfter((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        boolean boolean77 = mutableInterval73.overlaps((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.ReadablePeriod readablePeriod78 = null;
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readablePeriod78, readableInstant79);
        long long81 = mutableInterval80.toDurationMillis();
        boolean boolean82 = mutableInterval76.isAfter((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.ReadableInstant readableInstant83 = null;
        boolean boolean84 = mutableInterval80.contains(readableInstant83);
        boolean boolean85 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.Duration duration86 = mutableInterval80.toDuration();
        org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableDuration) duration86);
        boolean boolean88 = mutableInterval25.contains((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Chronology chronology89 = dateTime54.getChronology();
        org.joda.time.DateTimeField dateTimeField90 = chronology89.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField91 = chronology89.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField92 = chronology89.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField93 = chronology89.secondOfDay();
        org.joda.time.DateTimeField dateTimeField94 = chronology89.millisOfSecond();
        org.joda.time.DurationField durationField95 = chronology89.halfdays();
        org.joda.time.Chronology chronology96 = chronology89.withUTC();
        mutableInterval10.setChronology(chronology89);
        boolean boolean98 = mutableInterval10.isAfterNow();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572404129L + "'", long7 == 1644572404129L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutableInterval17);
        org.junit.Assert.assertNotNull(chronology18);
        org.junit.Assert.assertNotNull(dateTimeField19);
        org.junit.Assert.assertNotNull(dateTimeField20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals(obj28.toString(), "2022-02-11T09:40:04.129Z/2022-02-11T09:40:04.129Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "2022-02-11T09:40:04.129Z/2022-02-11T09:40:04.129Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "2022-02-11T09:40:04.129Z/2022-02-11T09:40:04.129Z");
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572404129L + "'", long37 == 1644572404129L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1644572404129L + "'", long53 == 1644572404129L);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(chronology89);
        org.junit.Assert.assertNotNull(dateTimeField90);
        org.junit.Assert.assertNotNull(dateTimeField91);
        org.junit.Assert.assertNotNull(dateTimeField92);
        org.junit.Assert.assertNotNull(dateTimeField93);
        org.junit.Assert.assertNotNull(dateTimeField94);
        org.junit.Assert.assertNotNull(durationField95);
        org.junit.Assert.assertNotNull(chronology96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test03506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03506");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.millisOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.millisOfDay();
        org.joda.time.DateTimeField dateTimeField75 = chronology66.millisOfSecond();
        org.joda.time.Chronology chronology76 = chronology66.withUTC();
        org.joda.time.DurationField durationField77 = chronology66.hours();
        org.joda.time.DateTimeField dateTimeField78 = chronology66.monthOfYear();
        // The following exception was thrown during execution in test generation
        try {
            long long84 = chronology66.getDateTimeMillis(0L, (int) (byte) -1, (int) (short) 100, (int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.180Z/2022-02-11T09:40:04.180Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.180Z/2022-02-11T09:40:04.180Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.180Z/2022-02-11T09:40:04.180Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404180L + "'", long14 == 1644572404180L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404181L + "'", long30 == 1644572404181L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
    }

    @Test
    public void test03507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03507");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        mutableInterval2.setEndMillis(1644572128327L);
        org.joda.time.Period period77 = mutableInterval2.toPeriod();
        org.joda.time.DateTime dateTime78 = mutableInterval2.getEnd();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        boolean boolean85 = mutableInterval81.overlaps((org.joda.time.ReadableInterval) mutableInterval84);
        org.joda.time.ReadablePeriod readablePeriod86 = null;
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval(readablePeriod86, readableInstant87);
        long long89 = mutableInterval88.toDurationMillis();
        boolean boolean90 = mutableInterval84.isAfter((org.joda.time.ReadableInterval) mutableInterval88);
        long long91 = mutableInterval88.getEndMillis();
        mutableInterval88.setDurationBeforeEnd(1644572160545L);
        boolean boolean94 = mutableInterval2.isBefore((org.joda.time.ReadableInterval) mutableInterval88);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572404202L + "'", long22 == 1644572404202L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572404202L + "'", long38 == 1644572404202L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1644572404202L + "'", long91 == 1644572404202L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test03508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03508");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        boolean boolean19 = mutableInterval16.contains(readableInstant18);
        boolean boolean20 = mutableInterval10.contains((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = mutableInterval26.toPeriod(periodType27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period28, readableInstant29);
        boolean boolean31 = mutableInterval23.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Period period32 = mutableInterval23.toPeriod();
        boolean boolean33 = mutableInterval16.contains((org.joda.time.ReadableInterval) mutableInterval23);
        mutableInterval23.setDurationBeforeEnd(1644572156469L);
        org.joda.time.Chronology chronology36 = mutableInterval23.getChronology();
        org.joda.time.DateTimeField dateTimeField37 = chronology36.minuteOfHour();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(chronology36);
        org.junit.Assert.assertNotNull(dateTimeField37);
    }

    @Test
    public void test03509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03509");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572149850L, 1644572157887L);
        org.joda.time.Duration duration3 = mutableInterval2.toDuration();
        org.joda.time.ReadableDuration readableDuration4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int5 = duration3.compareTo(readableDuration4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test03510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03510");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DurationField durationField70 = chronology66.millis();
        org.joda.time.DurationField durationField71 = chronology66.weekyears();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.secondOfMinute();
        org.joda.time.ReadablePartial readablePartial75 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long77 = chronology66.set(readablePartial75, 1644572158033L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.277Z/2022-02-11T09:40:04.277Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.277Z/2022-02-11T09:40:04.277Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.277Z/2022-02-11T09:40:04.277Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404277L + "'", long14 == 1644572404277L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404277L + "'", long30 == 1644572404277L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03511");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.MutableInterval mutableInterval18 = mutableInterval14.toMutableInterval();
        org.joda.time.Duration duration19 = mutableInterval18.toDuration();
        org.joda.time.MutableInterval mutableInterval20 = mutableInterval18.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = mutableInterval23.toPeriod(periodType24);
        java.lang.Object obj26 = mutableInterval23.clone();
        org.joda.time.DateTime dateTime27 = mutableInterval23.getStart();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        boolean boolean43 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        mutableInterval46.setDurationAfterStart(0L);
        boolean boolean50 = mutableInterval46.equals((java.lang.Object) (-1));
        long long51 = mutableInterval46.getEndMillis();
        org.joda.time.DateTime dateTime52 = mutableInterval46.getEnd();
        boolean boolean53 = mutableInterval39.isAfter((org.joda.time.ReadableInstant) dateTime52);
        boolean boolean54 = dateTime36.isAfter((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        boolean boolean75 = mutableInterval71.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadablePeriod readablePeriod76 = null;
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readablePeriod76, readableInstant77);
        long long79 = mutableInterval78.toDurationMillis();
        boolean boolean80 = mutableInterval74.isAfter((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.ReadableInstant readableInstant81 = null;
        boolean boolean82 = mutableInterval78.contains(readableInstant81);
        boolean boolean83 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.Duration duration84 = mutableInterval78.toDuration();
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableDuration) duration84);
        boolean boolean86 = mutableInterval23.contains((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Chronology chronology87 = dateTime52.getChronology();
        org.joda.time.DateTimeField dateTimeField88 = chronology87.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField89 = chronology87.yearOfEra();
        org.joda.time.DateTimeField dateTimeField90 = chronology87.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField91 = chronology87.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField92 = chronology87.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField93 = chronology87.hourOfHalfday();
        org.joda.time.Chronology chronology94 = chronology87.withUTC();
        org.joda.time.DurationField durationField95 = chronology87.years();
        org.joda.time.DurationField durationField96 = chronology87.weeks();
        org.joda.time.DurationField durationField97 = chronology87.millis();
        org.joda.time.DurationField durationField98 = chronology87.millis();
        mutableInterval18.setChronology(chronology87);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(mutableInterval18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(mutableInterval20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(obj26);
// flaky:         org.junit.Assert.assertEquals(obj26.toString(), "2022-02-11T09:40:04.296Z/2022-02-11T09:40:04.296Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "2022-02-11T09:40:04.296Z/2022-02-11T09:40:04.296Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "2022-02-11T09:40:04.296Z/2022-02-11T09:40:04.296Z");
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572404296L + "'", long35 == 1644572404296L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572404296L + "'", long51 == 1644572404296L);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertNotNull(dateTimeField88);
        org.junit.Assert.assertNotNull(dateTimeField89);
        org.junit.Assert.assertNotNull(dateTimeField90);
        org.junit.Assert.assertNotNull(dateTimeField91);
        org.junit.Assert.assertNotNull(dateTimeField92);
        org.junit.Assert.assertNotNull(dateTimeField93);
        org.junit.Assert.assertNotNull(chronology94);
        org.junit.Assert.assertNotNull(durationField95);
        org.junit.Assert.assertNotNull(durationField96);
        org.junit.Assert.assertNotNull(durationField97);
        org.junit.Assert.assertNotNull(durationField98);
    }

    @Test
    public void test03512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03512");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTime dateTime71 = mutableInterval70.getEnd();
        mutableInterval70.setInterval(1644572127359L, 1644572130296L);
        org.joda.time.Chronology chronology75 = mutableInterval70.getChronology();
        org.joda.time.DateTimeField dateTimeField76 = chronology75.minuteOfDay();
        java.lang.String str77 = chronology75.toString();
        org.joda.time.DurationField durationField78 = chronology75.minutes();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:04.445Z/2022-02-11T09:40:04.445Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:04.445Z/2022-02-11T09:40:04.445Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:04.445Z/2022-02-11T09:40:04.445Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572404445L + "'", long16 == 1644572404445L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572404445L + "'", long32 == 1644572404445L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str77, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(durationField78);
    }

    @Test
    public void test03513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03513");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.yearOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfMonth();
        org.joda.time.DurationField durationField72 = chronology68.weeks();
        org.joda.time.Chronology chronology73 = chronology68.withUTC();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.clockhourOfHalfday();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(1644572369575L, 1644572250327L, chronology68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:04.495Z/2022-02-11T09:40:04.495Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:04.495Z/2022-02-11T09:40:04.495Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:04.495Z/2022-02-11T09:40:04.495Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572404495L + "'", long16 == 1644572404495L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572404495L + "'", long32 == 1644572404495L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03514");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        java.lang.String str3 = mutableInterval2.toString();
        org.joda.time.MutableInterval mutableInterval4 = mutableInterval2.toMutableInterval();
        org.joda.time.Interval interval5 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        long long11 = mutableInterval8.getEndMillis();
        boolean boolean13 = mutableInterval8.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval14 = mutableInterval8.copy();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        boolean boolean24 = mutableInterval20.isAfter(readableInstant23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        mutableInterval27.setStartMillis(1644572127942L);
        boolean boolean32 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        boolean boolean33 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.Period period41 = mutableInterval39.toPeriod();
        mutableInterval27.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period41);
        boolean boolean43 = mutableInterval8.isAfter((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.DateTime dateTime44 = mutableInterval27.getEnd();
        boolean boolean45 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.Period period46 = mutableInterval27.toPeriod();
        long long47 = mutableInterval27.getEndMillis();
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "2022-02-11T09:40:04.554Z/2022-02-11T09:40:04.554Z" + "'", str3, "2022-02-11T09:40:04.554Z/2022-02-11T09:40:04.554Z");
        org.junit.Assert.assertNotNull(mutableInterval4);
        org.junit.Assert.assertNotNull(interval5);
        org.junit.Assert.assertNotNull(period10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1644572404554L + "'", long11 == 1644572404554L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mutableInterval14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(period46);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572404554L + "'", long47 == 1644572404554L);
    }

    @Test
    public void test03515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03515");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.hourOfDay();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.centuryOfEra();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.582Z/2022-02-11T09:40:04.582Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.582Z/2022-02-11T09:40:04.582Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.582Z/2022-02-11T09:40:04.582Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404582L + "'", long14 == 1644572404582L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404582L + "'", long30 == 1644572404582L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03516");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        boolean boolean25 = period21.equals((java.lang.Object) readableInstant23);
        mutableInterval5.setPeriodAfterStart((org.joda.time.ReadablePeriod) period21);
        mutableInterval5.setDurationAfterStart((long) 1);
        boolean boolean30 = mutableInterval5.isBefore((long) (byte) 100);
        boolean boolean32 = mutableInterval5.contains(1644572135746L);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readablePeriod40, readableInstant41);
        long long43 = mutableInterval42.toDurationMillis();
        boolean boolean44 = mutableInterval38.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        java.lang.String str49 = mutableInterval38.toString();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.Period period54 = mutableInterval52.toPeriod(periodType53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        boolean boolean58 = period54.equals((java.lang.Object) readableInstant56);
        mutableInterval38.setPeriodAfterStart((org.joda.time.ReadablePeriod) period54);
        org.joda.time.Period period60 = period54.toPeriod();
        org.joda.time.DurationFieldType durationFieldType62 = period54.getFieldType((int) (short) 0);
        mutableInterval5.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period54);
        boolean boolean65 = mutableInterval5.contains(0L);
        mutableInterval5.setDurationAfterStart(1644572382368L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:04.607Z/2022-02-11T09:40:04.607Z" + "'", str16, "2022-02-11T09:40:04.607Z/2022-02-11T09:40:04.607Z");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "2022-02-11T09:40:04.607Z/2022-02-11T09:40:04.607Z" + "'", str49, "2022-02-11T09:40:04.607Z/2022-02-11T09:40:04.607Z");
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test03517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03517");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572128154L, 1644572169904L);
        long long3 = mutableInterval2.getStartMillis();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        java.lang.Object obj11 = mutableInterval8.clone();
        org.joda.time.DateTime dateTime12 = mutableInterval8.getStart();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        mutableInterval15.setDurationAfterStart(0L);
        boolean boolean19 = mutableInterval15.equals((java.lang.Object) (-1));
        long long20 = mutableInterval15.getEndMillis();
        org.joda.time.DateTime dateTime21 = mutableInterval15.getEnd();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        boolean boolean28 = mutableInterval24.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        mutableInterval31.setDurationAfterStart(0L);
        boolean boolean35 = mutableInterval31.equals((java.lang.Object) (-1));
        long long36 = mutableInterval31.getEndMillis();
        org.joda.time.DateTime dateTime37 = mutableInterval31.getEnd();
        boolean boolean38 = mutableInterval24.isAfter((org.joda.time.ReadableInstant) dateTime37);
        boolean boolean39 = dateTime21.isAfter((org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        boolean boolean46 = mutableInterval42.overlaps((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readablePeriod47, readableInstant48);
        long long50 = mutableInterval49.toDurationMillis();
        boolean boolean51 = mutableInterval45.isAfter((org.joda.time.ReadableInterval) mutableInterval49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        boolean boolean53 = mutableInterval49.contains(readableInstant52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        boolean boolean60 = mutableInterval56.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadablePeriod readablePeriod61 = null;
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readablePeriod61, readableInstant62);
        long long64 = mutableInterval63.toDurationMillis();
        boolean boolean65 = mutableInterval59.isAfter((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.ReadableInstant readableInstant66 = null;
        boolean boolean67 = mutableInterval63.contains(readableInstant66);
        boolean boolean68 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.Duration duration69 = mutableInterval63.toDuration();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = mutableInterval8.contains((org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.Chronology chronology72 = dateTime37.getChronology();
        org.joda.time.DateTimeField dateTimeField73 = chronology72.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology72);
        org.joda.time.DateTime dateTime75 = mutableInterval74.getEnd();
        org.joda.time.DateTime dateTime76 = mutableInterval74.getStart();
        org.joda.time.MutableInterval mutableInterval77 = mutableInterval74.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval78 = mutableInterval77.copy();
        mutableInterval2.setInterval((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.Duration duration80 = mutableInterval78.toDuration();
        java.lang.String str81 = mutableInterval78.toString();
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval78.setStartMillis(1644572351771L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1644572128154L + "'", long3 == 1644572128154L);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals(obj11.toString(), "2022-02-11T09:40:04.765Z/2022-02-11T09:40:04.765Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "2022-02-11T09:40:04.765Z/2022-02-11T09:40:04.765Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "2022-02-11T09:40:04.765Z/2022-02-11T09:40:04.765Z");
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1644572404765L + "'", long20 == 1644572404765L);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1644572404765L + "'", long36 == 1644572404765L);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(chronology72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertNotNull(mutableInterval77);
        org.junit.Assert.assertNotNull(mutableInterval78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str81, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
    }

    @Test
    public void test03518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03518");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.MutableInterval mutableInterval3 = new org.joda.time.MutableInterval(readableInstant1, readableDuration2);
        mutableInterval3.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant6 = null;
        boolean boolean7 = mutableInterval3.contains(readableInstant6);
        long long8 = mutableInterval3.getEndMillis();
        org.joda.time.DateTime dateTime9 = mutableInterval3.getStart();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        boolean boolean16 = mutableInterval12.equals((java.lang.Object) (-1));
        long long17 = mutableInterval12.getEndMillis();
        org.joda.time.DateTime dateTime18 = mutableInterval12.getEnd();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        mutableInterval28.setDurationAfterStart(0L);
        boolean boolean32 = mutableInterval28.equals((java.lang.Object) (-1));
        long long33 = mutableInterval28.getEndMillis();
        org.joda.time.DateTime dateTime34 = mutableInterval28.getEnd();
        boolean boolean35 = mutableInterval21.isAfter((org.joda.time.ReadableInstant) dateTime34);
        boolean boolean36 = dateTime18.isAfter((org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime9, (org.joda.time.ReadableInstant) dateTime34);
        boolean boolean39 = dateTime9.equals((java.lang.Object) 1644572133514L);
        org.joda.time.Chronology chronology40 = dateTime9.getChronology();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval((java.lang.Object) 1644572132748L, chronology40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572404806L + "'", long8 == 1644572404806L);
        org.junit.Assert.assertNotNull(dateTime9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1644572404806L + "'", long17 == 1644572404806L);
        org.junit.Assert.assertNotNull(dateTime18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1644572404806L + "'", long33 == 1644572404806L);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(chronology40);
    }

    @Test
    public void test03519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03519");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DurationField durationField69 = chronology66.hours();
        java.lang.String str70 = chronology66.toString();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.dayOfWeek();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.840Z/2022-02-11T09:40:04.840Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.840Z/2022-02-11T09:40:04.840Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.840Z/2022-02-11T09:40:04.840Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404840L + "'", long14 == 1644572404840L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404840L + "'", long30 == 1644572404840L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str70, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(dateTimeField71);
    }

    @Test
    public void test03520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03520");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        org.joda.time.DateTimeField dateTimeField70 = chronology67.weekyearOfCentury();
        org.joda.time.DurationField durationField71 = chronology67.weeks();
        org.joda.time.DateTimeField dateTimeField72 = chronology67.minuteOfDay();
        org.joda.time.DurationField durationField73 = chronology67.days();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.863Z/2022-02-11T09:40:04.863Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.863Z/2022-02-11T09:40:04.863Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.863Z/2022-02-11T09:40:04.863Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404863L + "'", long14 == 1644572404863L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404863L + "'", long30 == 1644572404863L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
    }

    @Test
    public void test03521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03521");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.hourOfHalfday();
        org.joda.time.DurationField durationField71 = chronology66.hours();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.minuteOfDay();
        org.joda.time.DurationField durationField73 = chronology66.seconds();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.weekyear();
        org.joda.time.DateTimeField dateTimeField75 = chronology66.millisOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.891Z/2022-02-11T09:40:04.891Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.891Z/2022-02-11T09:40:04.891Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.891Z/2022-02-11T09:40:04.891Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404891L + "'", long14 == 1644572404891L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404891L + "'", long30 == 1644572404891L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03522");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        org.joda.time.DateTimeField dateTimeField70 = chronology67.weekyearOfCentury();
        org.joda.time.DateTimeZone dateTimeZone71 = null;
        org.joda.time.Chronology chronology72 = chronology67.withZone(dateTimeZone71);
        org.joda.time.ReadablePeriod readablePeriod73 = null;
        long long76 = chronology67.add(readablePeriod73, 1644572288725L, 10);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.938Z/2022-02-11T09:40:04.938Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.938Z/2022-02-11T09:40:04.938Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.938Z/2022-02-11T09:40:04.938Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404938L + "'", long14 == 1644572404938L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404938L + "'", long30 == 1644572404938L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(chronology72);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1644572288725L + "'", long76 == 1644572288725L);
    }

    @Test
    public void test03523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03523");
        org.joda.time.MutableInterval mutableInterval0 = new org.joda.time.MutableInterval();
        boolean boolean1 = mutableInterval0.isAfterNow();
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        boolean boolean8 = period6.isSupported(durationFieldType7);
        boolean boolean10 = period6.equals((java.lang.Object) "hi!");
        int int11 = period6.size();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.Period period19 = mutableInterval17.toPeriod();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = mutableInterval22.toPeriod(periodType23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = period24.isSupported(durationFieldType25);
        boolean boolean28 = period24.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType30 = period24.getFieldType(0);
        int int31 = period19.get(durationFieldType30);
        int int32 = period6.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType34 = period6.getFieldType(0);
        org.joda.time.PeriodType periodType35 = period6.getPeriodType();
        org.joda.time.Period period36 = mutableInterval0.toPeriod(periodType35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        boolean boolean43 = mutableInterval39.equals((java.lang.Object) (-1));
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getEnd();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        boolean boolean52 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        mutableInterval55.setDurationAfterStart(0L);
        boolean boolean59 = mutableInterval55.equals((java.lang.Object) (-1));
        long long60 = mutableInterval55.getEndMillis();
        org.joda.time.DateTime dateTime61 = mutableInterval55.getEnd();
        boolean boolean62 = mutableInterval48.isAfter((org.joda.time.ReadableInstant) dateTime61);
        boolean boolean63 = dateTime45.isAfter((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        mutableInterval66.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        long long71 = mutableInterval66.getEndMillis();
        org.joda.time.DateTime dateTime72 = mutableInterval66.getStart();
        boolean boolean73 = dateTime45.isAfter((org.joda.time.ReadableInstant) dateTime72);
        org.joda.time.DateTimeZone dateTimeZone74 = dateTime45.getZone();
        boolean boolean75 = mutableInterval0.contains((org.joda.time.ReadableInstant) dateTime45);
        long long76 = mutableInterval0.toDurationMillis();
        boolean boolean78 = mutableInterval0.isBefore(1644572268521L);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572404960L + "'", long44 == 1644572404960L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1644572404960L + "'", long60 == 1644572404960L);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572404960L + "'", long71 == 1644572404960L);
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(dateTimeZone74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test03524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03524");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField70 = chronology66.weeks();
        org.joda.time.Chronology chronology71 = chronology66.withUTC();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.clockhourOfHalfday();
        org.joda.time.Chronology chronology73 = chronology66.withUTC();
        org.joda.time.DurationField durationField74 = chronology73.millis();
        org.joda.time.DateTimeField dateTimeField75 = chronology73.hourOfHalfday();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:04.984Z/2022-02-11T09:40:04.984Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:04.984Z/2022-02-11T09:40:04.984Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:04.984Z/2022-02-11T09:40:04.984Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572404985L + "'", long14 == 1644572404985L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572404985L + "'", long30 == 1644572404985L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03525");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        long long16 = mutableInterval6.getStartMillis();
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readablePeriod17, readableInstant18);
        long long20 = mutableInterval19.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        mutableInterval23.setDurationAfterStart(0L);
        boolean boolean27 = mutableInterval23.equals((java.lang.Object) (-1));
        long long28 = mutableInterval23.getEndMillis();
        org.joda.time.DateTime dateTime29 = mutableInterval23.getEnd();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        boolean boolean43 = mutableInterval39.equals((java.lang.Object) (-1));
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getEnd();
        boolean boolean46 = mutableInterval32.isAfter((org.joda.time.ReadableInstant) dateTime45);
        boolean boolean47 = dateTime29.isAfter((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.DateTimeZone dateTimeZone48 = dateTime29.getZone();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        mutableInterval51.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        long long56 = mutableInterval51.getEndMillis();
        org.joda.time.DateTime dateTime57 = mutableInterval51.getStart();
        boolean boolean58 = dateTime29.isEqual((org.joda.time.ReadableInstant) dateTime57);
        boolean boolean59 = mutableInterval19.isBefore((org.joda.time.ReadableInstant) dateTime57);
// flaky:         mutableInterval6.setStart((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Period period61 = mutableInterval6.toPeriod();
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = mutableInterval68.toPeriod(periodType69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        boolean boolean77 = mutableInterval73.overlaps((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.Period period78 = mutableInterval76.toPeriod();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        org.joda.time.PeriodType periodType82 = null;
        org.joda.time.Period period83 = mutableInterval81.toPeriod(periodType82);
        org.joda.time.DurationFieldType durationFieldType84 = null;
        boolean boolean85 = period83.isSupported(durationFieldType84);
        boolean boolean87 = period83.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType89 = period83.getFieldType(0);
        int int90 = period78.get(durationFieldType89);
        int int91 = period70.get(durationFieldType89);
        mutableInterval64.setPeriodAfterStart((org.joda.time.ReadablePeriod) period70);
        org.joda.time.Interval interval93 = mutableInterval64.toInterval();
        org.joda.time.Chronology chronology94 = mutableInterval64.getChronology();
        org.joda.time.DateTimeField dateTimeField95 = chronology94.weekyear();
        org.joda.time.DateTimeField dateTimeField96 = chronology94.weekyear();
        org.joda.time.DateTimeField dateTimeField97 = chronology94.centuryOfEra();
        org.joda.time.DurationField durationField98 = chronology94.centuries();
        boolean boolean99 = period61.equals((java.lang.Object) chronology94);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572405014L + "'", long7 == 1644572405014L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572405014L + "'", long16 == 1644572405014L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1644572405014L + "'", long28 == 1644572405014L);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572405014L + "'", long44 == 1644572405014L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(dateTimeZone48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1644572405014L + "'", long56 == 1644572405014L);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(interval93);
        org.junit.Assert.assertNotNull(chronology94);
        org.junit.Assert.assertNotNull(dateTimeField95);
        org.junit.Assert.assertNotNull(dateTimeField96);
        org.junit.Assert.assertNotNull(dateTimeField97);
        org.junit.Assert.assertNotNull(durationField98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03526");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        boolean boolean25 = period21.equals((java.lang.Object) readableInstant23);
        mutableInterval5.setPeriodAfterStart((org.joda.time.ReadablePeriod) period21);
        mutableInterval5.setStartMillis(1644572133843L);
        long long29 = mutableInterval5.getStartMillis();
        boolean boolean30 = mutableInterval5.isAfterNow();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        mutableInterval35.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval43 = mutableInterval35.copy();
        boolean boolean45 = mutableInterval35.contains(1644572125519L);
        org.joda.time.Chronology chronology46 = mutableInterval35.getChronology();
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(0L, 1644572131452L, chronology46);
        org.joda.time.DurationField durationField48 = chronology46.days();
        org.joda.time.DateTimeField dateTimeField49 = chronology46.dayOfWeek();
        mutableInterval5.setChronology(chronology46);
        org.joda.time.ReadablePeriod readablePeriod51 = null;
        mutableInterval5.setPeriodAfterStart(readablePeriod51);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:05.078Z/2022-02-11T09:40:05.078Z" + "'", str16, "2022-02-11T09:40:05.078Z/2022-02-11T09:40:05.078Z");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572133843L + "'", long29 == 1644572133843L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(mutableInterval43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(chronology46);
        org.junit.Assert.assertNotNull(durationField48);
        org.junit.Assert.assertNotNull(dateTimeField49);
    }

    @Test
    public void test03527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03527");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        java.lang.Object obj12 = mutableInterval9.clone();
        org.joda.time.DateTime dateTime13 = mutableInterval9.getStart();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getEnd();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        boolean boolean39 = mutableInterval25.isAfter((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean40 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        boolean boolean69 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.Duration duration70 = mutableInterval64.toDuration();
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = mutableInterval9.contains((org.joda.time.ReadableInstant) dateTime38);
        mutableInterval9.setStartMillis(1644572128269L);
        org.joda.time.DateTime dateTime75 = mutableInterval9.getEnd();
        boolean boolean76 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime75);
        org.joda.time.ReadablePeriod readablePeriod77 = null;
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(readablePeriod77, readableInstant78);
        long long80 = mutableInterval79.toDurationMillis();
        org.joda.time.DateTime dateTime81 = mutableInterval79.getStart();
        org.joda.time.DateTimeFieldType dateTimeFieldType82 = null;
        boolean boolean83 = dateTime81.isSupported(dateTimeFieldType82);
        org.joda.time.Instant instant84 = dateTime81.toInstant();
        boolean boolean85 = dateTime75.isEqual((org.joda.time.ReadableInstant) instant84);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(obj12);
// flaky:         org.junit.Assert.assertEquals(obj12.toString(), "2022-02-11T09:40:05.092Z/2022-02-11T09:40:05.092Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "2022-02-11T09:40:05.092Z/2022-02-11T09:40:05.092Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "2022-02-11T09:40:05.092Z/2022-02-11T09:40:05.092Z");
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572405092L + "'", long21 == 1644572405092L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572405092L + "'", long37 == 1644572405092L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(instant84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test03528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03528");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        java.lang.Object obj14 = mutableInterval11.clone();
        org.joda.time.DateTime dateTime15 = mutableInterval11.getStart();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        mutableInterval18.setDurationAfterStart(0L);
        boolean boolean22 = mutableInterval18.equals((java.lang.Object) (-1));
        long long23 = mutableInterval18.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval18.getEnd();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        mutableInterval34.setDurationAfterStart(0L);
        boolean boolean38 = mutableInterval34.equals((java.lang.Object) (-1));
        long long39 = mutableInterval34.getEndMillis();
        org.joda.time.DateTime dateTime40 = mutableInterval34.getEnd();
        boolean boolean41 = mutableInterval27.isAfter((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean42 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = mutableInterval11.contains((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Chronology chronology75 = dateTime40.getChronology();
        org.joda.time.DateTimeField dateTimeField76 = chronology75.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField77 = chronology75.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField78 = chronology75.dayOfWeek();
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(1644572136401L, 1644572141513L, chronology75);
        org.joda.time.DateTimeField dateTimeField80 = chronology75.clockhourOfHalfday();
        mutableInterval2.setChronology(chronology75);
        long long85 = chronology75.add(1644572307705L, 1644572215785L, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals(obj14.toString(), "2022-02-11T09:40:05.169Z/2022-02-11T09:40:05.169Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "2022-02-11T09:40:05.169Z/2022-02-11T09:40:05.169Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "2022-02-11T09:40:05.169Z/2022-02-11T09:40:05.169Z");
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572405169L + "'", long23 == 1644572405169L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1644572405169L + "'", long39 == 1644572405169L);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 18090294465555L + "'", long85 == 18090294465555L);
    }

    @Test
    public void test03529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03529");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.contains(readableInstant5);
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        long long16 = mutableInterval15.getStartMillis();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        boolean boolean24 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = mutableInterval27.toPeriod(periodType28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period29, readableInstant30);
        long long32 = mutableInterval31.getStartMillis();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        boolean boolean40 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        boolean boolean41 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        mutableInterval47.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.isAfter(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        boolean boolean72 = mutableInterval68.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.ReadablePeriod readablePeriod73 = null;
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readablePeriod73, readableInstant74);
        long long76 = mutableInterval75.toDurationMillis();
        boolean boolean77 = mutableInterval71.isAfter((org.joda.time.ReadableInterval) mutableInterval75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        boolean boolean79 = mutableInterval75.contains(readableInstant78);
        boolean boolean80 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        org.joda.time.Duration duration81 = mutableInterval75.toDuration();
        mutableInterval47.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration81);
        mutableInterval44.setDurationAfterStart((org.joda.time.ReadableDuration) duration81);
        mutableInterval31.setDurationAfterStart((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Chronology chronology85 = mutableInterval31.getChronology();
        boolean boolean86 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval31);
        java.lang.String str87 = mutableInterval31.toString();
        org.joda.time.MutableInterval mutableInterval88 = mutableInterval31.copy();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572405226L + "'", long7 == 1644572405226L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572405226L + "'", long16 == 1644572405226L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(period29);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572405226L + "'", long32 == 1644572405226L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(chronology85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "2022-02-11T09:40:05.226Z/2022-02-11T09:40:05.226Z" + "'", str87, "2022-02-11T09:40:05.226Z/2022-02-11T09:40:05.226Z");
        org.junit.Assert.assertNotNull(mutableInterval88);
    }

    @Test
    public void test03530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03530");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval8 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        boolean boolean18 = mutableInterval14.isAfter(readableInstant17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        mutableInterval21.setDurationAfterStart(0L);
        mutableInterval21.setStartMillis(1644572127942L);
        boolean boolean26 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        boolean boolean27 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.Period period35 = mutableInterval33.toPeriod();
        mutableInterval21.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period35);
        boolean boolean37 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant38 = null;
        mutableInterval2.setStart(readableInstant38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        boolean boolean46 = mutableInterval42.overlaps((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readablePeriod47, readableInstant48);
        long long50 = mutableInterval49.toDurationMillis();
        boolean boolean51 = mutableInterval45.isAfter((org.joda.time.ReadableInterval) mutableInterval49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        boolean boolean56 = mutableInterval54.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = mutableInterval59.toPeriod(periodType60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        boolean boolean65 = period61.equals((java.lang.Object) readableInstant63);
        mutableInterval54.setPeriodAfterStart((org.joda.time.ReadablePeriod) period61);
        mutableInterval2.setInterval((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.MutableInterval mutableInterval69 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:18.123Z/2022-02-11T09:36:18.123Z");
        org.joda.time.Duration duration70 = mutableInterval69.toDuration();
        boolean boolean71 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval69);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval69.setInterval(1644572136342L, 2L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572405251L + "'", long5 == 1644572405251L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mutableInterval8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(mutableInterval69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test03531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03531");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.MutableInterval mutableInterval18 = mutableInterval14.toMutableInterval();
        org.joda.time.Duration duration19 = mutableInterval18.toDuration();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readablePeriod27, readableInstant28);
        long long30 = mutableInterval29.toDurationMillis();
        boolean boolean31 = mutableInterval25.isAfter((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        boolean boolean33 = mutableInterval29.contains(readableInstant32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        boolean boolean48 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.Duration duration49 = mutableInterval43.toDuration();
        boolean boolean51 = duration49.equals((java.lang.Object) 'a');
        long long52 = duration49.getMillis();
        long long53 = duration49.getMillis();
        int int54 = duration19.compareTo((org.joda.time.ReadableDuration) duration49);
        long long55 = duration49.getMillis();
        org.joda.time.Period period56 = duration49.toPeriod();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        mutableInterval59.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        long long64 = mutableInterval59.getEndMillis();
        org.joda.time.DateTime dateTime65 = mutableInterval59.getStart();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        mutableInterval68.setDurationAfterStart(0L);
        boolean boolean72 = mutableInterval68.equals((java.lang.Object) (-1));
        long long73 = mutableInterval68.getEndMillis();
        org.joda.time.DateTime dateTime74 = mutableInterval68.getEnd();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        boolean boolean81 = mutableInterval77.overlaps((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        mutableInterval84.setDurationAfterStart(0L);
        boolean boolean88 = mutableInterval84.equals((java.lang.Object) (-1));
        long long89 = mutableInterval84.getEndMillis();
        org.joda.time.DateTime dateTime90 = mutableInterval84.getEnd();
        boolean boolean91 = mutableInterval77.isAfter((org.joda.time.ReadableInstant) dateTime90);
        boolean boolean92 = dateTime74.isAfter((org.joda.time.ReadableInstant) dateTime90);
        org.joda.time.MutableInterval mutableInterval93 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime65, (org.joda.time.ReadableInstant) dateTime90);
        org.joda.time.MutableInterval mutableInterval94 = new org.joda.time.MutableInterval((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Interval interval95 = mutableInterval94.toInterval();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(mutableInterval18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1644572405271L + "'", long64 == 1644572405271L);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1644572405271L + "'", long73 == 1644572405271L);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long89 + "' != '" + 1644572405271L + "'", long89 == 1644572405271L);
        org.junit.Assert.assertNotNull(dateTime90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(interval95);
    }

    @Test
    public void test03532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03532");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.minutes();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.dayOfYear();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.year();
        // The following exception was thrown during execution in test generation
        try {
            long long17 = chronology8.getDateTimeMillis((int) (short) 0, (int) (short) 10, 0, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 0 for dayOfMonth must be in the range [1,31]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
    }

    @Test
    public void test03533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03533");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        org.joda.time.DateTimeField dateTimeField70 = chronology67.year();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:05.340Z/2022-02-11T09:40:05.340Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:05.340Z/2022-02-11T09:40:05.340Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:05.340Z/2022-02-11T09:40:05.340Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572405340L + "'", long14 == 1644572405340L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572405340L + "'", long30 == 1644572405340L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
    }

    @Test
    public void test03534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03534");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.MutableInterval mutableInterval75 = mutableInterval2.copy();
        long long76 = mutableInterval75.getEndMillis();
        long long77 = mutableInterval75.toDurationMillis();
        org.joda.time.Interval interval78 = mutableInterval75.toInterval();
        org.joda.time.DateTime dateTime79 = mutableInterval75.getStart();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572405366L + "'", long22 == 1644572405366L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572405366L + "'", long38 == 1644572405366L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(mutableInterval75);
// flaky:         org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1644572405366L + "'", long76 == 1644572405366L);
// flaky:         org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1644572405366L + "'", long77 == 1644572405366L);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
    }

    @Test
    public void test03535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03535");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.DateTime dateTime4 = mutableInterval2.getStart();
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = null;
        boolean boolean6 = dateTime4.isSupported(dateTimeFieldType5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        mutableInterval43.setDurationAfterStart(0L);
        boolean boolean47 = mutableInterval43.equals((java.lang.Object) (-1));
        long long48 = mutableInterval43.getEndMillis();
        org.joda.time.DateTime dateTime49 = mutableInterval43.getEnd();
        boolean boolean50 = mutableInterval36.isAfter((org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime49);
        boolean boolean52 = dateTime4.isEqual((org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = dateTime4.get(dateTimeFieldType53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(dateTime4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572405461L + "'", long14 == 1644572405461L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572405461L + "'", long30 == 1644572405461L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1644572405461L + "'", long48 == 1644572405461L);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test03536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03536");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572323167L, 1644572188189L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03537");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572125518L, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03538");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.minutes();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.halfdayOfDay();
        org.joda.time.DurationField durationField12 = chronology8.weeks();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
    }

    @Test
    public void test03539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03539");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572222215L, 1644572375111L);
    }

    @Test
    public void test03540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03540");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readablePeriod14, readableInstant15);
        long long17 = mutableInterval16.toDurationMillis();
        boolean boolean18 = mutableInterval12.isAfter((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        boolean boolean20 = mutableInterval16.contains(readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        boolean boolean35 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Duration duration36 = mutableInterval30.toDuration();
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant43 = null;
        boolean boolean44 = mutableInterval40.isAfter(readableInstant43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        boolean boolean65 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadablePeriod readablePeriod66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readablePeriod66, readableInstant67);
        long long69 = mutableInterval68.toDurationMillis();
        boolean boolean70 = mutableInterval64.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.contains(readableInstant71);
        boolean boolean73 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.Duration duration74 = mutableInterval68.toDuration();
        mutableInterval40.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration74);
        org.joda.time.MutableInterval mutableInterval76 = mutableInterval40.toMutableInterval();
        org.joda.time.DateTime dateTime77 = mutableInterval76.getEnd();
        org.joda.time.Interval interval78 = mutableInterval76.toInterval();
        org.joda.time.DateTime dateTime79 = interval78.getStart();
        org.joda.time.DateTime dateTime80 = interval78.getEnd();
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime80);
        org.joda.time.Chronology chronology82 = dateTime80.getChronology();
        org.joda.time.Chronology chronology83 = dateTime80.getChronology();
        // The following exception was thrown during execution in test generation
        try {
            long long88 = chronology83.getDateTimeMillis((int) (short) -1, (int) (short) -1, 0, 10);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(mutableInterval76);
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertNotNull(dateTime80);
        org.junit.Assert.assertNotNull(chronology82);
        org.junit.Assert.assertNotNull(chronology83);
    }

    @Test
    public void test03541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03541");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572301615L, 1644572174280L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03542");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfWeek();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(1644572136401L, 1644572141513L, chronology68);
        org.joda.time.DateTimeField dateTimeField73 = chronology68.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.weekyear();
        org.joda.time.DateTimeZone dateTimeZone75 = chronology68.getZone();
        org.joda.time.DurationField durationField76 = chronology68.days();
        org.joda.time.DateTimeField dateTimeField77 = chronology68.weekyear();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:05.880Z/2022-02-11T09:40:05.880Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:05.880Z/2022-02-11T09:40:05.880Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:05.880Z/2022-02-11T09:40:05.880Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572405880L + "'", long16 == 1644572405880L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572405880L + "'", long32 == 1644572405880L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeZone75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
    }

    @Test
    public void test03543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03543");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.MutableInterval mutableInterval3 = new org.joda.time.MutableInterval(readableInstant1, readableDuration2);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = mutableInterval3.toPeriod(periodType4);
        java.lang.Object obj6 = mutableInterval3.clone();
        org.joda.time.DateTime dateTime7 = mutableInterval3.getStart();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        long long15 = mutableInterval10.getEndMillis();
        org.joda.time.DateTime dateTime16 = mutableInterval10.getEnd();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        boolean boolean33 = mutableInterval19.isAfter((org.joda.time.ReadableInstant) dateTime32);
        boolean boolean34 = dateTime16.isAfter((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        boolean boolean41 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readablePeriod42, readableInstant43);
        long long45 = mutableInterval44.toDurationMillis();
        boolean boolean46 = mutableInterval40.isAfter((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        boolean boolean48 = mutableInterval44.contains(readableInstant47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        boolean boolean63 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.Duration duration64 = mutableInterval58.toDuration();
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = mutableInterval3.contains((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Chronology chronology67 = dateTime32.getChronology();
        org.joda.time.DateTimeField dateTimeField68 = chronology67.year();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.monthOfYear();
        long long75 = chronology67.getDateTimeMillis(1644572130375L, 0, (int) (short) 0, 1, (int) (short) 100);
        org.joda.time.DurationField durationField76 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField77 = chronology67.hourOfHalfday();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.ReadableDuration readableDuration82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readableInstant81, readableDuration82);
        boolean boolean84 = mutableInterval80.overlaps((org.joda.time.ReadableInterval) mutableInterval83);
        org.joda.time.ReadableInstant readableInstant85 = null;
        boolean boolean86 = mutableInterval83.contains(readableInstant85);
        org.joda.time.Period period87 = mutableInterval83.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod88 = period87.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod89 = mutablePeriod88.toMutablePeriod();
        java.lang.Object obj90 = null;
        boolean boolean91 = mutablePeriod88.equals(obj90);
        org.joda.time.Period period92 = mutablePeriod88.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod93 = mutablePeriod88.toMutablePeriod();
        int[] intArray96 = chronology67.get((org.joda.time.ReadablePeriod) mutablePeriod93, 1644572157474L, 1644572261327L);
        org.joda.time.MutableInterval mutableInterval97 = new org.joda.time.MutableInterval(readableInstant0, (org.joda.time.ReadablePeriod) mutablePeriod93);
        java.lang.String str98 = mutablePeriod93.toString();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(obj6);
// flaky:         org.junit.Assert.assertEquals(obj6.toString(), "2022-02-11T09:40:05.905Z/2022-02-11T09:40:05.905Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "2022-02-11T09:40:05.905Z/2022-02-11T09:40:05.905Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "2022-02-11T09:40:05.905Z/2022-02-11T09:40:05.905Z");
        org.junit.Assert.assertNotNull(dateTime7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1644572405905L + "'", long15 == 1644572405905L);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572405905L + "'", long31 == 1644572405905L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644537601100L + "'", long75 == 1644537601100L);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(mutablePeriod88);
        org.junit.Assert.assertNotNull(mutablePeriod89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(mutablePeriod93);
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0, 0, 0, 0, 1, 43, 853]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "PT0S" + "'", str98, "PT0S");
    }

    @Test
    public void test03544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03544");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:27.942Z/2022-02-11T09:35:44.271Z");
        boolean boolean3 = mutableInterval1.isAfter(1644572143091L);
        org.joda.time.ReadablePeriod readablePeriod4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readablePeriod4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period11, readableInstant12);
        boolean boolean14 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        boolean boolean21 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        long long25 = mutableInterval24.toDurationMillis();
        boolean boolean26 = mutableInterval20.isAfter((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        boolean boolean28 = mutableInterval24.contains(readableInstant27);
        long long29 = mutableInterval24.getEndMillis();
        java.lang.String str30 = mutableInterval24.toString();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        boolean boolean44 = mutableInterval40.equals((java.lang.Object) (-1));
        long long45 = mutableInterval40.getEndMillis();
        org.joda.time.DateTime dateTime46 = mutableInterval40.getEnd();
        boolean boolean47 = mutableInterval33.isAfter((org.joda.time.ReadableInstant) dateTime46);
// flaky:         mutableInterval24.setStart((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean49 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.Duration duration50 = mutableInterval24.toDuration();
        boolean boolean52 = mutableInterval24.isAfter(1644572157502L);
        mutableInterval1.setInterval((org.joda.time.ReadableInterval) mutableInterval24);
        boolean boolean54 = mutableInterval1.isAfterNow();
        org.joda.time.Chronology chronology55 = mutableInterval1.getChronology();
        org.joda.time.DateTimeField dateTimeField56 = chronology55.hourOfDay();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572405955L + "'", long29 == 1644572405955L);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "2022-02-11T09:40:05.955Z/2022-02-11T09:40:05.955Z" + "'", str30, "2022-02-11T09:40:05.955Z/2022-02-11T09:40:05.955Z");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1644572405955L + "'", long45 == 1644572405955L);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(chronology55);
        org.junit.Assert.assertNotNull(dateTimeField56);
    }

    @Test
    public void test03545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03545");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.centuryOfEra();
        org.joda.time.DurationField durationField71 = chronology66.days();
        org.joda.time.Chronology chronology72 = chronology66.withUTC();
        org.joda.time.DurationField durationField73 = chronology72.millis();
        org.joda.time.DateTimeField dateTimeField74 = chronology72.minuteOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:05.982Z/2022-02-11T09:40:05.982Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:05.982Z/2022-02-11T09:40:05.982Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:05.982Z/2022-02-11T09:40:05.982Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572405982L + "'", long14 == 1644572405982L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572405982L + "'", long30 == 1644572405982L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(chronology72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03546");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        boolean boolean71 = mutableInterval70.isBeforeNow();
        boolean boolean73 = mutableInterval70.equals((java.lang.Object) 1644572143775L);
        org.joda.time.Chronology chronology74 = mutableInterval70.getChronology();
        org.joda.time.MutableInterval mutableInterval75 = mutableInterval70.toMutableInterval();
        org.joda.time.DateTime dateTime76 = mutableInterval70.getEnd();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:06.058Z/2022-02-11T09:40:06.058Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:06.058Z/2022-02-11T09:40:06.058Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:06.058Z/2022-02-11T09:40:06.058Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572406058L + "'", long16 == 1644572406058L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572406058L + "'", long32 == 1644572406058L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(chronology74);
        org.junit.Assert.assertNotNull(mutableInterval75);
        org.junit.Assert.assertNotNull(dateTime76);
    }

    @Test
    public void test03547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03547");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        boolean boolean19 = mutableInterval16.contains(readableInstant18);
        boolean boolean20 = mutableInterval10.contains((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = mutableInterval26.toPeriod(periodType27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period28, readableInstant29);
        boolean boolean31 = mutableInterval23.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Period period32 = mutableInterval23.toPeriod();
        boolean boolean33 = mutableInterval16.contains((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        boolean boolean50 = mutableInterval48.isBeforeNow();
        org.joda.time.Interval interval51 = mutableInterval48.toInterval();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = mutableInterval54.toPeriod(periodType55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period56, readableInstant57);
        long long59 = mutableInterval58.getStartMillis();
        boolean boolean60 = interval51.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        mutableInterval16.setInterval((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.Chronology chronology62 = mutableInterval16.getChronology();
        org.joda.time.DateTime dateTime63 = mutableInterval16.getStart();
        org.joda.time.DateTimeZone dateTimeZone64 = dateTime63.getZone();
        org.joda.time.Chronology chronology65 = dateTime63.getChronology();
        org.joda.time.DateTimeZone dateTimeZone66 = dateTime63.getZone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(period56);
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1644572406149L + "'", long59 == 1644572406149L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(chronology62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(dateTimeZone64);
        org.junit.Assert.assertNotNull(chronology65);
        org.junit.Assert.assertNotNull(dateTimeZone66);
    }

    @Test
    public void test03548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03548");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Duration duration66 = mutableInterval2.toDuration();
        boolean boolean68 = mutableInterval2.isBefore(1644572134268L);
        long long69 = mutableInterval2.getStartMillis();
        org.joda.time.Duration duration70 = mutableInterval2.toDuration();
        long long71 = duration70.getMillis();
        org.joda.time.Duration duration72 = duration70.toDuration();
        java.lang.String str73 = duration70.toString();
        long long74 = duration70.getMillis();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:06.191Z/2022-02-11T09:40:06.191Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:06.191Z/2022-02-11T09:40:06.191Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:06.191Z/2022-02-11T09:40:06.191Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572406191L + "'", long14 == 1644572406191L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406191L + "'", long30 == 1644572406191L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1644572406191L + "'", long69 == 1644572406191L);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT0S" + "'", str73, "PT0S");
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
    }

    @Test
    public void test03549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03549");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Period period11 = mutableInterval2.toPeriod();
        org.joda.time.Chronology chronology12 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.hourOfHalfday();
        org.joda.time.DurationField durationField14 = chronology12.years();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(durationField14);
    }

    @Test
    public void test03550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03550");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.hourOfHalfday();
        org.joda.time.Chronology chronology73 = chronology66.withUTC();
        org.joda.time.DurationField durationField74 = chronology66.years();
        org.joda.time.DateTimeField dateTimeField75 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField76 = chronology66.centuryOfEra();
        org.joda.time.DurationField durationField77 = chronology66.millis();
        org.joda.time.ReadablePartial readablePartial78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = chronology66.get(readablePartial78, 1644572342179L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:06.230Z/2022-02-11T09:40:06.230Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:06.230Z/2022-02-11T09:40:06.230Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:06.230Z/2022-02-11T09:40:06.230Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572406230L + "'", long14 == 1644572406230L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406230L + "'", long30 == 1644572406230L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(durationField77);
    }

    @Test
    public void test03551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03551");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval4 = mutableInterval2.toInterval();
        org.joda.time.Interval interval5 = mutableInterval2.toInterval();
        long long6 = mutableInterval2.getEndMillis();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = mutableInterval16.toPeriod(periodType17);
        java.lang.Object obj19 = mutableInterval16.clone();
        org.joda.time.DateTime dateTime20 = mutableInterval16.getStart();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        mutableInterval23.setDurationAfterStart(0L);
        boolean boolean27 = mutableInterval23.equals((java.lang.Object) (-1));
        long long28 = mutableInterval23.getEndMillis();
        org.joda.time.DateTime dateTime29 = mutableInterval23.getEnd();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        boolean boolean43 = mutableInterval39.equals((java.lang.Object) (-1));
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getEnd();
        boolean boolean46 = mutableInterval32.isAfter((org.joda.time.ReadableInstant) dateTime45);
        boolean boolean47 = dateTime29.isAfter((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        boolean boolean68 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadablePeriod readablePeriod69 = null;
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readablePeriod69, readableInstant70);
        long long72 = mutableInterval71.toDurationMillis();
        boolean boolean73 = mutableInterval67.isAfter((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        boolean boolean75 = mutableInterval71.contains(readableInstant74);
        boolean boolean76 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.Duration duration77 = mutableInterval71.toDuration();
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableDuration) duration77);
        boolean boolean79 = mutableInterval16.contains((org.joda.time.ReadableInstant) dateTime45);
        boolean boolean80 = mutableInterval9.contains((org.joda.time.ReadableInstant) dateTime45);
        mutableInterval2.setStart((org.joda.time.ReadableInstant) dateTime45);
        mutableInterval2.setStartMillis(1644572222092L);
        mutableInterval2.setEndMillis(1644572258135L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertNotNull(interval5);
// flaky:         org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1644572406256L + "'", long6 == 1644572406256L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals(obj19.toString(), "2022-02-11T09:40:06.256Z/2022-02-11T09:40:06.256Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "2022-02-11T09:40:06.256Z/2022-02-11T09:40:06.256Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "2022-02-11T09:40:06.256Z/2022-02-11T09:40:06.256Z");
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1644572406256L + "'", long28 == 1644572406256L);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572406256L + "'", long44 == 1644572406256L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test03552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03552");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        boolean boolean6 = period4.isSupported(durationFieldType5);
        boolean boolean8 = period4.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType10 = period4.getFieldType(0);
        org.joda.time.Period period11 = period4.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod12 = period11.toMutablePeriod();
        org.joda.time.Period period13 = mutablePeriod12.toPeriod();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant19 = null;
        boolean boolean20 = mutableInterval16.contains(readableInstant19);
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getStart();
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) mutablePeriod12, (org.joda.time.ReadableInstant) dateTime22);
        java.lang.String str24 = mutableInterval23.toString();
        org.joda.time.DateTime dateTime25 = mutableInterval23.getEnd();
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int27 = dateTime25.get(dateTimeFieldType26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572406280L + "'", long21 == 1644572406280L);
        org.junit.Assert.assertNotNull(dateTime22);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "2022-02-11T09:40:06.280Z/2022-02-11T09:40:06.280Z" + "'", str24, "2022-02-11T09:40:06.280Z/2022-02-11T09:40:06.280Z");
        org.junit.Assert.assertNotNull(dateTime25);
    }

    @Test
    public void test03553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03553");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.Period period9 = mutableInterval7.toPeriod();
        org.joda.time.Chronology chronology10 = mutableInterval7.getChronology();
        org.joda.time.DateTimeField dateTimeField11 = chronology10.monthOfYear();
        org.joda.time.DurationField durationField12 = chronology10.weekyears();
        org.joda.time.DurationField durationField13 = chronology10.centuries();
        org.joda.time.DurationField durationField14 = chronology10.weekyears();
        org.joda.time.DateTimeField dateTimeField15 = chronology10.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField16 = chronology10.dayOfYear();
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(1644572145299L, 59204596786604L, chronology10);
        org.joda.time.DurationField durationField18 = chronology10.millis();
        // The following exception was thrown during execution in test generation
        try {
            long long24 = chronology10.getDateTimeMillis(1644572206817L, 0, 100, (int) (short) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 100 for minuteOfHour must be in the range [0,59]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(durationField13);
        org.junit.Assert.assertNotNull(durationField14);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertNotNull(dateTimeField16);
        org.junit.Assert.assertNotNull(durationField18);
    }

    @Test
    public void test03554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03554");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.MutableInterval mutableInterval3 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = period8.isSupported(durationFieldType9);
        boolean boolean12 = period8.equals((java.lang.Object) "hi!");
        int int13 = period8.size();
        mutableInterval3.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.MutableInterval mutableInterval15 = mutableInterval3.copy();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        java.lang.Object obj21 = mutableInterval18.clone();
        org.joda.time.DateTime dateTime22 = mutableInterval18.getStart();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        boolean boolean38 = mutableInterval34.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        mutableInterval41.setDurationAfterStart(0L);
        boolean boolean45 = mutableInterval41.equals((java.lang.Object) (-1));
        long long46 = mutableInterval41.getEndMillis();
        org.joda.time.DateTime dateTime47 = mutableInterval41.getEnd();
        boolean boolean48 = mutableInterval34.isAfter((org.joda.time.ReadableInstant) dateTime47);
        boolean boolean49 = dateTime31.isAfter((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableDuration readableDuration68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readableInstant67, readableDuration68);
        boolean boolean70 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.ReadablePeriod readablePeriod71 = null;
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readablePeriod71, readableInstant72);
        long long74 = mutableInterval73.toDurationMillis();
        boolean boolean75 = mutableInterval69.isAfter((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        boolean boolean77 = mutableInterval73.contains(readableInstant76);
        boolean boolean78 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.Duration duration79 = mutableInterval73.toDuration();
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = mutableInterval18.contains((org.joda.time.ReadableInstant) dateTime47);
        boolean boolean82 = mutableInterval3.contains((org.joda.time.ReadableInstant) dateTime47);
        long long83 = mutableInterval3.getStartMillis();
        org.junit.Assert.assertNotNull(mutableInterval3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(mutableInterval15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals(obj21.toString(), "2022-02-11T09:40:06.307Z/2022-02-11T09:40:06.307Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "2022-02-11T09:40:06.307Z/2022-02-11T09:40:06.307Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "2022-02-11T09:40:06.307Z/2022-02-11T09:40:06.307Z");
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406307L + "'", long30 == 1644572406307L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572406307L + "'", long46 == 1644572406307L);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1644572406307L + "'", long83 == 1644572406307L);
    }

    @Test
    public void test03555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03555");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.hourOfHalfday();
        org.joda.time.DurationField durationField71 = chronology66.seconds();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.millisOfSecond();
        org.joda.time.DurationField durationField73 = chronology66.hours();
        org.joda.time.DateTimeZone dateTimeZone74 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField75 = chronology66.monthOfYear();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:06.331Z/2022-02-11T09:40:06.331Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:06.331Z/2022-02-11T09:40:06.331Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:06.331Z/2022-02-11T09:40:06.331Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572406331L + "'", long14 == 1644572406331L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406331L + "'", long30 == 1644572406331L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeZone74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03556");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572126223L, 1644572131053L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        boolean boolean9 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval8);
        org.joda.time.ReadablePeriod readablePeriod10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readablePeriod10, readableInstant11);
        long long13 = mutableInterval12.toDurationMillis();
        boolean boolean14 = mutableInterval8.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval8.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        java.lang.String str19 = mutableInterval8.toString();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = mutableInterval22.toPeriod(periodType23);
        org.joda.time.ReadablePeriod readablePeriod25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readablePeriod25, readableInstant26);
        boolean boolean28 = period24.equals((java.lang.Object) readableInstant26);
        mutableInterval8.setPeriodAfterStart((org.joda.time.ReadablePeriod) period24);
        boolean boolean30 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval8);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval8.setInterval(1644572379824L, 1644572370431L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "2022-02-11T09:40:06.357Z/2022-02-11T09:40:06.357Z" + "'", str19, "2022-02-11T09:40:06.357Z/2022-02-11T09:40:06.357Z");
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test03557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03557");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.MutableInterval mutableInterval3 = new org.joda.time.MutableInterval(readableInstant1, readableDuration2);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = mutableInterval3.toPeriod(periodType4);
        java.lang.Object obj6 = mutableInterval3.clone();
        org.joda.time.DateTime dateTime7 = mutableInterval3.getStart();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        long long15 = mutableInterval10.getEndMillis();
        org.joda.time.DateTime dateTime16 = mutableInterval10.getEnd();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        boolean boolean33 = mutableInterval19.isAfter((org.joda.time.ReadableInstant) dateTime32);
        boolean boolean34 = dateTime16.isAfter((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        boolean boolean41 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readablePeriod42, readableInstant43);
        long long45 = mutableInterval44.toDurationMillis();
        boolean boolean46 = mutableInterval40.isAfter((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        boolean boolean48 = mutableInterval44.contains(readableInstant47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        boolean boolean63 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.Duration duration64 = mutableInterval58.toDuration();
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = mutableInterval3.contains((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Chronology chronology67 = dateTime32.getChronology();
        org.joda.time.DateTimeField dateTimeField68 = chronology67.year();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.monthOfYear();
        long long75 = chronology67.getDateTimeMillis(1644572130375L, 0, (int) (short) 0, 1, (int) (short) 100);
        org.joda.time.DateTimeField dateTimeField76 = chronology67.weekyear();
        org.joda.time.DurationField durationField77 = chronology67.months();
        org.joda.time.DurationField durationField78 = chronology67.weeks();
        org.joda.time.DateTimeField dateTimeField79 = chronology67.hourOfDay();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval((java.lang.Object) 1644572192786L, chronology67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(obj6);
// flaky:         org.junit.Assert.assertEquals(obj6.toString(), "2022-02-11T09:40:06.370Z/2022-02-11T09:40:06.370Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "2022-02-11T09:40:06.370Z/2022-02-11T09:40:06.370Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "2022-02-11T09:40:06.370Z/2022-02-11T09:40:06.370Z");
        org.junit.Assert.assertNotNull(dateTime7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1644572406371L + "'", long15 == 1644572406371L);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572406371L + "'", long31 == 1644572406371L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644537601100L + "'", long75 == 1644537601100L);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
    }

    @Test
    public void test03558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03558");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.Period period14 = mutableInterval12.toPeriod();
        org.joda.time.Duration duration15 = mutableInterval12.toDuration();
        mutableInterval2.setDurationAfterStart((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Chronology chronology17 = mutableInterval2.getChronology();
        org.joda.time.Interval interval18 = mutableInterval2.toInterval();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertNotNull(interval18);
    }

    @Test
    public void test03559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03559");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.Period period23 = mutableInterval21.toPeriod();
        org.joda.time.Duration duration24 = mutableInterval21.toDuration();
        mutableInterval10.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration24);
        java.lang.Object obj26 = null;
        boolean boolean27 = duration24.equals(obj26);
        long long28 = duration24.getMillis();
        org.joda.time.ReadableDuration readableDuration29 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = duration24.compareTo(readableDuration29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572406425L + "'", long7 == 1644572406425L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test03560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03560");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.dayOfYear();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:06.440Z/2022-02-11T09:40:06.440Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:06.440Z/2022-02-11T09:40:06.440Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:06.440Z/2022-02-11T09:40:06.440Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572406440L + "'", long14 == 1644572406440L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406440L + "'", long30 == 1644572406440L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
    }

    @Test
    public void test03561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03561");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.MutableInterval mutableInterval5 = mutableInterval2.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval6 = mutableInterval2.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        java.lang.Object obj14 = mutableInterval11.clone();
        org.joda.time.DateTime dateTime15 = mutableInterval11.getStart();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        mutableInterval18.setDurationAfterStart(0L);
        boolean boolean22 = mutableInterval18.equals((java.lang.Object) (-1));
        long long23 = mutableInterval18.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval18.getEnd();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        mutableInterval34.setDurationAfterStart(0L);
        boolean boolean38 = mutableInterval34.equals((java.lang.Object) (-1));
        long long39 = mutableInterval34.getEndMillis();
        org.joda.time.DateTime dateTime40 = mutableInterval34.getEnd();
        boolean boolean41 = mutableInterval27.isAfter((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean42 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = mutableInterval11.contains((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Chronology chronology75 = dateTime40.getChronology();
        org.joda.time.DateTimeField dateTimeField76 = chronology75.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology75);
        org.joda.time.DateTimeField dateTimeField78 = chronology75.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField79 = chronology75.yearOfEra();
        long long85 = chronology75.getDateTimeMillis(1644572135767L, 10, 8, (int) '#', (int) (byte) 10);
        mutableInterval6.setChronology(chronology75);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.ReadableDuration readableDuration88 = null;
        org.joda.time.MutableInterval mutableInterval89 = new org.joda.time.MutableInterval(readableInstant87, readableDuration88);
        mutableInterval89.setDurationAfterStart(0L);
        boolean boolean93 = mutableInterval89.equals((java.lang.Object) (-1));
        mutableInterval89.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean97 = mutableInterval89.containsNow();
        java.lang.String str98 = mutableInterval89.toString();
        boolean boolean99 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval89);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertNotNull(mutableInterval6);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals(obj14.toString(), "2022-02-11T09:40:06.557Z/2022-02-11T09:40:06.557Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "2022-02-11T09:40:06.557Z/2022-02-11T09:40:06.557Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "2022-02-11T09:40:06.557Z/2022-02-11T09:40:06.557Z");
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572406557L + "'", long23 == 1644572406557L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1644572406557L + "'", long39 == 1644572406557L);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1644574115010L + "'", long85 == 1644574115010L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z" + "'", str98, "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test03562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03562");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.DateTime dateTime16 = mutableInterval6.getEnd();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        boolean boolean42 = mutableInterval28.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean43 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.DateTimeZone dateTimeZone44 = dateTime25.getZone();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        mutableInterval47.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        long long52 = mutableInterval47.getEndMillis();
        org.joda.time.DateTime dateTime53 = mutableInterval47.getStart();
        boolean boolean54 = dateTime25.isEqual((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        boolean boolean72 = mutableInterval70.isBeforeNow();
        org.joda.time.Interval interval73 = mutableInterval70.toInterval();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.Period period78 = mutableInterval76.toPeriod(periodType77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period78, readableInstant79);
        long long81 = mutableInterval80.getStartMillis();
        boolean boolean82 = interval73.isAfter((org.joda.time.ReadableInterval) mutableInterval80);
        mutableInterval80.setInterval(1644572140816L, 1644572143014L);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.ReadableDuration readableDuration87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval(readableInstant86, readableDuration87);
        org.joda.time.PeriodType periodType89 = null;
        org.joda.time.Period period90 = mutableInterval88.toPeriod(periodType89);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.MutableInterval mutableInterval92 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period90, readableInstant91);
        int int93 = period90.size();
        mutableInterval80.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period90);
        org.joda.time.MutableInterval mutableInterval95 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadablePeriod) period90);
        org.joda.time.DateTimeFieldType dateTimeFieldType96 = null;
        boolean boolean97 = dateTime53.isSupported(dateTimeFieldType96);
        org.joda.time.DateTimeZone dateTimeZone98 = dateTime53.getZone();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572406610L + "'", long7 == 1644572406610L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572406610L + "'", long24 == 1644572406610L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572406610L + "'", long40 == 1644572406610L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(dateTimeZone44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1644572406610L + "'", long52 == 1644572406610L);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(period78);
// flaky:         org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1644572406610L + "'", long81 == 1644572406610L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 8 + "'", int93 == 8);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(dateTimeZone98);
    }

    @Test
    public void test03563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03563");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.monthOfYear();
        long long74 = chronology66.getDateTimeMillis(1644572130375L, 0, (int) (short) 0, 1, (int) (short) 100);
        org.joda.time.DurationField durationField75 = chronology66.months();
        org.joda.time.DateTimeField dateTimeField76 = chronology66.dayOfWeek();
        java.lang.String str77 = chronology66.toString();
        org.joda.time.DurationField durationField78 = chronology66.years();
        org.joda.time.DateTimeField dateTimeField79 = chronology66.weekyear();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:06.672Z/2022-02-11T09:40:06.672Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:06.672Z/2022-02-11T09:40:06.672Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:06.672Z/2022-02-11T09:40:06.672Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572406672L + "'", long14 == 1644572406672L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406672L + "'", long30 == 1644572406672L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1644537601100L + "'", long74 == 1644537601100L);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str77, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
    }

    @Test
    public void test03564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03564");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        boolean boolean28 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        boolean boolean30 = mutableInterval9.contains((long) (byte) 1);
        org.joda.time.Interval interval31 = mutableInterval9.toInterval();
        mutableInterval9.setInterval(1644572132313L, 1644572135915L);
        org.joda.time.MutableInterval mutableInterval35 = mutableInterval9.toMutableInterval();
        boolean boolean37 = mutableInterval35.contains(1644572161641L);
        boolean boolean38 = mutableInterval35.isBeforeNow();
        org.joda.time.MutableInterval mutableInterval39 = mutableInterval35.toMutableInterval();
        boolean boolean41 = mutableInterval39.equals((java.lang.Object) 1644572206369L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(mutableInterval35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(mutableInterval39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test03565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03565");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.hours();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.monthOfYear();
        long long73 = chronology67.add(1644572150812L, 1644572157013L, (int) (short) 100);
        org.joda.time.DateTimeField dateTimeField74 = chronology67.weekyear();
        org.joda.time.Chronology chronology75 = chronology67.withUTC();
        org.joda.time.DurationField durationField76 = chronology67.months();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:06.771Z/2022-02-11T09:40:06.771Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:06.771Z/2022-02-11T09:40:06.771Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:06.771Z/2022-02-11T09:40:06.771Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572406771L + "'", long14 == 1644572406771L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406771L + "'", long30 == 1644572406771L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 166101787852112L + "'", long73 == 166101787852112L);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(durationField76);
    }

    @Test
    public void test03566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03566");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.hourOfHalfday();
        org.joda.time.DurationField durationField71 = chronology66.hours();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.minuteOfDay();
        org.joda.time.DurationField durationField73 = chronology66.years();
        long long77 = chronology66.add(1644572204831L, 1644572138079L, (int) (byte) 1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:06.795Z/2022-02-11T09:40:06.795Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:06.795Z/2022-02-11T09:40:06.795Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:06.795Z/2022-02-11T09:40:06.795Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572406796L + "'", long14 == 1644572406796L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406796L + "'", long30 == 1644572406796L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 3289144342910L + "'", long77 == 3289144342910L);
    }

    @Test
    public void test03567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03567");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.hours();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.monthOfYear();
        long long73 = chronology67.add(1644572150812L, 1644572157013L, (int) (short) 100);
        org.joda.time.DateTimeField dateTimeField74 = chronology67.weekyear();
        org.joda.time.Chronology chronology75 = chronology67.withUTC();
        org.joda.time.DurationField durationField76 = chronology67.weeks();
        org.joda.time.DateTimeField dateTimeField77 = chronology67.yearOfEra();
        // The following exception was thrown during execution in test generation
        try {
            long long83 = chronology67.getDateTimeMillis(1644572404445L, (int) (byte) 0, 8, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for secondOfMinute must be in the range [0,59]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:06.878Z/2022-02-11T09:40:06.878Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:06.878Z/2022-02-11T09:40:06.878Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:06.878Z/2022-02-11T09:40:06.878Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572406878L + "'", long14 == 1644572406878L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572406878L + "'", long30 == 1644572406878L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 166101787852112L + "'", long73 == 166101787852112L);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
    }

    @Test
    public void test03568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03568");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        boolean boolean25 = period21.equals((java.lang.Object) readableInstant23);
        mutableInterval5.setPeriodAfterStart((org.joda.time.ReadablePeriod) period21);
        mutableInterval5.setStartMillis(1644572133843L);
        long long29 = mutableInterval5.getStartMillis();
        boolean boolean30 = mutableInterval5.isAfterNow();
        org.joda.time.MutableInterval mutableInterval31 = mutableInterval5.toMutableInterval();
        java.lang.String str32 = mutableInterval5.toString();
        org.joda.time.Chronology chronology33 = mutableInterval5.getChronology();
        org.joda.time.Duration duration34 = mutableInterval5.toDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:06.933Z/2022-02-11T09:40:06.933Z" + "'", str16, "2022-02-11T09:40:06.933Z/2022-02-11T09:40:06.933Z");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572133843L + "'", long29 == 1644572133843L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mutableInterval31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "2022-02-11T09:35:33.843Z/2022-02-11T09:40:06.933Z" + "'", str32, "2022-02-11T09:35:33.843Z/2022-02-11T09:40:06.933Z");
        org.junit.Assert.assertNotNull(chronology33);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test03569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03569");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572215354L, 1644572215088L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03570");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.Period period23 = mutableInterval21.toPeriod();
        org.joda.time.Duration duration24 = mutableInterval21.toDuration();
        mutableInterval10.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration26 = duration24.toDuration();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = mutableInterval29.toPeriod(periodType30);
        long long32 = mutableInterval29.getEndMillis();
        boolean boolean34 = mutableInterval29.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval35 = mutableInterval29.copy();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = mutableInterval38.toPeriod(periodType39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period40, readableInstant41);
        long long43 = mutableInterval42.getStartMillis();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        mutableInterval46.setDurationAfterStart(0L);
        boolean boolean50 = mutableInterval46.equals((java.lang.Object) (-1));
        boolean boolean51 = mutableInterval42.isAfter((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Period period59 = mutableInterval57.toPeriod();
        org.joda.time.Duration duration60 = mutableInterval57.toDuration();
        mutableInterval46.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration62 = duration60.toDuration();
        mutableInterval29.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration60);
        long long64 = duration60.getMillis();
        org.joda.time.Duration duration65 = duration60.toDuration();
        boolean boolean66 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration65);
        long long67 = duration65.getMillis();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572406958L + "'", long7 == 1644572406958L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period31);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572406958L + "'", long32 == 1644572406958L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(mutableInterval35);
        org.junit.Assert.assertNotNull(period40);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1644572406958L + "'", long43 == 1644572406958L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
    }

    @Test
    public void test03571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03571");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.Period period24 = mutableInterval22.toPeriod();
        org.joda.time.Chronology chronology25 = mutableInterval22.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.minuteOfDay();
        mutableInterval5.setChronology(chronology25);
        org.joda.time.Chronology chronology28 = mutableInterval5.getChronology();
        org.joda.time.Period period29 = mutableInterval5.toPeriod();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:07.007Z/2022-02-11T09:40:07.007Z" + "'", str16, "2022-02-11T09:40:07.007Z/2022-02-11T09:40:07.007Z");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(dateTimeField26);
        org.junit.Assert.assertNotNull(chronology28);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test03572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03572");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfWeek();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(1644572136401L, 1644572141513L, chronology68);
        org.joda.time.DateTimeField dateTimeField73 = chronology68.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.weekyear();
        org.joda.time.DateTimeZone dateTimeZone75 = chronology68.getZone();
        org.joda.time.DateTimeField dateTimeField76 = chronology68.monthOfYear();
        org.joda.time.DateTimeField dateTimeField77 = chronology68.secondOfDay();
        org.joda.time.DateTimeField dateTimeField78 = chronology68.dayOfMonth();
        org.joda.time.Chronology chronology79 = chronology68.withUTC();
        org.joda.time.DateTimeField dateTimeField80 = chronology68.hourOfDay();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:07.020Z/2022-02-11T09:40:07.020Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:07.020Z/2022-02-11T09:40:07.020Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:07.020Z/2022-02-11T09:40:07.020Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572407020L + "'", long16 == 1644572407020L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572407020L + "'", long32 == 1644572407020L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeZone75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertNotNull(dateTimeField80);
    }

    @Test
    public void test03573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03573");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        mutableInterval2.setEndMillis((long) (byte) 0);
        boolean boolean16 = mutableInterval2.contains(1644572133267L);
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readablePeriod17, readableInstant18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = mutableInterval22.toPeriod(periodType23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period24, readableInstant25);
        boolean boolean27 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        long long28 = mutableInterval19.toDurationMillis();
        mutableInterval2.setInterval((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableDuration readableDuration30 = null;
        mutableInterval2.setDurationAfterStart(readableDuration30);
        org.joda.time.DateTime dateTime32 = mutableInterval2.getStart();
        org.joda.time.DateTime dateTime33 = mutableInterval2.getStart();
        mutableInterval2.setStartMillis(0L);
        org.joda.time.Chronology chronology36 = null;
        mutableInterval2.setChronology(chronology36);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(dateTime33);
    }

    @Test
    public void test03574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03574");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        mutableInterval2.setEndMillis((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.DateTimeZone dateTimeZone42 = dateTime23.getZone();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        mutableInterval45.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        long long50 = mutableInterval45.getEndMillis();
        org.joda.time.DateTime dateTime51 = mutableInterval45.getStart();
        boolean boolean52 = dateTime23.isEqual((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean53 = mutableInterval2.isBefore((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        boolean boolean60 = mutableInterval56.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Period period61 = mutableInterval59.toPeriod();
        org.joda.time.Duration duration62 = mutableInterval59.toDuration();
        long long63 = duration62.getMillis();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration65 = mutableInterval64.toDuration();
        org.joda.time.DateTime dateTime66 = mutableInterval64.getStart();
        boolean boolean67 = mutableInterval64.isAfterNow();
        mutableInterval64.setStartMillis(1644572137028L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572407119L + "'", long22 == 1644572407119L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572407119L + "'", long38 == 1644572407119L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(dateTimeZone42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1644572407119L + "'", long50 == 1644572407119L);
        org.junit.Assert.assertNotNull(dateTime51);
// flaky:         org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test03575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03575");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.millisOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:07.165Z/2022-02-11T09:40:07.165Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:07.165Z/2022-02-11T09:40:07.165Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:07.165Z/2022-02-11T09:40:07.165Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572407165L + "'", long14 == 1644572407165L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572407165L + "'", long30 == 1644572407165L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
    }

    @Test
    public void test03576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03576");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period10 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        boolean boolean17 = mutableInterval13.contains(readableInstant16);
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getStart();
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, (org.joda.time.ReadableInstant) dateTime19);
        org.joda.time.Period period21 = period10.toPeriod();
        org.joda.time.DurationFieldType durationFieldType23 = period21.getFieldType((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572407223L + "'", long18 == 1644572407223L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType23);
    }

    @Test
    public void test03577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03577");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period11, readableInstant12);
        long long14 = mutableInterval13.getStartMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        boolean boolean22 = mutableInterval13.isAfter((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = mutableInterval25.toPeriod(periodType26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period27, readableInstant28);
        long long30 = mutableInterval29.getStartMillis();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        boolean boolean38 = mutableInterval29.isAfter((org.joda.time.ReadableInterval) mutableInterval33);
        boolean boolean39 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        mutableInterval45.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.isAfter(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableDuration readableDuration68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readableInstant67, readableDuration68);
        boolean boolean70 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.ReadablePeriod readablePeriod71 = null;
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readablePeriod71, readableInstant72);
        long long74 = mutableInterval73.toDurationMillis();
        boolean boolean75 = mutableInterval69.isAfter((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        boolean boolean77 = mutableInterval73.contains(readableInstant76);
        boolean boolean78 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.Duration duration79 = mutableInterval73.toDuration();
        mutableInterval45.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration79);
        mutableInterval42.setDurationAfterStart((org.joda.time.ReadableDuration) duration79);
        mutableInterval29.setDurationAfterStart((org.joda.time.ReadableDuration) duration79);
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration79);
        org.joda.time.PeriodType periodType84 = null;
        org.joda.time.Period period85 = mutableInterval2.toPeriod(periodType84);
        org.joda.time.MutableInterval mutableInterval87 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology88 = mutableInterval87.getChronology();
        boolean boolean89 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval87);
        boolean boolean91 = mutableInterval2.isBefore(1644572147384L);
        org.joda.time.Period period92 = mutableInterval2.toPeriod();
        org.joda.time.Period period93 = period92.toPeriod();
        java.lang.String str94 = period93.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572407234L + "'", long14 == 1644572407234L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(period27);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572407234L + "'", long30 == 1644572407234L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(mutableInterval87);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "PT0S" + "'", str94, "PT0S");
    }

    @Test
    public void test03578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03578");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.yearOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfMonth();
        org.joda.time.DurationField durationField72 = chronology68.weeks();
        org.joda.time.Chronology chronology73 = chronology68.withUTC();
        org.joda.time.DurationField durationField74 = chronology68.days();
        org.joda.time.DateTimeField dateTimeField75 = chronology68.hourOfHalfday();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(1644572129943L, 1644572134508L, chronology68);
        org.joda.time.DateTimeField dateTimeField77 = chronology68.dayOfWeek();
        org.joda.time.DurationField durationField78 = chronology68.weeks();
        org.joda.time.DateTimeField dateTimeField79 = chronology68.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField80 = chronology68.era();
        org.joda.time.DateTimeField dateTimeField81 = chronology68.millisOfSecond();
        // The following exception was thrown during execution in test generation
        try {
            long long89 = chronology68.getDateTimeMillis((int) (byte) -1, (int) '4', (int) '#', (int) '#', (int) '#', (int) (byte) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 35 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:07.377Z/2022-02-11T09:40:07.377Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:07.377Z/2022-02-11T09:40:07.377Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:07.377Z/2022-02-11T09:40:07.377Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572407377L + "'", long16 == 1644572407377L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572407377L + "'", long32 == 1644572407377L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTimeField81);
    }

    @Test
    public void test03579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03579");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.monthOfYear();
        org.joda.time.DurationField durationField69 = chronology66.weekyears();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekOfWeekyear();
        org.joda.time.DurationField durationField71 = chronology66.weeks();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.era();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:07.421Z/2022-02-11T09:40:07.421Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:07.421Z/2022-02-11T09:40:07.421Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:07.421Z/2022-02-11T09:40:07.421Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572407421L + "'", long14 == 1644572407421L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572407421L + "'", long30 == 1644572407421L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
    }

    @Test
    public void test03580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03580");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        boolean boolean19 = mutableInterval16.contains(readableInstant18);
        boolean boolean20 = mutableInterval10.contains((org.joda.time.ReadableInterval) mutableInterval16);
        mutableInterval10.setStartMillis((long) 0);
        boolean boolean24 = mutableInterval10.contains(1644572134608L);
        boolean boolean25 = mutableInterval10.isAfterNow();
        org.joda.time.DateTime dateTime26 = mutableInterval10.getEnd();
        long long27 = dateTime26.getMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
    }

    @Test
    public void test03581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03581");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        mutableInterval9.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean17 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Interval interval18 = mutableInterval9.toInterval();
        mutableInterval9.setEndMillis(1644572132848L);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = mutableInterval23.toPeriod(periodType24);
        java.lang.Object obj26 = mutableInterval23.clone();
        org.joda.time.DateTime dateTime27 = mutableInterval23.getStart();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        boolean boolean43 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        mutableInterval46.setDurationAfterStart(0L);
        boolean boolean50 = mutableInterval46.equals((java.lang.Object) (-1));
        long long51 = mutableInterval46.getEndMillis();
        org.joda.time.DateTime dateTime52 = mutableInterval46.getEnd();
        boolean boolean53 = mutableInterval39.isAfter((org.joda.time.ReadableInstant) dateTime52);
        boolean boolean54 = dateTime36.isAfter((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        boolean boolean75 = mutableInterval71.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadablePeriod readablePeriod76 = null;
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readablePeriod76, readableInstant77);
        long long79 = mutableInterval78.toDurationMillis();
        boolean boolean80 = mutableInterval74.isAfter((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.ReadableInstant readableInstant81 = null;
        boolean boolean82 = mutableInterval78.contains(readableInstant81);
        boolean boolean83 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.Duration duration84 = mutableInterval78.toDuration();
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableDuration) duration84);
        boolean boolean86 = mutableInterval23.contains((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Chronology chronology87 = dateTime52.getChronology();
        org.joda.time.DateTimeField dateTimeField88 = chronology87.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField89 = chronology87.dayOfMonth();
        org.joda.time.DurationField durationField90 = chronology87.weeks();
        mutableInterval9.setChronology(chronology87);
        org.joda.time.DurationField durationField92 = chronology87.seconds();
        org.joda.time.DateTimeField dateTimeField93 = chronology87.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField94 = chronology87.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField95 = chronology87.year();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(obj26);
// flaky:         org.junit.Assert.assertEquals(obj26.toString(), "2022-02-11T09:40:07.494Z/2022-02-11T09:40:07.494Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "2022-02-11T09:40:07.494Z/2022-02-11T09:40:07.494Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "2022-02-11T09:40:07.494Z/2022-02-11T09:40:07.494Z");
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572407494L + "'", long35 == 1644572407494L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572407494L + "'", long51 == 1644572407494L);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertNotNull(dateTimeField88);
        org.junit.Assert.assertNotNull(dateTimeField89);
        org.junit.Assert.assertNotNull(durationField90);
        org.junit.Assert.assertNotNull(durationField92);
        org.junit.Assert.assertNotNull(dateTimeField93);
        org.junit.Assert.assertNotNull(dateTimeField94);
        org.junit.Assert.assertNotNull(dateTimeField95);
    }

    @Test
    public void test03582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03582");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval1 = new org.joda.time.MutableInterval((java.lang.Object) 1644572159882L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03583");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        mutableInterval4.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval12 = mutableInterval4.copy();
        boolean boolean14 = mutableInterval4.contains(1644572125519L);
        org.joda.time.Chronology chronology15 = mutableInterval4.getChronology();
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(0L, 1644572131452L, chronology15);
        org.joda.time.Chronology chronology17 = mutableInterval16.getChronology();
        org.joda.time.DurationField durationField18 = chronology17.years();
        org.joda.time.Chronology chronology19 = chronology17.withUTC();
        org.joda.time.DateTimeField dateTimeField20 = chronology19.hourOfDay();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mutableInterval12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertNotNull(durationField18);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertNotNull(dateTimeField20);
    }

    @Test
    public void test03584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03584");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        boolean boolean9 = mutableInterval5.isAfter(readableInstant8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        mutableInterval12.setStartMillis(1644572127942L);
        boolean boolean17 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        boolean boolean18 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.Period period26 = mutableInterval24.toPeriod();
        mutableInterval12.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period26);
        java.lang.Object obj28 = mutableInterval12.clone();
        boolean boolean30 = mutableInterval12.isBefore(1644572156877L);
        mutableInterval12.setStartMillis(1644572212323L);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = mutableInterval38.toPeriod(periodType39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period40, readableInstant41);
        boolean boolean43 = mutableInterval35.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInterval readableInterval44 = null;
        boolean boolean45 = mutableInterval35.isAfter(readableInterval44);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readablePeriod46, readableInstant47);
        long long49 = mutableInterval48.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.Period period54 = mutableInterval52.toPeriod(periodType53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.Period period62 = mutableInterval60.toPeriod();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.PeriodType periodType66 = null;
        org.joda.time.Period period67 = mutableInterval65.toPeriod(periodType66);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = period67.isSupported(durationFieldType68);
        boolean boolean71 = period67.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType73 = period67.getFieldType(0);
        int int74 = period62.get(durationFieldType73);
        int int75 = period54.get(durationFieldType73);
        mutableInterval48.setPeriodAfterStart((org.joda.time.ReadablePeriod) period54);
        org.joda.time.DateTime dateTime77 = mutableInterval48.getEnd();
        boolean boolean78 = mutableInterval48.isBeforeNow();
        org.joda.time.DateTime dateTime79 = mutableInterval48.getEnd();
        boolean boolean80 = mutableInterval35.isAfter((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.Chronology chronology81 = mutableInterval35.getChronology();
        boolean boolean82 = mutableInterval12.equals((java.lang.Object) chronology81);
        long long83 = mutableInterval12.toDurationMillis();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals(obj28.toString(), "2022-02-11T09:40:07.590Z/2022-02-11T09:40:07.590Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "2022-02-11T09:40:07.590Z/2022-02-11T09:40:07.590Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "2022-02-11T09:40:07.590Z/2022-02-11T09:40:07.590Z");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long83 + "' != '" + 195267L + "'", long83 == 195267L);
    }

    @Test
    public void test03585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03585");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        boolean boolean71 = mutableInterval70.isBeforeNow();
        boolean boolean73 = mutableInterval70.equals((java.lang.Object) 1644572143775L);
        org.joda.time.Duration duration74 = mutableInterval70.toDuration();
        boolean boolean76 = duration74.equals((java.lang.Object) 1644572182594L);
        org.joda.time.ReadableDuration readableDuration77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int78 = duration74.compareTo(readableDuration77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:07.696Z/2022-02-11T09:40:07.696Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:07.696Z/2022-02-11T09:40:07.696Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:07.696Z/2022-02-11T09:40:07.696Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572407696L + "'", long16 == 1644572407696L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572407696L + "'", long32 == 1644572407696L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03586");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        boolean boolean7 = mutableInterval6.containsNow();
        org.joda.time.Interval interval8 = mutableInterval6.toInterval();
        org.joda.time.Period period9 = interval8.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = period9.getValue((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test03587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03587");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.Period period24 = mutableInterval22.toPeriod();
        org.joda.time.Chronology chronology25 = mutableInterval22.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.minuteOfDay();
        mutableInterval5.setChronology(chronology25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readablePeriod35, readableInstant36);
        long long38 = mutableInterval37.toDurationMillis();
        boolean boolean39 = mutableInterval33.isAfter((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        boolean boolean43 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        java.lang.String str44 = mutableInterval33.toString();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = mutableInterval47.toPeriod(periodType48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        boolean boolean53 = period49.equals((java.lang.Object) readableInstant51);
        mutableInterval33.setPeriodAfterStart((org.joda.time.ReadablePeriod) period49);
        mutableInterval33.setDurationAfterStart((long) 1);
        boolean boolean58 = mutableInterval33.isBefore((long) (byte) 100);
        boolean boolean60 = mutableInterval33.contains(1644572135746L);
        boolean boolean61 = mutableInterval5.contains((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.Period period62 = mutableInterval5.toPeriod();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:07.840Z/2022-02-11T09:40:07.840Z" + "'", str16, "2022-02-11T09:40:07.840Z/2022-02-11T09:40:07.840Z");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(dateTimeField26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "2022-02-11T09:40:07.840Z/2022-02-11T09:40:07.840Z" + "'", str44, "2022-02-11T09:40:07.840Z/2022-02-11T09:40:07.840Z");
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period62);
    }

    @Test
    public void test03588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03588");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.Duration duration16 = mutableInterval10.toDuration();
        org.joda.time.Duration duration17 = duration16.toDuration();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        long long23 = mutableInterval20.getEndMillis();
        boolean boolean25 = mutableInterval20.equals((java.lang.Object) ' ');
        long long26 = mutableInterval20.getStartMillis();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        boolean boolean33 = mutableInterval29.isAfter(readableInstant32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        mutableInterval29.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration63);
        mutableInterval20.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration63);
        java.lang.String str66 = duration63.toString();
        boolean boolean68 = duration63.equals((java.lang.Object) 1644572152227L);
        boolean boolean69 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        org.joda.time.PeriodType periodType73 = null;
        org.joda.time.Period period74 = mutableInterval72.toPeriod(periodType73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period74, readableInstant75);
        long long77 = mutableInterval76.getStartMillis();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        mutableInterval80.setDurationAfterStart(0L);
        boolean boolean84 = mutableInterval80.equals((java.lang.Object) (-1));
        boolean boolean85 = mutableInterval76.isAfter((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.MutableInterval mutableInterval87 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology88 = mutableInterval87.getChronology();
        org.joda.time.DateTimeField dateTimeField89 = chronology88.monthOfYear();
        org.joda.time.DateTimeField dateTimeField90 = chronology88.millisOfDay();
        mutableInterval80.setChronology(chronology88);
        org.joda.time.DurationField durationField92 = chronology88.minutes();
        org.joda.time.DurationField durationField93 = chronology88.seconds();
        boolean boolean94 = duration63.equals((java.lang.Object) durationField93);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572407861L + "'", long7 == 1644572407861L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period22);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572407861L + "'", long23 == 1644572407861L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572407861L + "'", long26 == 1644572407861L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT0S" + "'", str66, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(period74);
// flaky:         org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1644572407861L + "'", long77 == 1644572407861L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(mutableInterval87);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(dateTimeField89);
        org.junit.Assert.assertNotNull(dateTimeField90);
        org.junit.Assert.assertNotNull(durationField92);
        org.junit.Assert.assertNotNull(durationField93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test03589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03589");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        boolean boolean6 = period4.isSupported(durationFieldType5);
        boolean boolean8 = period4.equals((java.lang.Object) "hi!");
        int int9 = period4.size();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.Period period17 = mutableInterval15.toPeriod();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = period22.isSupported(durationFieldType23);
        boolean boolean26 = period22.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType28 = period22.getFieldType(0);
        int int29 = period17.get(durationFieldType28);
        int int30 = period4.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType32 = period4.getFieldType(0);
        java.lang.String str33 = period4.toString();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = mutableInterval36.toPeriod(periodType37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = period38.isSupported(durationFieldType39);
        boolean boolean42 = period38.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType44 = period38.getFieldType(0);
        org.joda.time.Period period45 = period38.toPeriod();
        int int46 = period45.size();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.Period period51 = mutableInterval49.toPeriod(periodType50);
        java.lang.Object obj52 = mutableInterval49.clone();
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.Period period54 = mutableInterval49.toPeriod(periodType53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.Period period59 = mutableInterval57.toPeriod(periodType58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        boolean boolean66 = mutableInterval62.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Period period67 = mutableInterval65.toPeriod();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.PeriodType periodType71 = null;
        org.joda.time.Period period72 = mutableInterval70.toPeriod(periodType71);
        org.joda.time.DurationFieldType durationFieldType73 = null;
        boolean boolean74 = period72.isSupported(durationFieldType73);
        boolean boolean76 = period72.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType78 = period72.getFieldType(0);
        int int79 = period67.get(durationFieldType78);
        int int80 = period59.get(durationFieldType78);
        int int81 = period54.get(durationFieldType78);
        int int82 = period45.get(durationFieldType78);
        int int83 = period4.get(durationFieldType78);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT0S" + "'", str33, "PT0S");
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(obj52);
// flaky:         org.junit.Assert.assertEquals(obj52.toString(), "2022-02-11T09:40:07.889Z/2022-02-11T09:40:07.889Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "2022-02-11T09:40:07.889Z/2022-02-11T09:40:07.889Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "2022-02-11T09:40:07.889Z/2022-02-11T09:40:07.889Z");
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test03590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03590");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.minuteOfHour();
        org.joda.time.DurationField durationField71 = chronology66.minutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        boolean boolean78 = mutableInterval74.overlaps((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.Period period79 = mutableInterval77.toPeriod();
        int[] intArray82 = chronology66.get((org.joda.time.ReadablePeriod) period79, 1644572165275L, 1644572159129L);
        org.joda.time.DurationField durationField83 = chronology66.centuries();
        org.joda.time.DateTimeField dateTimeField84 = chronology66.minuteOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:07.965Z/2022-02-11T09:40:07.965Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:07.965Z/2022-02-11T09:40:07.965Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:07.965Z/2022-02-11T09:40:07.965Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572407965L + "'", long14 == 1644572407965L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572407965L + "'", long30 == 1644572407965L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0, 0, 0, 0, 0, -6, -146]");
        org.junit.Assert.assertNotNull(durationField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
    }

    @Test
    public void test03591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03591");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        org.joda.time.PeriodType periodType72 = null;
        org.joda.time.Period period73 = mutableInterval71.toPeriod(periodType72);
        long long74 = mutableInterval71.getEndMillis();
        org.joda.time.Interval interval75 = mutableInterval71.toInterval();
        long long76 = interval75.getEndMillis();
        org.joda.time.ReadablePeriod readablePeriod77 = null;
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(readablePeriod77, readableInstant78);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.ReadableDuration readableDuration81 = null;
        org.joda.time.MutableInterval mutableInterval82 = new org.joda.time.MutableInterval(readableInstant80, readableDuration81);
        org.joda.time.PeriodType periodType83 = null;
        org.joda.time.Period period84 = mutableInterval82.toPeriod(periodType83);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period84, readableInstant85);
        boolean boolean87 = mutableInterval79.isAfter((org.joda.time.ReadableInterval) mutableInterval86);
        boolean boolean88 = interval75.contains((org.joda.time.ReadableInterval) mutableInterval79);
        org.joda.time.PeriodType periodType89 = null;
        org.joda.time.Period period90 = interval75.toPeriod(periodType89);
        int[] intArray92 = chronology66.get((org.joda.time.ReadablePeriod) period90, 1644572163097L);
        org.joda.time.DurationField durationField93 = chronology66.centuries();
        org.joda.time.DateTimeField dateTimeField94 = chronology66.weekyearOfCentury();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:07.995Z/2022-02-11T09:40:07.995Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:07.995Z/2022-02-11T09:40:07.995Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:07.995Z/2022-02-11T09:40:07.995Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572407995L + "'", long14 == 1644572407995L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572407995L + "'", long30 == 1644572407995L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(period73);
// flaky:         org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1644572407995L + "'", long74 == 1644572407995L);
        org.junit.Assert.assertNotNull(interval75);
// flaky:         org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1644572407995L + "'", long76 == 1644572407995L);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0, 2719, 1, 9, 36, 3, 97]");
        org.junit.Assert.assertNotNull(durationField93);
        org.junit.Assert.assertNotNull(dateTimeField94);
    }

    @Test
    public void test03592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03592");
        org.joda.time.ReadablePeriod readablePeriod1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutableInterval mutableInterval3 = new org.joda.time.MutableInterval(readablePeriod1, readableInstant2);
        long long4 = mutableInterval3.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = mutableInterval7.toPeriod(periodType8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.Period period17 = mutableInterval15.toPeriod();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = period22.isSupported(durationFieldType23);
        boolean boolean26 = period22.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType28 = period22.getFieldType(0);
        int int29 = period17.get(durationFieldType28);
        int int30 = period9.get(durationFieldType28);
        mutableInterval3.setPeriodAfterStart((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Interval interval32 = mutableInterval3.toInterval();
        org.joda.time.Chronology chronology33 = mutableInterval3.getChronology();
        org.joda.time.DurationField durationField34 = chronology33.eras();
        org.joda.time.DateTimeField dateTimeField35 = chronology33.clockhourOfDay();
        long long39 = chronology33.add(1644572167344L, 1644572143211L, 100);
        org.joda.time.DateTimeField dateTimeField40 = chronology33.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField41 = chronology33.millisOfDay();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval((java.lang.Object) 1644572332710L, chronology33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(chronology33);
        org.junit.Assert.assertNotNull(durationField34);
        org.junit.Assert.assertNotNull(dateTimeField35);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 166101786488444L + "'", long39 == 166101786488444L);
        org.junit.Assert.assertNotNull(dateTimeField40);
        org.junit.Assert.assertNotNull(dateTimeField41);
    }

    @Test
    public void test03593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03593");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:39.596Z/2022-02-11T09:36:39.596Z");
        boolean boolean2 = mutableInterval1.isAfterNow();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test03594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03594");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        mutableInterval4.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval12 = mutableInterval4.copy();
        boolean boolean14 = mutableInterval4.contains(1644572125519L);
        org.joda.time.Chronology chronology15 = mutableInterval4.getChronology();
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(0L, 1644572131452L, chronology15);
        org.joda.time.DurationField durationField17 = chronology15.days();
        org.joda.time.DateTimeField dateTimeField18 = chronology15.hourOfDay();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        mutableInterval21.setDurationAfterStart(0L);
        boolean boolean25 = mutableInterval21.equals((java.lang.Object) (-1));
        long long26 = mutableInterval21.getEndMillis();
        org.joda.time.DateTime dateTime27 = mutableInterval21.getEnd();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        mutableInterval37.setDurationAfterStart(0L);
        boolean boolean41 = mutableInterval37.equals((java.lang.Object) (-1));
        long long42 = mutableInterval37.getEndMillis();
        org.joda.time.DateTime dateTime43 = mutableInterval37.getEnd();
        boolean boolean44 = mutableInterval30.isAfter((org.joda.time.ReadableInstant) dateTime43);
        boolean boolean45 = dateTime27.isAfter((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        boolean boolean52 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        mutableInterval55.setDurationAfterStart(0L);
        boolean boolean59 = mutableInterval55.equals((java.lang.Object) (-1));
        long long60 = mutableInterval55.getEndMillis();
        org.joda.time.DateTime dateTime61 = mutableInterval55.getEnd();
        boolean boolean62 = mutableInterval48.isAfter((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.Chronology chronology64 = mutableInterval63.getChronology();
        long long68 = chronology64.add(1644572145503L, 1644572155173L, 8);
        org.joda.time.DateTimeZone dateTimeZone69 = chronology64.getZone();
        org.joda.time.Chronology chronology70 = chronology15.withZone(dateTimeZone69);
        org.joda.time.DateTimeField dateTimeField71 = chronology15.weekyear();
        org.joda.time.DurationField durationField72 = chronology15.months();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mutableInterval12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(durationField17);
        org.junit.Assert.assertNotNull(dateTimeField18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572408071L + "'", long26 == 1644572408071L);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1644572408071L + "'", long42 == 1644572408071L);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1644572408071L + "'", long60 == 1644572408071L);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(chronology64);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 14801149386887L + "'", long68 == 14801149386887L);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
    }

    @Test
    public void test03595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03595");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.MutableInterval mutableInterval5 = mutableInterval2.toMutableInterval();
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readablePeriod6, readableInstant7);
        long long9 = mutableInterval8.toDurationMillis();
        org.joda.time.DateTime dateTime10 = mutableInterval8.getStart();
        long long11 = mutableInterval8.getEndMillis();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readablePeriod31, readableInstant32);
        long long34 = mutableInterval33.toDurationMillis();
        boolean boolean35 = mutableInterval29.isAfter((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        boolean boolean37 = mutableInterval33.contains(readableInstant36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        boolean boolean52 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        boolean boolean59 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadablePeriod readablePeriod60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readablePeriod60, readableInstant61);
        long long63 = mutableInterval62.toDurationMillis();
        boolean boolean64 = mutableInterval58.isAfter((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        boolean boolean66 = mutableInterval62.contains(readableInstant65);
        boolean boolean67 = mutableInterval33.isBefore((org.joda.time.ReadableInterval) mutableInterval62);
        boolean boolean68 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        org.joda.time.PeriodType periodType72 = null;
        org.joda.time.Period period73 = mutableInterval71.toPeriod(periodType72);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        boolean boolean75 = period73.isSupported(durationFieldType74);
        boolean boolean77 = period73.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType79 = period73.getFieldType(0);
        mutableInterval62.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period73);
        org.joda.time.MutablePeriod mutablePeriod81 = period73.toMutablePeriod();
        org.joda.time.PeriodType periodType82 = mutablePeriod81.getPeriodType();
        org.joda.time.PeriodType periodType83 = mutablePeriod81.getPeriodType();
        org.joda.time.Period period84 = mutableInterval8.toPeriod(periodType83);
        org.joda.time.Period period85 = mutableInterval5.toPeriod(periodType83);
        java.lang.Object obj86 = null;
        boolean boolean87 = period85.equals(obj86);
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(dateTime10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1644572408126L + "'", long11 == 1644572408126L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test03596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03596");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone72 = chronology70.getZone();
        org.joda.time.Chronology chronology73 = chronology70.withUTC();
        mutableInterval2.setChronology(chronology73);
        org.joda.time.MutableInterval mutableInterval75 = mutableInterval2.copy();
        org.joda.time.Period period76 = mutableInterval75.toPeriod();
        org.joda.time.Chronology chronology77 = mutableInterval75.getChronology();
        boolean boolean79 = mutableInterval75.equals((java.lang.Object) 1644572373859L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:08.189Z/2022-02-11T09:40:08.189Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:08.189Z/2022-02-11T09:40:08.189Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:08.189Z/2022-02-11T09:40:08.189Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572408189L + "'", long18 == 1644572408189L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572408189L + "'", long34 == 1644572408189L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeZone72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(mutableInterval75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test03597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03597");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.MutableInterval mutableInterval3 = new org.joda.time.MutableInterval(readableInstant1, readableDuration2);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = mutableInterval3.toPeriod(periodType4);
        org.joda.time.MutableInterval mutableInterval6 = mutableInterval3.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval7 = mutableInterval3.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = mutableInterval12.toPeriod(periodType13);
        java.lang.Object obj15 = mutableInterval12.clone();
        org.joda.time.DateTime dateTime16 = mutableInterval12.getStart();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        boolean boolean42 = mutableInterval28.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean43 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        boolean boolean50 = mutableInterval46.overlaps((org.joda.time.ReadableInterval) mutableInterval49);
        org.joda.time.ReadablePeriod readablePeriod51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readablePeriod51, readableInstant52);
        long long54 = mutableInterval53.toDurationMillis();
        boolean boolean55 = mutableInterval49.isAfter((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        boolean boolean57 = mutableInterval53.contains(readableInstant56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        boolean boolean64 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readablePeriod65, readableInstant66);
        long long68 = mutableInterval67.toDurationMillis();
        boolean boolean69 = mutableInterval63.isAfter((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        boolean boolean71 = mutableInterval67.contains(readableInstant70);
        boolean boolean72 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.Duration duration73 = mutableInterval67.toDuration();
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime41, (org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = mutableInterval12.contains((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Chronology chronology76 = dateTime41.getChronology();
        org.joda.time.DateTimeField dateTimeField77 = chronology76.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology76);
        org.joda.time.DateTimeField dateTimeField79 = chronology76.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField80 = chronology76.yearOfEra();
        long long86 = chronology76.getDateTimeMillis(1644572135767L, 10, 8, (int) '#', (int) (byte) 10);
        mutableInterval7.setChronology(chronology76);
        java.lang.String str88 = chronology76.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval89 = new org.joda.time.MutableInterval((java.lang.Object) 1644572214575L, chronology76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutableInterval6);
        org.junit.Assert.assertNotNull(mutableInterval7);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "2022-02-11T09:40:08.214Z/2022-02-11T09:40:08.214Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "2022-02-11T09:40:08.214Z/2022-02-11T09:40:08.214Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "2022-02-11T09:40:08.214Z/2022-02-11T09:40:08.214Z");
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572408214L + "'", long24 == 1644572408214L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572408214L + "'", long40 == 1644572408214L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1644574115010L + "'", long86 == 1644574115010L);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str88, "ISOChronology[Etc/UTC]");
    }

    @Test
    public void test03598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03598");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Period period11 = mutableInterval2.toPeriod();
        org.joda.time.Chronology chronology12 = mutableInterval2.getChronology();
        org.joda.time.Interval interval13 = mutableInterval2.toInterval();
        mutableInterval2.setInterval(1644572127359L, 1644572134896L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readablePeriod24, readableInstant25);
        long long27 = mutableInterval26.toDurationMillis();
        boolean boolean28 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        boolean boolean30 = mutableInterval26.contains(readableInstant29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readablePeriod38, readableInstant39);
        long long41 = mutableInterval40.toDurationMillis();
        boolean boolean42 = mutableInterval36.isAfter((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        boolean boolean44 = mutableInterval40.contains(readableInstant43);
        boolean boolean45 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.Duration duration46 = mutableInterval40.toDuration();
        boolean boolean48 = duration46.equals((java.lang.Object) 'a');
        long long49 = duration46.getMillis();
        long long50 = duration46.getMillis();
        org.joda.time.Period period51 = duration46.toPeriod();
        int int52 = period51.size();
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period51);
        mutableInterval2.setDurationAfterStart(1644572248030L);
        org.joda.time.DateTime dateTime56 = mutableInterval2.getStart();
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = dateTime56.get(dateTimeFieldType57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8 + "'", int52 == 8);
        org.junit.Assert.assertNotNull(dateTime56);
    }

    @Test
    public void test03599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03599");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Period period11 = mutableInterval2.toPeriod();
        org.joda.time.Chronology chronology12 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.era();
        long long17 = chronology12.add(1644572209879L, 1644572161867L, (int) (byte) -1);
        org.joda.time.DateTimeField dateTimeField18 = chronology12.era();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        mutableInterval21.setDurationAfterStart(0L);
        boolean boolean25 = mutableInterval21.equals((java.lang.Object) (-1));
        mutableInterval21.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval29 = mutableInterval21.copy();
        boolean boolean31 = mutableInterval21.contains(1644572125519L);
        mutableInterval21.setEndMillis((long) (byte) 0);
        boolean boolean35 = mutableInterval21.contains(1644572133267L);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = mutableInterval38.toPeriod(periodType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = period40.isSupported(durationFieldType41);
        boolean boolean44 = period40.equals((java.lang.Object) "hi!");
        int int45 = period40.size();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        boolean boolean52 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.Period period53 = mutableInterval51.toPeriod();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.PeriodType periodType57 = null;
        org.joda.time.Period period58 = mutableInterval56.toPeriod(periodType57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = period58.isSupported(durationFieldType59);
        boolean boolean62 = period58.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType64 = period58.getFieldType(0);
        int int65 = period53.get(durationFieldType64);
        int int66 = period40.get(durationFieldType64);
        org.joda.time.MutablePeriod mutablePeriod67 = period40.toMutablePeriod();
        org.joda.time.Period period68 = period40.toPeriod();
        mutableInterval21.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period68);
        long long72 = chronology12.add((org.joda.time.ReadablePeriod) period68, 1644572271354L, 0);
        org.joda.time.Period period73 = period68.toPeriod();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 48012L + "'", long17 == 48012L);
        org.junit.Assert.assertNotNull(dateTimeField18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mutableInterval29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1644572271354L + "'", long72 == 1644572271354L);
        org.junit.Assert.assertNotNull(period73);
    }

    @Test
    public void test03600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03600");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Interval interval31 = mutableInterval2.toInterval();
        org.joda.time.MutableInterval mutableInterval32 = mutableInterval2.toMutableInterval();
        org.joda.time.Interval interval33 = mutableInterval32.toInterval();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(mutableInterval32);
        org.junit.Assert.assertNotNull(interval33);
    }

    @Test
    public void test03601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03601");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.Period period8 = mutableInterval6.toPeriod();
        java.lang.String str9 = mutableInterval6.toString();
        boolean boolean10 = mutableInterval6.isAfterNow();
        org.joda.time.DateTime dateTime11 = mutableInterval6.getEnd();
        java.lang.String str12 = dateTime11.toString();
        long long13 = dateTime11.getMillis();
        org.joda.time.Instant instant14 = dateTime11.toInstant();
        org.joda.time.Instant instant15 = instant14.toInstant();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572408521L + "'", long7 == 1644572408521L);
        org.junit.Assert.assertNotNull(period8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "2022-02-11T09:40:08.521Z/2022-02-11T09:40:08.521Z" + "'", str9, "2022-02-11T09:40:08.521Z/2022-02-11T09:40:08.521Z");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(dateTime11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "2022-02-11T09:40:08.521Z" + "'", str12, "2022-02-11T09:40:08.521Z");
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1644572408521L + "'", long13 == 1644572408521L);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNotNull(instant15);
    }

    @Test
    public void test03602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03602");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.weekyear();
        java.lang.String str70 = chronology67.toString();
        org.joda.time.DateTimeField dateTimeField71 = chronology67.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField72 = chronology67.hourOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:08.538Z/2022-02-11T09:40:08.538Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:08.538Z/2022-02-11T09:40:08.538Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:08.538Z/2022-02-11T09:40:08.538Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572408538L + "'", long14 == 1644572408538L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572408538L + "'", long30 == 1644572408538L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str70, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
    }

    @Test
    public void test03603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03603");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.contains(readableInstant5);
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        boolean boolean18 = mutableInterval14.isAfter(readableInstant17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.ReadablePeriod readablePeriod26 = null;
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readablePeriod26, readableInstant27);
        long long29 = mutableInterval28.toDurationMillis();
        boolean boolean30 = mutableInterval24.isAfter((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        boolean boolean32 = mutableInterval28.contains(readableInstant31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readablePeriod40, readableInstant41);
        long long43 = mutableInterval42.toDurationMillis();
        boolean boolean44 = mutableInterval38.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        boolean boolean46 = mutableInterval42.contains(readableInstant45);
        boolean boolean47 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.Duration duration48 = mutableInterval42.toDuration();
        mutableInterval14.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration48);
        mutableInterval11.setDurationAfterStart((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        mutableInterval53.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant56 = null;
        boolean boolean57 = mutableInterval53.isAfter(readableInstant56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        boolean boolean64 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readablePeriod65, readableInstant66);
        long long68 = mutableInterval67.toDurationMillis();
        boolean boolean69 = mutableInterval63.isAfter((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        boolean boolean71 = mutableInterval67.contains(readableInstant70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        boolean boolean78 = mutableInterval74.overlaps((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.ReadablePeriod readablePeriod79 = null;
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readablePeriod79, readableInstant80);
        long long82 = mutableInterval81.toDurationMillis();
        boolean boolean83 = mutableInterval77.isAfter((org.joda.time.ReadableInterval) mutableInterval81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        boolean boolean85 = mutableInterval81.contains(readableInstant84);
        boolean boolean86 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval81);
        org.joda.time.Duration duration87 = mutableInterval81.toDuration();
        mutableInterval53.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration87);
        boolean boolean89 = duration48.isEqual((org.joda.time.ReadableDuration) duration87);
        org.joda.time.MutableInterval mutableInterval90 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableDuration) duration48);
        long long91 = mutableInterval90.toDurationMillis();
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval90.setInterval(1644572388081L, 1644572282662L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572408630L + "'", long7 == 1644572408630L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
    }

    @Test
    public void test03604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03604");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        long long2 = mutableInterval1.getEndMillis();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        boolean boolean9 = mutableInterval5.isAfter(readableInstant8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        mutableInterval12.setStartMillis(1644572127942L);
        boolean boolean17 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        java.lang.String str18 = mutableInterval5.toString();
        long long19 = mutableInterval5.getStartMillis();
        org.joda.time.DateTime dateTime20 = mutableInterval5.getEnd();
        mutableInterval1.setEnd((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = mutableInterval24.toPeriod(periodType25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period26, readableInstant27);
        long long29 = mutableInterval28.getStartMillis();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        boolean boolean37 = mutableInterval28.isAfter((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.Period period45 = mutableInterval43.toPeriod();
        org.joda.time.Duration duration46 = mutableInterval43.toDuration();
        mutableInterval32.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration48 = duration46.toDuration();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        boolean boolean69 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readablePeriod70, readableInstant71);
        long long73 = mutableInterval72.toDurationMillis();
        boolean boolean74 = mutableInterval68.isAfter((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        boolean boolean76 = mutableInterval72.contains(readableInstant75);
        boolean boolean77 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.Duration duration78 = mutableInterval72.toDuration();
        boolean boolean80 = duration78.equals((java.lang.Object) 'a');
        long long81 = duration78.getMillis();
        boolean boolean82 = duration46.isEqual((org.joda.time.ReadableDuration) duration78);
        org.joda.time.Duration duration83 = duration46.toDuration();
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableDuration) duration83);
        org.joda.time.Duration duration85 = duration83.toDuration();
        org.joda.time.Duration duration86 = duration83.toDuration();
        java.lang.String str87 = duration86.toString();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1644572134356L + "'", long2 == 1644572134356L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2022-02-11T09:40:08.653Z/2022-02-11T09:40:08.653Z" + "'", str18, "2022-02-11T09:40:08.653Z/2022-02-11T09:40:08.653Z");
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1644572408653L + "'", long19 == 1644572408653L);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(period26);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572408653L + "'", long29 == 1644572408653L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PT0S" + "'", str87, "PT0S");
    }

    @Test
    public void test03605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03605");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        boolean boolean79 = mutableInterval75.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.Period period80 = mutableInterval78.toPeriod();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.ReadableDuration readableDuration82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readableInstant81, readableDuration82);
        org.joda.time.PeriodType periodType84 = null;
        org.joda.time.Period period85 = mutableInterval83.toPeriod(periodType84);
        org.joda.time.DurationFieldType durationFieldType86 = null;
        boolean boolean87 = period85.isSupported(durationFieldType86);
        boolean boolean89 = period85.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType91 = period85.getFieldType(0);
        int int92 = period80.get(durationFieldType91);
        int[] intArray95 = chronology70.get((org.joda.time.ReadablePeriod) period80, 1644572127855L, (long) 1);
        org.joda.time.DurationField durationField96 = chronology70.eras();
        org.joda.time.MutableInterval mutableInterval97 = new org.joda.time.MutableInterval(1644572175025L, 1644572243380L, chronology70);
        org.joda.time.PeriodType periodType98 = null;
        org.joda.time.Period period99 = mutableInterval97.toPeriod(periodType98);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:08.675Z/2022-02-11T09:40:08.675Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:08.675Z/2022-02-11T09:40:08.675Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:08.675Z/2022-02-11T09:40:08.675Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572408675L + "'", long18 == 1644572408675L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572408675L + "'", long34 == 1644572408675L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[-52, -1, -1, -3, -9, -35, -27, -854]");
        org.junit.Assert.assertNotNull(durationField96);
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test03606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03606");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        java.lang.String str70 = chronology67.toString();
        org.joda.time.Chronology chronology71 = chronology67.withUTC();
        org.joda.time.DateTimeField dateTimeField72 = chronology67.year();
        org.joda.time.DateTimeField dateTimeField73 = chronology67.era();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:08.716Z/2022-02-11T09:40:08.716Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:08.716Z/2022-02-11T09:40:08.716Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:08.716Z/2022-02-11T09:40:08.716Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572408716L + "'", long14 == 1644572408716L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572408716L + "'", long30 == 1644572408716L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str70, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
    }

    @Test
    public void test03607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03607");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval4 = mutableInterval2.toInterval();
        mutableInterval2.setStartMillis(1644572130296L);
        org.joda.time.Chronology chronology7 = mutableInterval2.getChronology();
        java.lang.String str8 = mutableInterval2.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertNotNull(chronology7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "2022-02-11T09:35:30.296Z/2022-02-11T09:40:08.742Z" + "'", str8, "2022-02-11T09:35:30.296Z/2022-02-11T09:40:08.742Z");
    }

    @Test
    public void test03608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03608");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology70);
        org.joda.time.DateTimeField dateTimeField73 = chronology70.year();
        org.joda.time.DateTimeField dateTimeField74 = chronology70.era();
        org.joda.time.DurationField durationField75 = chronology70.millis();
        org.joda.time.DateTimeField dateTimeField76 = chronology70.hourOfHalfday();
        org.joda.time.DurationField durationField77 = chronology70.days();
        org.joda.time.DurationField durationField78 = chronology70.months();
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(1644572134302L, 1644572176400L, chronology70);
        java.lang.String str80 = chronology70.toString();
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:08.751Z/2022-02-11T09:40:08.751Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:08.751Z/2022-02-11T09:40:08.751Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:08.751Z/2022-02-11T09:40:08.751Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572408751L + "'", long18 == 1644572408751L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572408751L + "'", long34 == 1644572408751L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str80, "ISOChronology[Etc/UTC]");
    }

    @Test
    public void test03609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03609");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone68 = chronology66.getZone();
        org.joda.time.Chronology chronology69 = chronology66.withUTC();
        org.joda.time.DurationField durationField70 = chronology66.days();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.centuryOfEra();
        org.joda.time.DurationField durationField72 = chronology66.months();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:08.786Z/2022-02-11T09:40:08.786Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:08.786Z/2022-02-11T09:40:08.786Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:08.786Z/2022-02-11T09:40:08.786Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572408786L + "'", long14 == 1644572408786L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572408786L + "'", long30 == 1644572408786L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeZone68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
    }

    @Test
    public void test03610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03610");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.Chronology chronology3 = null;
        mutableInterval2.setChronology(chronology3);
        long long5 = mutableInterval2.getEndMillis();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        boolean boolean12 = mutableInterval8.overlaps((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.Period period13 = mutableInterval11.toPeriod();
        mutableInterval11.setStartMillis(1644572131453L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = mutableInterval25.contains(readableInstant28);
        boolean boolean31 = mutableInterval25.isAfter(1644572126418L);
        boolean boolean32 = mutableInterval25.isBeforeNow();
        boolean boolean33 = mutableInterval11.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        boolean boolean34 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.DateTime dateTime35 = mutableInterval2.getEnd();
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572408812L + "'", long5 == 1644572408812L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(dateTime35);
    }

    @Test
    public void test03611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03611");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval4 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        boolean boolean11 = mutableInterval7.overlaps((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readablePeriod12, readableInstant13);
        long long15 = mutableInterval14.toDurationMillis();
        boolean boolean16 = mutableInterval10.isAfter((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval10.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        java.lang.String str21 = mutableInterval10.toString();
        mutableInterval10.setDurationAfterStart(1644572138042L);
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readablePeriod24, readableInstant25);
        long long27 = mutableInterval26.toDurationMillis();
        org.joda.time.DateTime dateTime28 = mutableInterval26.getStart();
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = null;
        boolean boolean30 = dateTime28.isSupported(dateTimeFieldType29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        boolean boolean46 = mutableInterval42.overlaps((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        mutableInterval49.setDurationAfterStart(0L);
        boolean boolean53 = mutableInterval49.equals((java.lang.Object) (-1));
        long long54 = mutableInterval49.getEndMillis();
        org.joda.time.DateTime dateTime55 = mutableInterval49.getEnd();
        boolean boolean56 = mutableInterval42.isAfter((org.joda.time.ReadableInstant) dateTime55);
        boolean boolean57 = dateTime39.isAfter((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        boolean boolean64 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        mutableInterval67.setDurationAfterStart(0L);
        boolean boolean71 = mutableInterval67.equals((java.lang.Object) (-1));
        long long72 = mutableInterval67.getEndMillis();
        org.joda.time.DateTime dateTime73 = mutableInterval67.getEnd();
        boolean boolean74 = mutableInterval60.isAfter((org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime73);
        boolean boolean76 = dateTime28.isEqual((org.joda.time.ReadableInstant) dateTime73);
        boolean boolean77 = mutableInterval10.contains((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Chronology chronology78 = mutableInterval10.getChronology();
        mutableInterval2.setChronology(chronology78);
        java.lang.Object obj80 = mutableInterval2.clone();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "2022-02-11T09:40:08.871Z/2022-02-11T09:40:08.871Z" + "'", str21, "2022-02-11T09:40:08.871Z/2022-02-11T09:40:08.871Z");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572408871L + "'", long38 == 1644572408871L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1644572408871L + "'", long54 == 1644572408871L);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1644572408871L + "'", long72 == 1644572408871L);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(chronology78);
        org.junit.Assert.assertNotNull(obj80);
// flaky:         org.junit.Assert.assertEquals(obj80.toString(), "2022-02-11T09:40:08.871Z/2022-02-11T09:40:08.871Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "2022-02-11T09:40:08.871Z/2022-02-11T09:40:08.871Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "2022-02-11T09:40:08.871Z/2022-02-11T09:40:08.871Z");
    }

    @Test
    public void test03612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03612");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.MutableInterval mutableInterval1 = new org.joda.time.MutableInterval();
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        long long9 = mutableInterval4.getEndMillis();
        org.joda.time.DateTime dateTime10 = mutableInterval4.getEnd();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        long long25 = mutableInterval20.getEndMillis();
        org.joda.time.DateTime dateTime26 = mutableInterval20.getEnd();
        boolean boolean27 = mutableInterval13.isAfter((org.joda.time.ReadableInstant) dateTime26);
        boolean boolean28 = dateTime10.isAfter((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadablePeriod readablePeriod36 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readablePeriod36, readableInstant37);
        long long39 = mutableInterval38.toDurationMillis();
        boolean boolean40 = mutableInterval34.isAfter((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        boolean boolean42 = mutableInterval38.contains(readableInstant41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        boolean boolean57 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.Duration duration58 = mutableInterval52.toDuration();
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableDuration) duration58);
        java.lang.String str60 = dateTime26.toString();
        org.joda.time.ReadablePeriod readablePeriod61 = null;
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readablePeriod61, readableInstant62);
        long long64 = mutableInterval63.toDurationMillis();
        org.joda.time.DateTime dateTime65 = mutableInterval63.getStart();
        boolean boolean66 = dateTime26.isBefore((org.joda.time.ReadableInstant) dateTime65);
        mutableInterval1.setEnd((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readablePeriod0, (org.joda.time.ReadableInstant) dateTime26);
        boolean boolean70 = mutableInterval68.isAfter(1644572369383L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572408916L + "'", long9 == 1644572408916L);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572408916L + "'", long25 == 1644572408916L);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration58);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "2022-02-11T09:40:08.916Z" + "'", str60, "2022-02-11T09:40:08.916Z");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(dateTime65);
// flaky:         org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test03613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03613");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.weekyearOfCentury();
        org.joda.time.DurationField durationField75 = chronology66.minutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:08.998Z/2022-02-11T09:40:08.998Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:08.998Z/2022-02-11T09:40:08.998Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:08.998Z/2022-02-11T09:40:08.998Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572408998L + "'", long14 == 1644572408998L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572408998L + "'", long30 == 1644572408998L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(durationField75);
    }

    @Test
    public void test03614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03614");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        boolean boolean28 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        boolean boolean30 = mutableInterval9.contains((long) (byte) 1);
        mutableInterval9.setStartMillis(1644572139735L);
        java.lang.Object obj33 = mutableInterval9.clone();
        boolean boolean35 = mutableInterval9.isAfter(1644572167137L);
        mutableInterval9.setEndMillis(1644572213645L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "2022-02-11T09:35:39.735Z/2022-02-11T09:40:09.110Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "2022-02-11T09:35:39.735Z/2022-02-11T09:40:09.110Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "2022-02-11T09:35:39.735Z/2022-02-11T09:40:09.110Z");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test03615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03615");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        java.lang.Object obj9 = mutableInterval2.clone();
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval();
        org.joda.time.DateTime dateTime11 = mutableInterval10.getEnd();
        boolean boolean12 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.Period period13 = mutableInterval2.toPeriod();
        org.joda.time.Interval interval14 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = mutableInterval17.toPeriod(periodType18);
        long long20 = mutableInterval17.getEndMillis();
        boolean boolean22 = mutableInterval17.equals((java.lang.Object) ' ');
        long long23 = mutableInterval17.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        boolean boolean30 = mutableInterval26.isAfter(readableInstant29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readablePeriod38, readableInstant39);
        long long41 = mutableInterval40.toDurationMillis();
        boolean boolean42 = mutableInterval36.isAfter((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        boolean boolean44 = mutableInterval40.contains(readableInstant43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        boolean boolean59 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.Duration duration60 = mutableInterval54.toDuration();
        mutableInterval26.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration60);
        mutableInterval17.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration60);
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration60);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572409161L + "'", long7 == 1644572409161L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:09.161Z/2022-02-11T09:40:09.161Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:09.161Z/2022-02-11T09:40:09.161Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:09.161Z/2022-02-11T09:40:09.161Z");
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(period19);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1644572409161L + "'", long20 == 1644572409161L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572409161L + "'", long23 == 1644572409161L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration60);
    }

    @Test
    public void test03616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03616");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:00.742Z/2022-02-11T09:36:00.742Z");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        long long7 = mutableInterval4.getEndMillis();
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(1644572127679L, 1644572180474L);
        mutableInterval4.setInterval((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.DateTime dateTime12 = mutableInterval4.getEnd();
        mutableInterval1.setEnd((org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = dateTime12.get(dateTimeFieldType14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(period6);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572409184L + "'", long7 == 1644572409184L);
        org.junit.Assert.assertNotNull(dateTime12);
    }

    @Test
    public void test03617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03617");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.monthOfYear();
        long long74 = chronology66.getDateTimeMillis(1644572130375L, 0, (int) (short) 0, 1, (int) (short) 100);
        org.joda.time.DateTimeField dateTimeField75 = chronology66.weekyear();
        org.joda.time.DurationField durationField76 = chronology66.months();
        org.joda.time.DurationField durationField77 = chronology66.weeks();
        org.joda.time.DateTimeField dateTimeField78 = chronology66.hourOfDay();
        org.joda.time.DateTimeField dateTimeField79 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField80 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField81 = chronology66.millisOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:09.194Z/2022-02-11T09:40:09.194Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:09.194Z/2022-02-11T09:40:09.194Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:09.194Z/2022-02-11T09:40:09.194Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572409194L + "'", long14 == 1644572409194L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572409194L + "'", long30 == 1644572409194L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1644537601100L + "'", long74 == 1644537601100L);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTimeField81);
    }

    @Test
    public void test03618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03618");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readablePeriod16, readableInstant17);
        long long19 = mutableInterval18.toDurationMillis();
        boolean boolean20 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        boolean boolean41 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readablePeriod42, readableInstant43);
        long long45 = mutableInterval44.toDurationMillis();
        boolean boolean46 = mutableInterval40.isAfter((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        boolean boolean48 = mutableInterval44.contains(readableInstant47);
        boolean boolean49 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval30.isBefore((org.joda.time.ReadableInterval) mutableInterval59);
        boolean boolean65 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = mutableInterval68.toPeriod(periodType69);
        org.joda.time.DurationFieldType durationFieldType71 = null;
        boolean boolean72 = period70.isSupported(durationFieldType71);
        boolean boolean74 = period70.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType76 = period70.getFieldType(0);
        mutableInterval59.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period70);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period70);
        int int79 = period70.size();
        int int81 = period70.getValue((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        org.joda.time.PeriodType periodType85 = null;
        org.joda.time.Period period86 = mutableInterval84.toPeriod(periodType85);
        java.lang.Object obj87 = mutableInterval84.clone();
        org.joda.time.DateTime dateTime88 = mutableInterval84.getStart();
        org.joda.time.DateTimeZone dateTimeZone89 = dateTime88.getZone();
        org.joda.time.MutableInterval mutableInterval90 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period70, (org.joda.time.ReadableInstant) dateTime88);
        boolean boolean91 = mutableInterval90.containsNow();
        org.joda.time.MutableInterval mutableInterval92 = mutableInterval90.toMutableInterval();
        long long93 = mutableInterval92.toDurationMillis();
        boolean boolean94 = mutableInterval92.isBeforeNow();
        boolean boolean96 = mutableInterval92.isAfter(1644572210002L);
        org.joda.time.MutableInterval mutableInterval97 = mutableInterval92.copy();
        org.joda.time.Period period98 = mutableInterval97.toPeriod();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572409221L + "'", long7 == 1644572409221L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8 + "'", int79 == 8);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(obj87);
// flaky:         org.junit.Assert.assertEquals(obj87.toString(), "2022-02-11T09:40:09.221Z/2022-02-11T09:40:09.221Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "2022-02-11T09:40:09.221Z/2022-02-11T09:40:09.221Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "2022-02-11T09:40:09.221Z/2022-02-11T09:40:09.221Z");
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertNotNull(dateTimeZone89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(mutableInterval92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(mutableInterval97);
        org.junit.Assert.assertNotNull(period98);
    }

    @Test
    public void test03619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03619");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.year();
        org.joda.time.DateTimeField dateTimeField72 = chronology68.era();
        org.joda.time.DateTimeField dateTimeField73 = chronology68.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField75 = chronology68.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField76 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField77 = chronology68.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField78 = chronology68.era();
        org.joda.time.DurationField durationField79 = chronology68.halfdays();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:09.297Z/2022-02-11T09:40:09.297Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:09.297Z/2022-02-11T09:40:09.297Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:09.297Z/2022-02-11T09:40:09.297Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572409297L + "'", long16 == 1644572409297L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572409297L + "'", long32 == 1644572409297L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(durationField79);
    }

    @Test
    public void test03620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03620");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DurationField durationField69 = chronology66.weeks();
        org.joda.time.Chronology chronology70 = chronology66.withUTC();
        org.joda.time.DurationField durationField71 = chronology66.millis();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.millisOfSecond();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:09.354Z/2022-02-11T09:40:09.354Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:09.354Z/2022-02-11T09:40:09.354Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:09.354Z/2022-02-11T09:40:09.354Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572409354L + "'", long14 == 1644572409354L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572409354L + "'", long30 == 1644572409354L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
    }

    @Test
    public void test03621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03621");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        mutableInterval9.setStartMillis(1644572127942L);
        boolean boolean14 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = mutableInterval17.toPeriod(periodType18);
        java.lang.Object obj20 = mutableInterval17.clone();
        org.joda.time.DateTime dateTime21 = mutableInterval17.getStart();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        mutableInterval24.setDurationAfterStart(0L);
        boolean boolean28 = mutableInterval24.equals((java.lang.Object) (-1));
        long long29 = mutableInterval24.getEndMillis();
        org.joda.time.DateTime dateTime30 = mutableInterval24.getEnd();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        boolean boolean44 = mutableInterval40.equals((java.lang.Object) (-1));
        long long45 = mutableInterval40.getEndMillis();
        org.joda.time.DateTime dateTime46 = mutableInterval40.getEnd();
        boolean boolean47 = mutableInterval33.isAfter((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean48 = dateTime30.isAfter((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        boolean boolean69 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readablePeriod70, readableInstant71);
        long long73 = mutableInterval72.toDurationMillis();
        boolean boolean74 = mutableInterval68.isAfter((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        boolean boolean76 = mutableInterval72.contains(readableInstant75);
        boolean boolean77 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.Duration duration78 = mutableInterval72.toDuration();
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = mutableInterval17.contains((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Chronology chronology81 = dateTime46.getChronology();
        org.joda.time.DateTimeField dateTimeField82 = chronology81.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField83 = chronology81.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField84 = chronology81.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField85 = chronology81.centuryOfEra();
        mutableInterval9.setChronology(chronology81);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.ReadableDuration readableDuration88 = null;
        org.joda.time.MutableInterval mutableInterval89 = new org.joda.time.MutableInterval(readableInstant87, readableDuration88);
        org.joda.time.PeriodType periodType90 = null;
        org.joda.time.Period period91 = mutableInterval89.toPeriod(periodType90);
        org.joda.time.ReadableInstant readableInstant92 = null;
        org.joda.time.MutableInterval mutableInterval93 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period91, readableInstant92);
        long long94 = mutableInterval93.getStartMillis();
        org.joda.time.Period period95 = mutableInterval93.toPeriod();
        mutableInterval9.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period95);
        org.joda.time.Interval interval97 = mutableInterval9.toInterval();
        boolean boolean99 = mutableInterval9.contains(1644572259434L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "2022-02-11T09:40:09.419Z/2022-02-11T09:40:09.419Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "2022-02-11T09:40:09.419Z/2022-02-11T09:40:09.419Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "2022-02-11T09:40:09.419Z/2022-02-11T09:40:09.419Z");
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572409419L + "'", long29 == 1644572409419L);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1644572409419L + "'", long45 == 1644572409419L);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertNotNull(dateTimeField82);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(period91);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572409419L + "'", long94 == 1644572409419L);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(interval97);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03622");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone68 = chronology66.getZone();
        org.joda.time.Chronology chronology69 = chronology66.withUTC();
        java.lang.String str70 = chronology69.toString();
        org.joda.time.DateTimeField dateTimeField71 = chronology69.era();
        org.joda.time.DurationField durationField72 = chronology69.minutes();
        org.joda.time.DateTimeField dateTimeField73 = chronology69.monthOfYear();
        org.joda.time.DurationField durationField74 = chronology69.hours();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:09.445Z/2022-02-11T09:40:09.445Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:09.445Z/2022-02-11T09:40:09.445Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:09.445Z/2022-02-11T09:40:09.445Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572409445L + "'", long14 == 1644572409445L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572409445L + "'", long30 == 1644572409445L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeZone68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ISOChronology[UTC]" + "'", str70, "ISOChronology[UTC]");
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(durationField74);
    }

    @Test
    public void test03623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03623");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.MutableInterval mutableInterval18 = mutableInterval14.toMutableInterval();
        org.joda.time.Duration duration19 = mutableInterval18.toDuration();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = mutableInterval22.toPeriod(periodType23);
        java.lang.Object obj25 = mutableInterval22.clone();
        boolean boolean26 = mutableInterval22.containsNow();
        boolean boolean27 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = mutableInterval34.toPeriod(periodType35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        boolean boolean43 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.Period period44 = mutableInterval42.toPeriod();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = mutableInterval47.toPeriod(periodType48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = period49.isSupported(durationFieldType50);
        boolean boolean53 = period49.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType55 = period49.getFieldType(0);
        int int56 = period44.get(durationFieldType55);
        int int57 = period36.get(durationFieldType55);
        mutableInterval30.setPeriodAfterStart((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Interval interval59 = mutableInterval30.toInterval();
        org.joda.time.Chronology chronology60 = mutableInterval30.getChronology();
        org.joda.time.DateTimeField dateTimeField61 = chronology60.halfdayOfDay();
        mutableInterval18.setChronology(chronology60);
        org.joda.time.DurationField durationField63 = chronology60.centuries();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(mutableInterval18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals(obj25.toString(), "2022-02-11T09:40:09.477Z/2022-02-11T09:40:09.477Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "2022-02-11T09:40:09.477Z/2022-02-11T09:40:09.477Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "2022-02-11T09:40:09.477Z/2022-02-11T09:40:09.477Z");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(chronology60);
        org.junit.Assert.assertNotNull(dateTimeField61);
        org.junit.Assert.assertNotNull(durationField63);
    }

    @Test
    public void test03624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03624");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572161641L, 1644572323987L);
    }

    @Test
    public void test03625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03625");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        mutableInterval16.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean24 = mutableInterval9.contains((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        mutableInterval27.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval35 = mutableInterval27.copy();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        boolean boolean44 = mutableInterval41.contains(readableInstant43);
        boolean boolean45 = mutableInterval35.contains((org.joda.time.ReadableInterval) mutableInterval41);
        boolean boolean46 = mutableInterval9.contains((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        boolean boolean53 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval52.contains(readableInstant54);
        org.joda.time.Period period56 = mutableInterval52.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod57 = period56.toMutablePeriod();
        mutableInterval9.setPeriodAfterStart((org.joda.time.ReadablePeriod) mutablePeriod57);
        org.joda.time.PeriodType periodType59 = mutablePeriod57.getPeriodType();
        org.joda.time.Period period60 = mutableInterval2.toPeriod(periodType59);
        org.joda.time.MutableInterval mutableInterval61 = mutableInterval2.copy();
        mutableInterval61.setStartMillis(1644572193118L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mutableInterval35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(mutableInterval61);
    }

    @Test
    public void test03626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03626");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        mutableInterval9.setStartMillis(1644572127942L);
        boolean boolean14 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval9);
        java.lang.String str15 = mutableInterval2.toString();
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readablePeriod16, readableInstant17);
        long long19 = mutableInterval18.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = mutableInterval22.toPeriod(periodType23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Period period32 = mutableInterval30.toPeriod();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = mutableInterval35.toPeriod(periodType36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = period37.isSupported(durationFieldType38);
        boolean boolean41 = period37.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType43 = period37.getFieldType(0);
        int int44 = period32.get(durationFieldType43);
        int int45 = period24.get(durationFieldType43);
        mutableInterval18.setPeriodAfterStart((org.joda.time.ReadablePeriod) period24);
        org.joda.time.DateTime dateTime47 = mutableInterval18.getEnd();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.Period period52 = mutableInterval50.toPeriod(periodType51);
        java.lang.Object obj53 = mutableInterval50.clone();
        org.joda.time.DateTime dateTime54 = mutableInterval50.getStart();
        org.joda.time.MutableInterval mutableInterval55 = mutableInterval50.toMutableInterval();
        org.joda.time.Duration duration56 = mutableInterval55.toDuration();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = mutableInterval59.toPeriod(periodType60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period61, readableInstant62);
        long long64 = mutableInterval63.getStartMillis();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        mutableInterval67.setDurationAfterStart(0L);
        boolean boolean71 = mutableInterval67.equals((java.lang.Object) (-1));
        boolean boolean72 = mutableInterval63.isAfter((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        boolean boolean79 = mutableInterval75.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.Period period80 = mutableInterval78.toPeriod();
        org.joda.time.Duration duration81 = mutableInterval78.toDuration();
        mutableInterval67.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration83 = duration81.toDuration();
        mutableInterval55.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration81);
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableDuration) duration81);
        boolean boolean86 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime47);
        boolean boolean88 = mutableInterval2.contains(1644572147944L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "2022-02-11T09:40:09.570Z/2022-02-11T09:40:09.570Z" + "'", str15, "2022-02-11T09:40:09.570Z/2022-02-11T09:40:09.570Z");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals(obj53.toString(), "2022-02-11T09:40:09.570Z/2022-02-11T09:40:09.570Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "2022-02-11T09:40:09.570Z/2022-02-11T09:40:09.570Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "2022-02-11T09:40:09.570Z/2022-02-11T09:40:09.570Z");
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertNotNull(mutableInterval55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(period61);
// flaky:         org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1644572409570L + "'", long64 == 1644572409570L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test03627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03627");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        boolean boolean14 = mutableInterval10.overlaps((org.joda.time.ReadableInterval) mutableInterval13);
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readablePeriod15, readableInstant16);
        long long18 = mutableInterval17.toDurationMillis();
        boolean boolean19 = mutableInterval13.isAfter((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        boolean boolean21 = mutableInterval17.contains(readableInstant20);
        long long22 = mutableInterval17.getEndMillis();
        boolean boolean23 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = mutableInterval26.toPeriod(periodType27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period28, readableInstant29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readablePeriod38, readableInstant39);
        long long41 = mutableInterval40.toDurationMillis();
        boolean boolean42 = mutableInterval36.isAfter((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        boolean boolean44 = mutableInterval40.contains(readableInstant43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        boolean boolean59 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.Duration duration60 = mutableInterval54.toDuration();
        boolean boolean62 = duration60.equals((java.lang.Object) 'a');
        mutableInterval30.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration60);
        org.joda.time.DateTime dateTime64 = mutableInterval30.getStart();
        boolean boolean65 = mutableInterval6.isBefore((org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.Instant instant66 = dateTime64.toInstant();
        org.joda.time.Chronology chronology67 = instant66.getChronology();
        org.joda.time.DateTimeZone dateTimeZone68 = instant66.getZone();
        org.joda.time.DateTimeFieldType dateTimeFieldType69 = null;
        boolean boolean70 = instant66.isSupported(dateTimeFieldType69);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572409594L + "'", long7 == 1644572409594L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572409594L + "'", long22 == 1644572409594L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(dateTime64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(instant66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(dateTimeZone68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test03628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03628");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.Duration duration16 = mutableInterval10.toDuration();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        boolean boolean23 = mutableInterval19.isAfter(readableInstant22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readablePeriod31, readableInstant32);
        long long34 = mutableInterval33.toDurationMillis();
        boolean boolean35 = mutableInterval29.isAfter((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        boolean boolean37 = mutableInterval33.contains(readableInstant36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        boolean boolean52 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.Duration duration53 = mutableInterval47.toDuration();
        mutableInterval19.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        boolean boolean75 = mutableInterval71.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadablePeriod readablePeriod76 = null;
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readablePeriod76, readableInstant77);
        long long79 = mutableInterval78.toDurationMillis();
        boolean boolean80 = mutableInterval74.isAfter((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.ReadableInstant readableInstant81 = null;
        boolean boolean82 = mutableInterval78.contains(readableInstant81);
        boolean boolean83 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.Duration duration84 = mutableInterval78.toDuration();
        mutableInterval19.setDurationAfterStart((org.joda.time.ReadableDuration) duration84);
        java.lang.String str86 = duration84.toString();
        java.lang.String str87 = duration84.toString();
        int int88 = duration16.compareTo((org.joda.time.ReadableDuration) duration84);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572409618L + "'", long7 == 1644572409618L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "PT0S" + "'", str86, "PT0S");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PT0S" + "'", str87, "PT0S");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test03629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03629");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readablePeriod9, readableInstant10);
        long long12 = mutableInterval11.toDurationMillis();
        boolean boolean13 = mutableInterval7.isAfter((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        boolean boolean15 = mutableInterval11.contains(readableInstant14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = mutableInterval25.contains(readableInstant28);
        boolean boolean30 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        long long31 = mutableInterval25.getStartMillis();
        org.joda.time.Chronology chronology32 = mutableInterval25.getChronology();
        org.joda.time.DateTimeField dateTimeField33 = chronology32.millisOfDay();
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(1644572134186L, 1644572156655L, chronology32);
        boolean boolean35 = mutableInterval34.containsNow();
        org.joda.time.DateTime dateTime36 = mutableInterval34.getEnd();
        org.joda.time.Chronology chronology37 = mutableInterval34.getChronology();
        org.joda.time.ReadablePartial readablePartial38 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray40 = chronology37.get(readablePartial38, 1644572320600L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572409666L + "'", long31 == 1644572409666L);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(dateTimeField33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(chronology37);
    }

    @Test
    public void test03630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03630");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.DateTime dateTime4 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = mutableInterval7.toPeriod(periodType8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period9, readableInstant10);
        long long12 = mutableInterval11.getStartMillis();
        org.joda.time.Period period13 = mutableInterval11.toPeriod();
        java.lang.String str14 = mutableInterval11.toString();
        boolean boolean15 = mutableInterval11.isAfterNow();
        org.joda.time.DateTime dateTime16 = mutableInterval11.getEnd();
        org.joda.time.Instant instant17 = dateTime16.toInstant();
        boolean boolean19 = dateTime16.equals((java.lang.Object) 1644572149346L);
        long long20 = dateTime16.getMillis();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = mutableInterval23.toPeriod(periodType24);
        java.lang.Object obj26 = mutableInterval23.clone();
        org.joda.time.Interval interval27 = mutableInterval23.toInterval();
        org.joda.time.Chronology chronology28 = mutableInterval23.getChronology();
        boolean boolean29 = dateTime16.equals((java.lang.Object) chronology28);
        boolean boolean30 = dateTime4.isAfter((org.joda.time.ReadableInstant) dateTime16);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(dateTime4);
        org.junit.Assert.assertNotNull(period9);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1644572409749L + "'", long12 == 1644572409749L);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "2022-02-11T09:40:09.749Z/2022-02-11T09:40:09.749Z" + "'", str14, "2022-02-11T09:40:09.749Z/2022-02-11T09:40:09.749Z");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1644572409749L + "'", long20 == 1644572409749L);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(obj26);
// flaky:         org.junit.Assert.assertEquals(obj26.toString(), "2022-02-11T09:40:09.749Z/2022-02-11T09:40:09.749Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "2022-02-11T09:40:09.749Z/2022-02-11T09:40:09.749Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "2022-02-11T09:40:09.749Z/2022-02-11T09:40:09.749Z");
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(chronology28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test03631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03631");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Duration duration8 = mutableInterval5.toDuration();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        java.lang.Object obj14 = mutableInterval11.clone();
        org.joda.time.DateTime dateTime15 = mutableInterval11.getStart();
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval((org.joda.time.ReadableDuration) duration8, (org.joda.time.ReadableInstant) dateTime15);
        java.lang.String str17 = duration8.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals(obj14.toString(), "2022-02-11T09:40:09.775Z/2022-02-11T09:40:09.775Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "2022-02-11T09:40:09.775Z/2022-02-11T09:40:09.775Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "2022-02-11T09:40:09.775Z/2022-02-11T09:40:09.775Z");
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0S" + "'", str17, "PT0S");
    }

    @Test
    public void test03632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03632");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.hours();
        org.joda.time.DurationField durationField69 = chronology67.months();
        org.joda.time.DateTimeZone dateTimeZone70 = chronology67.getZone();
        org.joda.time.DurationField durationField71 = chronology67.minutes();
        org.joda.time.DateTimeZone dateTimeZone72 = null;
        org.joda.time.Chronology chronology73 = chronology67.withZone(dateTimeZone72);
        org.joda.time.DateTimeField dateTimeField74 = chronology67.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField75 = chronology67.dayOfWeek();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:09.832Z/2022-02-11T09:40:09.832Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:09.832Z/2022-02-11T09:40:09.832Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:09.832Z/2022-02-11T09:40:09.832Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572409832L + "'", long14 == 1644572409832L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572409832L + "'", long30 == 1644572409832L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertNotNull(dateTimeZone70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03633");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.secondOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology67.secondOfDay();
        // The following exception was thrown during execution in test generation
        try {
            long long78 = chronology67.getDateTimeMillis(8, (int) (byte) 100, (int) (short) 100, (int) '4', (int) 'a', (int) (byte) 1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 52 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:09.907Z/2022-02-11T09:40:09.907Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:09.907Z/2022-02-11T09:40:09.907Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:09.907Z/2022-02-11T09:40:09.907Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572409907L + "'", long14 == 1644572409907L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572409907L + "'", long30 == 1644572409907L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
    }

    @Test
    public void test03634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03634");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        java.lang.Object obj23 = mutableInterval20.clone();
        org.joda.time.DateTime dateTime24 = mutableInterval20.getStart();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        mutableInterval43.setDurationAfterStart(0L);
        boolean boolean47 = mutableInterval43.equals((java.lang.Object) (-1));
        long long48 = mutableInterval43.getEndMillis();
        org.joda.time.DateTime dateTime49 = mutableInterval43.getEnd();
        boolean boolean50 = mutableInterval36.isAfter((org.joda.time.ReadableInstant) dateTime49);
        boolean boolean51 = dateTime33.isAfter((org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        boolean boolean72 = mutableInterval68.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.ReadablePeriod readablePeriod73 = null;
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readablePeriod73, readableInstant74);
        long long76 = mutableInterval75.toDurationMillis();
        boolean boolean77 = mutableInterval71.isAfter((org.joda.time.ReadableInterval) mutableInterval75);
        org.joda.time.ReadableInstant readableInstant78 = null;
        boolean boolean79 = mutableInterval75.contains(readableInstant78);
        boolean boolean80 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        org.joda.time.Duration duration81 = mutableInterval75.toDuration();
        org.joda.time.MutableInterval mutableInterval82 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = mutableInterval20.contains((org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.DateTime dateTime84 = mutableInterval20.getEnd();
        boolean boolean86 = mutableInterval20.isAfter(1644572124750L);
        boolean boolean87 = interval17.isBefore((org.joda.time.ReadableInterval) mutableInterval20);
        boolean boolean88 = mutableInterval20.isBeforeNow();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals(obj23.toString(), "2022-02-11T09:40:09.949Z/2022-02-11T09:40:09.949Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "2022-02-11T09:40:09.949Z/2022-02-11T09:40:09.949Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "2022-02-11T09:40:09.949Z/2022-02-11T09:40:09.949Z");
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572409949L + "'", long32 == 1644572409949L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1644572409949L + "'", long48 == 1644572409949L);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test03635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03635");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.Period period8 = mutableInterval6.toPeriod();
        long long9 = mutableInterval6.toDurationMillis();
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval6.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        boolean boolean17 = mutableInterval13.isAfter(readableInstant16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        mutableInterval20.setStartMillis(1644572127942L);
        boolean boolean25 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        mutableInterval28.setDurationAfterStart(0L);
        boolean boolean32 = mutableInterval28.equals((java.lang.Object) (-1));
        mutableInterval28.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period36 = mutableInterval28.toPeriod();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        boolean boolean43 = mutableInterval39.contains(readableInstant42);
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getStart();
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period36, (org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        mutableInterval49.setDurationAfterStart(0L);
        boolean boolean53 = mutableInterval49.equals((java.lang.Object) (-1));
        long long54 = mutableInterval49.getEndMillis();
        org.joda.time.DateTime dateTime55 = mutableInterval49.getEnd();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        mutableInterval65.setDurationAfterStart(0L);
        boolean boolean69 = mutableInterval65.equals((java.lang.Object) (-1));
        long long70 = mutableInterval65.getEndMillis();
        org.joda.time.DateTime dateTime71 = mutableInterval65.getEnd();
        boolean boolean72 = mutableInterval58.isAfter((org.joda.time.ReadableInstant) dateTime71);
        boolean boolean73 = dateTime55.isAfter((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.ReadableDuration readableDuration78 = null;
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(readableInstant77, readableDuration78);
        boolean boolean80 = mutableInterval76.overlaps((org.joda.time.ReadableInterval) mutableInterval79);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.ReadableDuration readableDuration82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readableInstant81, readableDuration82);
        mutableInterval83.setDurationAfterStart(0L);
        boolean boolean87 = mutableInterval83.equals((java.lang.Object) (-1));
        long long88 = mutableInterval83.getEndMillis();
        org.joda.time.DateTime dateTime89 = mutableInterval83.getEnd();
        boolean boolean90 = mutableInterval76.isAfter((org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.MutableInterval mutableInterval91 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime71, (org.joda.time.ReadableInstant) dateTime89);
        boolean boolean92 = dateTime45.isBefore((org.joda.time.ReadableInstant) dateTime89);
        boolean boolean93 = mutableInterval20.contains((org.joda.time.ReadableInstant) dateTime45);
        mutableInterval10.setEnd((org.joda.time.ReadableInstant) dateTime45);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572409977L + "'", long7 == 1644572409977L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572409977L + "'", long44 == 1644572409977L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1644572409977L + "'", long54 == 1644572409977L);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1644572409977L + "'", long70 == 1644572409977L);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1644572409977L + "'", long88 == 1644572409977L);
        org.junit.Assert.assertNotNull(dateTime89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test03636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03636");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.hours();
        org.joda.time.DurationField durationField69 = chronology67.months();
        org.joda.time.DateTimeZone dateTimeZone70 = chronology67.getZone();
        org.joda.time.DateTimeField dateTimeField71 = chronology67.millisOfDay();
        org.joda.time.DateTimeField dateTimeField72 = chronology67.weekyear();
        org.joda.time.DateTimeField dateTimeField73 = chronology67.era();
        org.joda.time.DateTimeField dateTimeField74 = chronology67.minuteOfHour();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:10.030Z/2022-02-11T09:40:10.030Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:10.030Z/2022-02-11T09:40:10.030Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:10.030Z/2022-02-11T09:40:10.030Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572410030L + "'", long14 == 1644572410030L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572410030L + "'", long30 == 1644572410030L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertNotNull(dateTimeZone70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03637");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.dayOfYear();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
    }

    @Test
    public void test03638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03638");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.hourOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField74 = chronology66.years();
        java.lang.String str75 = chronology66.toString();
        org.joda.time.DateTimeField dateTimeField76 = chronology66.hourOfHalfday();
        long long80 = chronology66.add(1644572199310L, 1644572233514L, (int) 'a');
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:10.108Z/2022-02-11T09:40:10.108Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:10.108Z/2022-02-11T09:40:10.108Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:10.108Z/2022-02-11T09:40:10.108Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572410108L + "'", long14 == 1644572410108L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572410108L + "'", long30 == 1644572410108L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str75, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 161168078850168L + "'", long80 == 161168078850168L);
    }

    @Test
    public void test03639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03639");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572391120L, 1644572276840L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03640");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:23.863Z/2022-02-11T09:36:23.863Z");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        long long9 = mutableInterval4.getEndMillis();
        org.joda.time.DateTime dateTime10 = mutableInterval4.getEnd();
        mutableInterval4.setInterval(1644572126318L, 1644572134016L);
        org.joda.time.Interval interval14 = mutableInterval4.toInterval();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        boolean boolean21 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.Period period22 = mutableInterval20.toPeriod();
        org.joda.time.Duration duration23 = mutableInterval20.toDuration();
        long long24 = duration23.getMillis();
        mutableInterval4.setDurationAfterStart((org.joda.time.ReadableDuration) duration23);
        long long26 = mutableInterval4.getEndMillis();
        boolean boolean27 = mutableInterval4.isBeforeNow();
        org.joda.time.Period period28 = mutableInterval4.toPeriod();
        mutableInterval1.setPeriodAfterStart((org.joda.time.ReadablePeriod) period28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readablePeriod37, readableInstant38);
        long long40 = mutableInterval39.toDurationMillis();
        boolean boolean41 = mutableInterval35.isAfter((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        boolean boolean43 = mutableInterval39.contains(readableInstant42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        boolean boolean50 = mutableInterval46.overlaps((org.joda.time.ReadableInterval) mutableInterval49);
        org.joda.time.ReadablePeriod readablePeriod51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readablePeriod51, readableInstant52);
        long long54 = mutableInterval53.toDurationMillis();
        boolean boolean55 = mutableInterval49.isAfter((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        boolean boolean57 = mutableInterval53.contains(readableInstant56);
        boolean boolean58 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        mutableInterval39.setStartMillis(1644572125906L);
        long long61 = mutableInterval39.getStartMillis();
        org.joda.time.Chronology chronology62 = mutableInterval39.getChronology();
        org.joda.time.DateTime dateTime63 = mutableInterval39.getEnd();
        boolean boolean65 = dateTime63.equals((java.lang.Object) 1644572233419L);
        mutableInterval1.setEnd((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableDuration readableDuration68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readableInstant67, readableDuration68);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        boolean boolean73 = mutableInterval69.overlaps((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.Period period74 = mutableInterval72.toPeriod();
        org.joda.time.Chronology chronology75 = mutableInterval72.getChronology();
        org.joda.time.DateTimeField dateTimeField76 = chronology75.monthOfYear();
        org.joda.time.DurationField durationField77 = chronology75.minutes();
        org.joda.time.DateTimeZone dateTimeZone78 = chronology75.getZone();
        org.joda.time.DurationField durationField79 = chronology75.years();
        long long83 = chronology75.add(1644572178830L, 1644572166931L, 8);
        org.joda.time.DateTimeField dateTimeField84 = chronology75.dayOfYear();
        org.joda.time.DateTimeField dateTimeField85 = chronology75.dayOfMonth();
        boolean boolean86 = dateTime63.equals((java.lang.Object) dateTimeField85);
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572410256L + "'", long9 == 1644572410256L);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572126318L + "'", long26 == 1644572126318L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572125906L + "'", long61 == 1644572125906L);
        org.junit.Assert.assertNotNull(chronology62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeZone78);
        org.junit.Assert.assertNotNull(durationField79);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 14801149514278L + "'", long83 == 14801149514278L);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test03641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03641");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period10 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        boolean boolean17 = mutableInterval13.contains(readableInstant16);
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getStart();
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, (org.joda.time.ReadableInstant) dateTime19);
        int int21 = period10.size();
        org.joda.time.PeriodType periodType22 = period10.getPeriodType();
        org.joda.time.PeriodType periodType23 = period10.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = period10.getFieldType((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572410350L + "'", long18 == 1644572410350L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
    }

    @Test
    public void test03642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03642");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        boolean boolean25 = period21.equals((java.lang.Object) readableInstant23);
        mutableInterval5.setPeriodAfterStart((org.joda.time.ReadablePeriod) period21);
        mutableInterval5.setDurationAfterStart((long) 1);
        boolean boolean30 = mutableInterval5.isBefore((long) (byte) 100);
        long long31 = mutableInterval5.getEndMillis();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        boolean boolean38 = mutableInterval34.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadablePeriod readablePeriod39 = null;
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readablePeriod39, readableInstant40);
        long long42 = mutableInterval41.toDurationMillis();
        boolean boolean43 = mutableInterval37.isAfter((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        boolean boolean48 = mutableInterval46.isBeforeNow();
        org.joda.time.Interval interval49 = mutableInterval46.toInterval();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        mutableInterval52.setDurationAfterStart(0L);
        boolean boolean56 = mutableInterval52.equals((java.lang.Object) (-1));
        mutableInterval52.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean60 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.Period period61 = mutableInterval52.toPeriod();
        mutableInterval5.setInterval((org.joda.time.ReadableInterval) mutableInterval52);
        mutableInterval5.setDurationAfterStart(1644572222800L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:10.409Z/2022-02-11T09:40:10.409Z" + "'", str16, "2022-02-11T09:40:10.409Z/2022-02-11T09:40:10.409Z");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572410410L + "'", long31 == 1644572410410L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(period61);
    }

    @Test
    public void test03643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03643");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTime dateTime71 = mutableInterval70.getEnd();
        java.lang.String str72 = mutableInterval70.toString();
        org.joda.time.Chronology chronology73 = mutableInterval70.getChronology();
        org.joda.time.DurationField durationField74 = chronology73.minutes();
        org.joda.time.DurationField durationField75 = chronology73.millis();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.yearOfEra();
        org.joda.time.DateTimeField dateTimeField77 = chronology73.weekyear();
        org.joda.time.DurationField durationField78 = chronology73.months();
        org.joda.time.DateTimeField dateTimeField79 = chronology73.minuteOfDay();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:10.425Z/2022-02-11T09:40:10.425Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:10.425Z/2022-02-11T09:40:10.425Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:10.425Z/2022-02-11T09:40:10.425Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572410425L + "'", long16 == 1644572410425L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572410425L + "'", long32 == 1644572410425L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str72, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
    }

    @Test
    public void test03644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03644");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        boolean boolean9 = mutableInterval5.isAfter(readableInstant8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        mutableInterval12.setStartMillis(1644572127942L);
        boolean boolean17 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        boolean boolean18 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.Period period26 = mutableInterval24.toPeriod();
        mutableInterval12.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period26);
        java.lang.Object obj28 = mutableInterval12.clone();
        org.joda.time.MutableInterval mutableInterval29 = mutableInterval12.toMutableInterval();
        org.joda.time.Period period30 = mutableInterval12.toPeriod();
        int int32 = period30.getValue(0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals(obj28.toString(), "2022-02-11T09:40:10.474Z/2022-02-11T09:40:10.474Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "2022-02-11T09:40:10.474Z/2022-02-11T09:40:10.474Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "2022-02-11T09:40:10.474Z/2022-02-11T09:40:10.474Z");
        org.junit.Assert.assertNotNull(mutableInterval29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test03645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03645");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readablePeriod9, readableInstant10);
        long long12 = mutableInterval11.toDurationMillis();
        boolean boolean13 = mutableInterval7.isAfter((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readablePeriod35, readableInstant36);
        long long38 = mutableInterval37.toDurationMillis();
        boolean boolean39 = mutableInterval33.isAfter((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        boolean boolean41 = mutableInterval37.contains(readableInstant40);
        boolean boolean42 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        boolean boolean57 = mutableInterval23.isBefore((org.joda.time.ReadableInterval) mutableInterval52);
        boolean boolean58 = mutableInterval7.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.Chronology chronology59 = mutableInterval7.getChronology();
        org.joda.time.DateTimeField dateTimeField60 = chronology59.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField61 = chronology59.hourOfHalfday();
        org.joda.time.DurationField durationField62 = chronology59.seconds();
        org.joda.time.DurationField durationField63 = chronology59.weeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(1644572327598L, 1644572260637L, chronology59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(chronology59);
        org.junit.Assert.assertNotNull(dateTimeField60);
        org.junit.Assert.assertNotNull(dateTimeField61);
        org.junit.Assert.assertNotNull(durationField62);
        org.junit.Assert.assertNotNull(durationField63);
    }

    @Test
    public void test03646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03646");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        long long8 = mutableInterval2.getStartMillis();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        long long16 = mutableInterval15.getStartMillis();
        org.joda.time.Period period17 = mutableInterval15.toPeriod();
        java.lang.String str18 = mutableInterval15.toString();
        boolean boolean19 = mutableInterval15.isAfterNow();
        boolean boolean20 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean28 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.Period period29 = mutableInterval26.toPeriod();
        boolean boolean30 = mutableInterval26.isAfterNow();
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        mutableInterval26.setPeriodAfterStart(readablePeriod31);
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(1644572163734L, 1644572173517L);
        org.joda.time.MutableInterval mutableInterval36 = mutableInterval35.copy();
        mutableInterval26.setInterval((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.DateTime dateTime38 = mutableInterval26.getStart();
        org.joda.time.Chronology chronology39 = dateTime38.getChronology();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572410563L + "'", long5 == 1644572410563L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572410563L + "'", long8 == 1644572410563L);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572410563L + "'", long16 == 1644572410563L);
        org.junit.Assert.assertNotNull(period17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2022-02-11T09:40:10.563Z/2022-02-11T09:40:10.563Z" + "'", str18, "2022-02-11T09:40:10.563Z/2022-02-11T09:40:10.563Z");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mutableInterval36);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(chronology39);
    }

    @Test
    public void test03647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03647");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.halfdayOfDay();
        org.joda.time.DurationField durationField12 = chronology8.centuries();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.weekyear();
        org.joda.time.DateTimeField dateTimeField14 = chronology8.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField15 = chronology8.secondOfMinute();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(dateTimeField14);
        org.junit.Assert.assertNotNull(dateTimeField15);
    }

    @Test
    public void test03648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03648");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:08.454Z/2022-02-11T09:36:08.454Z");
        org.junit.Assert.assertNotNull(mutableInterval1);
    }

    @Test
    public void test03649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03649");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        mutableInterval2.setEndMillis(1644572128327L);
        mutableInterval2.setInterval(1644572133323L, 1644572145990L);
        org.joda.time.Duration duration80 = mutableInterval2.toDuration();
        boolean boolean81 = mutableInterval2.isBeforeNow();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572410636L + "'", long22 == 1644572410636L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572410636L + "'", long38 == 1644572410636L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test03650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03650");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekyearOfCentury();
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        long long75 = chronology66.add(readablePeriod72, 1644572135819L, (int) (short) 1);
        org.joda.time.DateTimeField dateTimeField76 = chronology66.dayOfYear();
        // The following exception was thrown during execution in test generation
        try {
            long long81 = chronology66.getDateTimeMillis(0, (int) (short) 100, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for millisOfDay must be in the range [0,86399999]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:10.656Z/2022-02-11T09:40:10.656Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:10.656Z/2022-02-11T09:40:10.656Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:10.656Z/2022-02-11T09:40:10.656Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572410656L + "'", long14 == 1644572410656L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572410656L + "'", long30 == 1644572410656L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572135819L + "'", long75 == 1644572135819L);
        org.junit.Assert.assertNotNull(dateTimeField76);
    }

    @Test
    public void test03651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03651");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        boolean boolean25 = period21.equals((java.lang.Object) readableInstant23);
        mutableInterval5.setPeriodAfterStart((org.joda.time.ReadablePeriod) period21);
        mutableInterval5.setStartMillis(1644572133843L);
        long long29 = mutableInterval5.getStartMillis();
        boolean boolean30 = mutableInterval5.isAfterNow();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        mutableInterval35.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval43 = mutableInterval35.copy();
        boolean boolean45 = mutableInterval35.contains(1644572125519L);
        org.joda.time.Chronology chronology46 = mutableInterval35.getChronology();
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(0L, 1644572131452L, chronology46);
        org.joda.time.DurationField durationField48 = chronology46.days();
        org.joda.time.DateTimeField dateTimeField49 = chronology46.dayOfWeek();
        mutableInterval5.setChronology(chronology46);
        org.joda.time.DateTimeField dateTimeField51 = chronology46.minuteOfDay();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:10.747Z/2022-02-11T09:40:10.747Z" + "'", str16, "2022-02-11T09:40:10.747Z/2022-02-11T09:40:10.747Z");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572133843L + "'", long29 == 1644572133843L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(mutableInterval43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(chronology46);
        org.junit.Assert.assertNotNull(durationField48);
        org.junit.Assert.assertNotNull(dateTimeField49);
        org.junit.Assert.assertNotNull(dateTimeField51);
    }

    @Test
    public void test03652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03652");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        boolean boolean25 = mutableInterval21.contains(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        long long36 = mutableInterval35.toDurationMillis();
        boolean boolean37 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.contains(readableInstant38);
        boolean boolean40 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        boolean boolean55 = mutableInterval21.isBefore((org.joda.time.ReadableInterval) mutableInterval50);
        boolean boolean56 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.Chronology chronology57 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField58 = chronology57.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField59 = chronology57.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField60 = chronology57.secondOfMinute();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertNotNull(dateTimeField58);
        org.junit.Assert.assertNotNull(dateTimeField59);
        org.junit.Assert.assertNotNull(dateTimeField60);
    }

    @Test
    public void test03653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03653");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Interval interval75 = mutableInterval2.toInterval();
        org.joda.time.Period period76 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.ReadableDuration readableDuration78 = null;
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(readableInstant77, readableDuration78);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.ReadableDuration readableDuration81 = null;
        org.joda.time.MutableInterval mutableInterval82 = new org.joda.time.MutableInterval(readableInstant80, readableDuration81);
        boolean boolean83 = mutableInterval79.overlaps((org.joda.time.ReadableInterval) mutableInterval82);
        org.joda.time.ReadableInstant readableInstant84 = null;
        boolean boolean85 = mutableInterval82.contains(readableInstant84);
        boolean boolean86 = mutableInterval2.equals((java.lang.Object) mutableInterval82);
        org.joda.time.Chronology chronology87 = mutableInterval82.getChronology();
        org.joda.time.ReadableInstant readableInstant88 = null;
        boolean boolean89 = mutableInterval82.isAfter(readableInstant88);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572410803L + "'", long22 == 1644572410803L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572410803L + "'", long38 == 1644572410803L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test03654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03654");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        mutableInterval2.setStartMillis(1644572139833L);
        org.joda.time.DateTime dateTime9 = mutableInterval2.getStart();
        org.joda.time.ReadablePeriod readablePeriod10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readablePeriod10, readableInstant11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = mutableInterval15.toPeriod(periodType16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period17, readableInstant18);
        boolean boolean20 = mutableInterval12.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        long long35 = mutableInterval30.getEndMillis();
        java.lang.String str36 = mutableInterval30.toString();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        boolean boolean43 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        mutableInterval46.setDurationAfterStart(0L);
        boolean boolean50 = mutableInterval46.equals((java.lang.Object) (-1));
        long long51 = mutableInterval46.getEndMillis();
        org.joda.time.DateTime dateTime52 = mutableInterval46.getEnd();
        boolean boolean53 = mutableInterval39.isAfter((org.joda.time.ReadableInstant) dateTime52);
// flaky:         mutableInterval30.setStart((org.joda.time.ReadableInstant) dateTime52);
        boolean boolean55 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        boolean boolean56 = mutableInterval19.isAfterNow();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        boolean boolean72 = mutableInterval62.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.Period period78 = mutableInterval76.toPeriod(periodType77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period78, readableInstant79);
        long long81 = mutableInterval80.getStartMillis();
        org.joda.time.Period period82 = mutableInterval80.toPeriod();
        java.lang.String str83 = mutableInterval80.toString();
        boolean boolean84 = mutableInterval80.isAfterNow();
        boolean boolean85 = mutableInterval71.isBefore((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.ReadableDuration readableDuration87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval(readableInstant86, readableDuration87);
        mutableInterval88.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant91 = null;
        boolean boolean92 = mutableInterval88.contains(readableInstant91);
        long long93 = mutableInterval88.getEndMillis();
        org.joda.time.DateTime dateTime94 = mutableInterval88.getStart();
        boolean boolean95 = mutableInterval71.contains((org.joda.time.ReadableInstant) dateTime94);
        boolean boolean96 = mutableInterval19.isBefore((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.DateTime dateTime97 = mutableInterval71.getEnd();
        boolean boolean98 = dateTime9.isBefore((org.joda.time.ReadableInstant) dateTime97);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dateTime9);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572410980L + "'", long35 == 1644572410980L);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "2022-02-11T09:40:10.980Z/2022-02-11T09:40:10.980Z" + "'", str36, "2022-02-11T09:40:10.980Z/2022-02-11T09:40:10.980Z");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572410980L + "'", long51 == 1644572410980L);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(period78);
// flaky:         org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1644572410980L + "'", long81 == 1644572410980L);
        org.junit.Assert.assertNotNull(period82);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "2022-02-11T09:40:10.980Z/2022-02-11T09:40:10.980Z" + "'", str83, "2022-02-11T09:40:10.980Z/2022-02-11T09:40:10.980Z");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long93 + "' != '" + 1644572410980L + "'", long93 == 1644572410980L);
        org.junit.Assert.assertNotNull(dateTime94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(dateTime97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test03655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03655");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField68 = chronology67.monthOfYear();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.secondOfMinute();
        org.joda.time.ReadablePartial readablePartial70 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long72 = chronology67.set(readablePartial70, 1644572149587L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:11.039Z/2022-02-11T09:40:11.039Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:11.039Z/2022-02-11T09:40:11.039Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:11.039Z/2022-02-11T09:40:11.039Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572411039L + "'", long14 == 1644572411039L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572411039L + "'", long30 == 1644572411039L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
    }

    @Test
    public void test03656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03656");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfWeek();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(1644572136401L, 1644572141513L, chronology68);
        org.joda.time.DateTimeField dateTimeField73 = chronology68.clockhourOfHalfday();
        org.joda.time.DurationField durationField74 = chronology68.millis();
        org.joda.time.DateTimeField dateTimeField75 = chronology68.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField76 = chronology68.clockhourOfDay();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:11.060Z/2022-02-11T09:40:11.060Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:11.060Z/2022-02-11T09:40:11.060Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:11.060Z/2022-02-11T09:40:11.060Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572411060L + "'", long16 == 1644572411060L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572411060L + "'", long32 == 1644572411060L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
    }

    @Test
    public void test03657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03657");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Duration duration8 = mutableInterval5.toDuration();
        long long9 = mutableInterval5.getEndMillis();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readablePeriod17, readableInstant18);
        long long20 = mutableInterval19.toDurationMillis();
        boolean boolean21 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        boolean boolean26 = mutableInterval24.isBeforeNow();
        org.joda.time.Interval interval27 = mutableInterval24.toInterval();
        org.joda.time.MutableInterval mutableInterval28 = mutableInterval24.toMutableInterval();
        org.joda.time.Duration duration29 = mutableInterval28.toDuration();
        java.lang.String str30 = duration29.toString();
        mutableInterval5.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadablePeriod readablePeriod32 = null;
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readablePeriod32, readableInstant33);
        long long35 = mutableInterval34.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = mutableInterval38.toPeriod(periodType39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.Period period48 = mutableInterval46.toPeriod();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.PeriodType periodType52 = null;
        org.joda.time.Period period53 = mutableInterval51.toPeriod(periodType52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        boolean boolean55 = period53.isSupported(durationFieldType54);
        boolean boolean57 = period53.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType59 = period53.getFieldType(0);
        int int60 = period48.get(durationFieldType59);
        int int61 = period40.get(durationFieldType59);
        mutableInterval34.setPeriodAfterStart((org.joda.time.ReadablePeriod) period40);
        org.joda.time.Interval interval63 = mutableInterval34.toInterval();
        org.joda.time.Chronology chronology64 = mutableInterval34.getChronology();
        org.joda.time.DurationField durationField65 = chronology64.eras();
        org.joda.time.DateTimeField dateTimeField66 = chronology64.clockhourOfDay();
        long long70 = chronology64.add(1644572167344L, 1644572143211L, 100);
        org.joda.time.DateTimeField dateTimeField71 = chronology64.dayOfYear();
        org.joda.time.DurationField durationField72 = chronology64.eras();
        org.joda.time.DateTimeField dateTimeField73 = chronology64.weekyear();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval((java.lang.Object) duration29, chronology64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: org.joda.time.Duration");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572411108L + "'", long9 == 1644572411108L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(mutableInterval28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT0S" + "'", str30, "PT0S");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(chronology64);
        org.junit.Assert.assertNotNull(durationField65);
        org.junit.Assert.assertNotNull(dateTimeField66);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 166101786488444L + "'", long70 == 166101786488444L);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
    }

    @Test
    public void test03658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03658");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        java.lang.String str3 = mutableInterval2.toString();
        org.joda.time.MutableInterval mutableInterval4 = mutableInterval2.toMutableInterval();
        org.joda.time.Interval interval5 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        long long11 = mutableInterval8.getEndMillis();
        boolean boolean13 = mutableInterval8.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval14 = mutableInterval8.copy();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        boolean boolean24 = mutableInterval20.isAfter(readableInstant23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        mutableInterval27.setStartMillis(1644572127942L);
        boolean boolean32 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        boolean boolean33 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.Period period41 = mutableInterval39.toPeriod();
        mutableInterval27.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period41);
        boolean boolean43 = mutableInterval8.isAfter((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.DateTime dateTime44 = mutableInterval27.getEnd();
        boolean boolean45 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.DateTime dateTime46 = mutableInterval27.getEnd();
        org.joda.time.MutableInterval mutableInterval47 = mutableInterval27.copy();
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "2022-02-11T09:40:11.174Z/2022-02-11T09:40:11.174Z" + "'", str3, "2022-02-11T09:40:11.174Z/2022-02-11T09:40:11.174Z");
        org.junit.Assert.assertNotNull(mutableInterval4);
        org.junit.Assert.assertNotNull(interval5);
        org.junit.Assert.assertNotNull(period10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1644572411174L + "'", long11 == 1644572411174L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mutableInterval14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(mutableInterval47);
    }

    @Test
    public void test03659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03659");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:38.562Z/2022-02-11T09:35:38.562Z");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.minuteOfDay();
        boolean boolean71 = mutableInterval1.equals((java.lang.Object) chronology68);
        boolean boolean73 = mutableInterval1.equals((java.lang.Object) 1644572376797L);
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:11.219Z/2022-02-11T09:40:11.219Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:11.219Z/2022-02-11T09:40:11.219Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:11.219Z/2022-02-11T09:40:11.219Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572411219L + "'", long16 == 1644572411219L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572411219L + "'", long32 == 1644572411219L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test03660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03660");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.halfdayOfDay();
        org.joda.time.DurationField durationField12 = chronology8.centuries();
        org.joda.time.DurationField durationField13 = chronology8.weekyears();
        org.joda.time.ReadablePartial readablePartial14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = chronology8.set(readablePartial14, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(durationField13);
    }

    @Test
    public void test03661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03661");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.halfdayOfDay();
        org.joda.time.DurationField durationField72 = chronology68.halfdays();
        org.joda.time.DurationField durationField73 = chronology68.months();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.dayOfMonth();
        org.joda.time.DurationField durationField75 = chronology68.years();
        org.joda.time.DurationField durationField76 = chronology68.months();
        org.joda.time.DateTimeField dateTimeField77 = chronology68.weekOfWeekyear();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:11.272Z/2022-02-11T09:40:11.272Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:11.272Z/2022-02-11T09:40:11.272Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:11.272Z/2022-02-11T09:40:11.272Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572411272L + "'", long16 == 1644572411272L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572411272L + "'", long32 == 1644572411272L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
    }

    @Test
    public void test03662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03662");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        mutableInterval2.setEndMillis(1644572128327L);
        org.joda.time.Period period77 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        mutableInterval80.setDurationAfterStart(0L);
        boolean boolean84 = mutableInterval80.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.ReadableDuration readableDuration86 = null;
        org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval(readableInstant85, readableDuration86);
        mutableInterval87.setDurationAfterStart(0L);
        boolean boolean91 = mutableInterval87.equals((java.lang.Object) (-1));
        mutableInterval87.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean95 = mutableInterval80.contains((org.joda.time.ReadableInterval) mutableInterval87);
        org.joda.time.Interval interval96 = mutableInterval87.toInterval();
        boolean boolean97 = mutableInterval2.isBefore((org.joda.time.ReadableInterval) interval96);
        org.joda.time.Chronology chronology98 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField99 = chronology98.weekyearOfCentury();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572411299L + "'", long22 == 1644572411299L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572411299L + "'", long38 == 1644572411299L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(interval96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(chronology98);
        org.junit.Assert.assertNotNull(dateTimeField99);
    }

    @Test
    public void test03663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03663");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.minutes();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.weekOfWeekyear();
        org.joda.time.DurationField durationField12 = chronology8.weeks();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.yearOfCentury();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
    }

    @Test
    public void test03664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03664");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        long long11 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        boolean boolean18 = mutableInterval14.equals((java.lang.Object) (-1));
        long long19 = mutableInterval14.getEndMillis();
        org.joda.time.DateTime dateTime20 = mutableInterval14.getEnd();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        boolean boolean37 = mutableInterval23.isAfter((org.joda.time.ReadableInstant) dateTime36);
        boolean boolean38 = dateTime20.isAfter((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readablePeriod46, readableInstant47);
        long long49 = mutableInterval48.toDurationMillis();
        boolean boolean50 = mutableInterval44.isAfter((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        boolean boolean52 = mutableInterval48.contains(readableInstant51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        boolean boolean59 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadablePeriod readablePeriod60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readablePeriod60, readableInstant61);
        long long63 = mutableInterval62.toDurationMillis();
        boolean boolean64 = mutableInterval58.isAfter((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        boolean boolean66 = mutableInterval62.contains(readableInstant65);
        boolean boolean67 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.Duration duration68 = mutableInterval62.toDuration();
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = mutableInterval2.equals((java.lang.Object) dateTime36);
        boolean boolean72 = mutableInterval2.isAfter(1644572165713L);
        org.joda.time.Duration duration73 = mutableInterval2.toDuration();
        boolean boolean74 = mutableInterval2.containsNow();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1644572411360L + "'", long19 == 1644572411360L);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572411360L + "'", long35 == 1644572411360L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test03665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03665");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.Period period14 = mutableInterval12.toPeriod();
        org.joda.time.Duration duration15 = mutableInterval12.toDuration();
        mutableInterval2.setDurationAfterStart((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Chronology chronology17 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField18 = chronology17.yearOfCentury();
        org.joda.time.DurationField durationField19 = chronology17.millis();
        org.joda.time.DateTimeField dateTimeField20 = chronology17.era();
        org.joda.time.DateTimeField dateTimeField21 = chronology17.monthOfYear();
        org.joda.time.DurationField durationField22 = chronology17.centuries();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertNotNull(dateTimeField18);
        org.junit.Assert.assertNotNull(durationField19);
        org.junit.Assert.assertNotNull(dateTimeField20);
        org.junit.Assert.assertNotNull(dateTimeField21);
        org.junit.Assert.assertNotNull(durationField22);
    }

    @Test
    public void test03666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03666");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        java.lang.Object obj9 = mutableInterval2.clone();
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval();
        org.joda.time.DateTime dateTime11 = mutableInterval10.getEnd();
        boolean boolean12 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.Period period13 = mutableInterval2.toPeriod();
        org.joda.time.Interval interval14 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        boolean boolean21 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        long long25 = mutableInterval24.toDurationMillis();
        boolean boolean26 = mutableInterval20.isAfter((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        boolean boolean28 = mutableInterval24.contains(readableInstant27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadablePeriod readablePeriod36 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readablePeriod36, readableInstant37);
        long long39 = mutableInterval38.toDurationMillis();
        boolean boolean40 = mutableInterval34.isAfter((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        boolean boolean42 = mutableInterval38.contains(readableInstant41);
        boolean boolean43 = mutableInterval24.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.Duration duration44 = mutableInterval38.toDuration();
        boolean boolean46 = duration44.equals((java.lang.Object) 'a');
        long long47 = duration44.getMillis();
        long long48 = duration44.getMillis();
        org.joda.time.Duration duration49 = duration44.toDuration();
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadablePeriod readablePeriod51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readablePeriod51, readableInstant52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.PeriodType periodType57 = null;
        org.joda.time.Period period58 = mutableInterval56.toPeriod(periodType57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period58, readableInstant59);
        boolean boolean61 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        boolean boolean68 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadablePeriod readablePeriod69 = null;
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readablePeriod69, readableInstant70);
        long long72 = mutableInterval71.toDurationMillis();
        boolean boolean73 = mutableInterval67.isAfter((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        boolean boolean75 = mutableInterval71.contains(readableInstant74);
        long long76 = mutableInterval71.getEndMillis();
        java.lang.String str77 = mutableInterval71.toString();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.ReadableDuration readableDuration82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readableInstant81, readableDuration82);
        boolean boolean84 = mutableInterval80.overlaps((org.joda.time.ReadableInterval) mutableInterval83);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.ReadableDuration readableDuration86 = null;
        org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval(readableInstant85, readableDuration86);
        mutableInterval87.setDurationAfterStart(0L);
        boolean boolean91 = mutableInterval87.equals((java.lang.Object) (-1));
        long long92 = mutableInterval87.getEndMillis();
        org.joda.time.DateTime dateTime93 = mutableInterval87.getEnd();
        boolean boolean94 = mutableInterval80.isAfter((org.joda.time.ReadableInstant) dateTime93);
// flaky:         mutableInterval71.setStart((org.joda.time.ReadableInstant) dateTime93);
        boolean boolean96 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.Duration duration97 = mutableInterval71.toDuration();
        java.lang.String str98 = mutableInterval71.toString();
        mutableInterval2.setInterval((org.joda.time.ReadableInterval) mutableInterval71);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572411405L + "'", long7 == 1644572411405L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:11.405Z/2022-02-11T09:40:11.405Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:11.405Z/2022-02-11T09:40:11.405Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:11.405Z/2022-02-11T09:40:11.405Z");
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1644572411406L + "'", long76 == 1644572411406L);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "2022-02-11T09:40:11.406Z/2022-02-11T09:40:11.406Z" + "'", str77, "2022-02-11T09:40:11.406Z/2022-02-11T09:40:11.406Z");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1644572411406L + "'", long92 == 1644572411406L);
        org.junit.Assert.assertNotNull(dateTime93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(duration97);
// flaky:         org.junit.Assert.assertEquals("'" + str98 + "' != '" + "2022-02-11T09:40:11.406Z/2022-02-11T09:40:11.406Z" + "'", str98, "2022-02-11T09:40:11.406Z/2022-02-11T09:40:11.406Z");
    }

    @Test
    public void test03667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03667");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.DateTime dateTime31 = mutableInterval2.getEnd();
        boolean boolean32 = mutableInterval2.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readablePeriod40, readableInstant41);
        long long43 = mutableInterval42.toDurationMillis();
        boolean boolean44 = mutableInterval38.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        java.lang.String str49 = mutableInterval38.toString();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.Period period54 = mutableInterval52.toPeriod(periodType53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        boolean boolean58 = period54.equals((java.lang.Object) readableInstant56);
        mutableInterval38.setPeriodAfterStart((org.joda.time.ReadablePeriod) period54);
        mutableInterval2.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period54);
        org.joda.time.MutableInterval mutableInterval61 = mutableInterval2.toMutableInterval();
        boolean boolean63 = mutableInterval61.isAfter(1644572286544L);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = mutableInterval66.toPeriod(periodType67);
        long long69 = mutableInterval66.getEndMillis();
        boolean boolean71 = mutableInterval66.equals((java.lang.Object) ' ');
        long long72 = mutableInterval66.getStartMillis();
        java.lang.Object obj73 = mutableInterval66.clone();
        mutableInterval66.setDurationAfterStart(1644572156164L);
        mutableInterval61.setInterval((org.joda.time.ReadableInterval) mutableInterval66);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "2022-02-11T09:40:11.434Z/2022-02-11T09:40:11.434Z" + "'", str49, "2022-02-11T09:40:11.434Z/2022-02-11T09:40:11.434Z");
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(mutableInterval61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(period68);
// flaky:         org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1644572411434L + "'", long69 == 1644572411434L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1644572411434L + "'", long72 == 1644572411434L);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals(obj73.toString(), "2022-02-11T09:40:11.434Z/2022-02-11T09:40:11.434Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "2022-02-11T09:40:11.434Z/2022-02-11T09:40:11.434Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "2022-02-11T09:40:11.434Z/2022-02-11T09:40:11.434Z");
    }

    @Test
    public void test03668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03668");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField70 = chronology66.weeks();
        org.joda.time.Chronology chronology71 = chronology66.withUTC();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.weekyearOfCentury();
        long long76 = chronology66.add(1644572135020L, 1644572127042L, (int) '#');
        org.joda.time.DateTimeField dateTimeField77 = chronology66.dayOfYear();
        org.joda.time.DurationField durationField78 = chronology66.eras();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:11.541Z/2022-02-11T09:40:11.541Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:11.541Z/2022-02-11T09:40:11.541Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:11.541Z/2022-02-11T09:40:11.541Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572411542L + "'", long14 == 1644572411542L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572411542L + "'", long30 == 1644572411542L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 59204596581490L + "'", long76 == 59204596581490L);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(durationField78);
    }

    @Test
    public void test03669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03669");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.contains(readableInstant5);
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        long long16 = mutableInterval15.getStartMillis();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        boolean boolean24 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = mutableInterval27.toPeriod(periodType28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period29, readableInstant30);
        long long32 = mutableInterval31.getStartMillis();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        boolean boolean40 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        boolean boolean41 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        boolean boolean42 = mutableInterval15.containsNow();
        boolean boolean43 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        long long44 = mutableInterval15.getStartMillis();
        boolean boolean46 = mutableInterval15.equals((java.lang.Object) 1644572198711L);
        mutableInterval15.setDurationAfterStart(1644572284930L);
        org.joda.time.DateTime dateTime49 = mutableInterval15.getStart();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        mutableInterval55.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant58 = null;
        boolean boolean59 = mutableInterval55.isAfter(readableInstant58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        mutableInterval62.setDurationAfterStart(0L);
        mutableInterval62.setStartMillis(1644572127942L);
        boolean boolean67 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        boolean boolean68 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        boolean boolean75 = mutableInterval71.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Period period76 = mutableInterval74.toPeriod();
        mutableInterval62.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period76);
        java.lang.Object obj78 = mutableInterval62.clone();
        org.joda.time.MutableInterval mutableInterval79 = mutableInterval62.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval80 = mutableInterval79.toMutableInterval();
        org.joda.time.DateTime dateTime81 = mutableInterval79.getStart();
        mutableInterval15.setStart((org.joda.time.ReadableInstant) dateTime81);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval15.setEndMillis(1644572254665L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572411609L + "'", long7 == 1644572411609L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572411609L + "'", long16 == 1644572411609L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(period29);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572411609L + "'", long32 == 1644572411609L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572411609L + "'", long44 == 1644572411609L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals(obj78.toString(), "2022-02-11T09:40:11.609Z/2022-02-11T09:40:11.609Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "2022-02-11T09:40:11.609Z/2022-02-11T09:40:11.609Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "2022-02-11T09:40:11.609Z/2022-02-11T09:40:11.609Z");
        org.junit.Assert.assertNotNull(mutableInterval79);
        org.junit.Assert.assertNotNull(mutableInterval80);
        org.junit.Assert.assertNotNull(dateTime81);
    }

    @Test
    public void test03670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03670");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField70 = chronology66.weeks();
        org.joda.time.Chronology chronology71 = chronology66.withUTC();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.weekyearOfCentury();
        long long76 = chronology66.add(1644572135020L, 1644572127042L, (int) '#');
        org.joda.time.DateTimeZone dateTimeZone77 = chronology66.getZone();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:11.731Z/2022-02-11T09:40:11.731Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:11.731Z/2022-02-11T09:40:11.731Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:11.731Z/2022-02-11T09:40:11.731Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572411731L + "'", long14 == 1644572411731L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572411731L + "'", long30 == 1644572411731L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 59204596581490L + "'", long76 == 59204596581490L);
        org.junit.Assert.assertNotNull(dateTimeZone77);
    }

    @Test
    public void test03671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03671");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        mutableInterval9.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean17 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval28 = mutableInterval20.copy();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        boolean boolean37 = mutableInterval34.contains(readableInstant36);
        boolean boolean38 = mutableInterval28.contains((org.joda.time.ReadableInterval) mutableInterval34);
        boolean boolean39 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = mutableInterval34.toPeriod(periodType40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.Period period49 = mutableInterval47.toPeriod();
        org.joda.time.Duration duration50 = mutableInterval47.toDuration();
        long long51 = duration50.getMillis();
        java.lang.String str52 = duration50.toString();
        mutableInterval34.setDurationAfterStart((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.PeriodType periodType57 = null;
        org.joda.time.Period period58 = mutableInterval56.toPeriod(periodType57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period58, readableInstant59);
        long long61 = mutableInterval60.getStartMillis();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        mutableInterval64.setDurationAfterStart(0L);
        boolean boolean68 = mutableInterval64.equals((java.lang.Object) (-1));
        boolean boolean69 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        boolean boolean76 = mutableInterval72.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        org.joda.time.Period period77 = mutableInterval75.toPeriod();
        org.joda.time.Duration duration78 = mutableInterval75.toDuration();
        mutableInterval64.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration78);
        java.lang.Object obj80 = null;
        boolean boolean81 = duration78.equals(obj80);
        int int82 = duration50.compareTo((org.joda.time.ReadableDuration) duration78);
        java.lang.String str83 = duration50.toString();
        org.joda.time.Period period84 = duration50.toPeriod();
        long long85 = duration50.getMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(mutableInterval28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0S" + "'", str52, "PT0S");
        org.junit.Assert.assertNotNull(period58);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572411824L + "'", long61 == 1644572411824L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT0S" + "'", str83, "PT0S");
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    }

    @Test
    public void test03672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03672");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone68 = chronology66.getZone();
        org.joda.time.DurationField durationField69 = chronology66.hours();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.clockhourOfHalfday();
        org.joda.time.DurationField durationField71 = chronology66.weeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:11.848Z/2022-02-11T09:40:11.848Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:11.848Z/2022-02-11T09:40:11.848Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:11.848Z/2022-02-11T09:40:11.848Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572411848L + "'", long14 == 1644572411848L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572411848L + "'", long30 == 1644572411848L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeZone68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
    }

    @Test
    public void test03673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03673");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        mutableInterval2.setEndMillis((long) (byte) 0);
        boolean boolean16 = mutableInterval2.contains(1644572133267L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        int int26 = period21.size();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.Period period34 = mutableInterval32.toPeriod();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = mutableInterval37.toPeriod(periodType38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = period39.isSupported(durationFieldType40);
        boolean boolean43 = period39.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType45 = period39.getFieldType(0);
        int int46 = period34.get(durationFieldType45);
        int int47 = period21.get(durationFieldType45);
        org.joda.time.MutablePeriod mutablePeriod48 = period21.toMutablePeriod();
        org.joda.time.Period period49 = period21.toPeriod();
        mutableInterval2.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        boolean boolean66 = mutableInterval56.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.PeriodType periodType71 = null;
        org.joda.time.Period period72 = mutableInterval70.toPeriod(periodType71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period72, readableInstant73);
        long long75 = mutableInterval74.getStartMillis();
        org.joda.time.Period period76 = mutableInterval74.toPeriod();
        java.lang.String str77 = mutableInterval74.toString();
        boolean boolean78 = mutableInterval74.isAfterNow();
        boolean boolean79 = mutableInterval65.isBefore((org.joda.time.ReadableInterval) mutableInterval74);
        boolean boolean80 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        boolean boolean82 = mutableInterval2.isAfter(1644572178004L);
        org.joda.time.Chronology chronology83 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField84 = chronology83.clockhourOfDay();
        // The following exception was thrown during execution in test generation
        try {
            long long90 = chronology83.getDateTimeMillis(1644572157782L, (int) 'a', (int) (short) -1, (int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 97 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period72);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572411896L + "'", long75 == 1644572411896L);
        org.junit.Assert.assertNotNull(period76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "2022-02-11T09:40:11.896Z/2022-02-11T09:40:11.896Z" + "'", str77, "2022-02-11T09:40:11.896Z/2022-02-11T09:40:11.896Z");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(dateTimeField84);
    }

    @Test
    public void test03674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03674");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.yearOfEra();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = mutableInterval15.toPeriod(periodType16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = period17.isSupported(durationFieldType18);
        boolean boolean21 = period17.equals((java.lang.Object) "hi!");
        int int22 = period17.size();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.Period period30 = mutableInterval28.toPeriod();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = mutableInterval33.toPeriod(periodType34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = period35.isSupported(durationFieldType36);
        boolean boolean39 = period35.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType41 = period35.getFieldType(0);
        int int42 = period30.get(durationFieldType41);
        int int43 = period17.get(durationFieldType41);
        org.joda.time.MutablePeriod mutablePeriod44 = period17.toMutablePeriod();
        int int46 = mutablePeriod44.getValue((int) (byte) 1);
        int[] intArray49 = chronology8.get((org.joda.time.ReadablePeriod) mutablePeriod44, 1644572155645L, 1644572135889L);
        org.joda.time.MutablePeriod mutablePeriod50 = mutablePeriod44.toMutablePeriod();
        java.lang.String str51 = mutablePeriod44.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, 0, 0, -19, -756]");
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT0S" + "'", str51, "PT0S");
    }

    @Test
    public void test03675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03675");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        java.lang.Object obj12 = mutableInterval9.clone();
        org.joda.time.DateTime dateTime13 = mutableInterval9.getStart();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getEnd();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        boolean boolean39 = mutableInterval25.isAfter((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean40 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        boolean boolean69 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.Duration duration70 = mutableInterval64.toDuration();
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = mutableInterval9.contains((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean73 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.Period period78 = mutableInterval76.toPeriod(periodType77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period78, readableInstant79);
        boolean boolean81 = dateTime38.equals((java.lang.Object) mutableInterval80);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        mutableInterval84.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant87 = null;
        boolean boolean88 = mutableInterval84.contains(readableInstant87);
        long long89 = mutableInterval84.getEndMillis();
        org.joda.time.DateTime dateTime90 = mutableInterval84.getStart();
        mutableInterval80.setEnd((org.joda.time.ReadableInstant) dateTime90);
        mutableInterval80.setStartMillis(1644572148382L);
        long long94 = mutableInterval80.getStartMillis();
        org.joda.time.Duration duration95 = mutableInterval80.toDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(obj12);
// flaky:         org.junit.Assert.assertEquals(obj12.toString(), "2022-02-11T09:40:11.961Z/2022-02-11T09:40:11.961Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "2022-02-11T09:40:11.961Z/2022-02-11T09:40:11.961Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "2022-02-11T09:40:11.961Z/2022-02-11T09:40:11.961Z");
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572411961L + "'", long21 == 1644572411961L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572411961L + "'", long37 == 1644572411961L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long89 + "' != '" + 1644572411961L + "'", long89 == 1644572411961L);
        org.junit.Assert.assertNotNull(dateTime90);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572148382L + "'", long94 == 1644572148382L);
        org.junit.Assert.assertNotNull(duration95);
    }

    @Test
    public void test03676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03676");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        mutableInterval68.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.isAfter(readableInstant71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        mutableInterval75.setDurationAfterStart(0L);
        mutableInterval75.setStartMillis(1644572127942L);
        boolean boolean80 = mutableInterval68.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        java.lang.String str81 = mutableInterval68.toString();
        long long82 = mutableInterval68.getStartMillis();
        long long83 = mutableInterval68.getEndMillis();
        mutableInterval68.setStartMillis(1644572161385L);
        boolean boolean87 = mutableInterval68.isAfter(1644572157013L);
        org.joda.time.DateTime dateTime88 = mutableInterval68.getStart();
        org.joda.time.MutableInterval mutableInterval90 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:49.835Z/2022-02-11T09:36:49.835Z");
        org.joda.time.DateTime dateTime91 = mutableInterval90.getEnd();
        boolean boolean92 = dateTime88.isBefore((org.joda.time.ReadableInstant) dateTime91);
        boolean boolean93 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime88);
        org.joda.time.DateTimeFieldType dateTimeFieldType94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int95 = dateTime88.get(dateTimeFieldType94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:11.992Z/2022-02-11T09:40:11.992Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:11.992Z/2022-02-11T09:40:11.992Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:11.992Z/2022-02-11T09:40:11.992Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572411992L + "'", long14 == 1644572411992L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572411992L + "'", long30 == 1644572411992L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "2022-02-11T09:40:11.992Z/2022-02-11T09:40:11.992Z" + "'", str81, "2022-02-11T09:40:11.992Z/2022-02-11T09:40:11.992Z");
// flaky:         org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1644572411992L + "'", long82 == 1644572411992L);
// flaky:         org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1644572411992L + "'", long83 == 1644572411992L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertNotNull(mutableInterval90);
        org.junit.Assert.assertNotNull(dateTime91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test03677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03677");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        long long16 = mutableInterval10.toDurationMillis();
        org.joda.time.ReadableInterval readableInterval17 = null;
        boolean boolean18 = mutableInterval10.isBefore(readableInterval17);
        org.joda.time.MutableInterval mutableInterval19 = mutableInterval10.toMutableInterval();
        java.lang.Class<?> wildcardClass20 = mutableInterval10.getClass();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572412038L + "'", long7 == 1644572412038L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutableInterval19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test03678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03678");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.MutableInterval mutableInterval5 = mutableInterval2.toMutableInterval();
        org.joda.time.Chronology chronology6 = mutableInterval2.getChronology();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        java.lang.Object obj14 = mutableInterval11.clone();
        org.joda.time.DateTime dateTime15 = mutableInterval11.getStart();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        mutableInterval18.setDurationAfterStart(0L);
        boolean boolean22 = mutableInterval18.equals((java.lang.Object) (-1));
        long long23 = mutableInterval18.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval18.getEnd();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        mutableInterval34.setDurationAfterStart(0L);
        boolean boolean38 = mutableInterval34.equals((java.lang.Object) (-1));
        long long39 = mutableInterval34.getEndMillis();
        org.joda.time.DateTime dateTime40 = mutableInterval34.getEnd();
        boolean boolean41 = mutableInterval27.isAfter((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean42 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = mutableInterval11.contains((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Chronology chronology75 = dateTime40.getChronology();
        org.joda.time.DateTimeField dateTimeField76 = chronology75.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology75);
        mutableInterval77.setEndMillis(1644572130296L);
        org.joda.time.MutableInterval mutableInterval80 = mutableInterval77.toMutableInterval();
        org.joda.time.DateTime dateTime81 = mutableInterval77.getStart();
        java.lang.String str82 = mutableInterval77.toString();
        java.lang.String str83 = mutableInterval77.toString();
        org.joda.time.DateTime dateTime84 = mutableInterval77.getStart();
        boolean boolean85 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime84);
        java.lang.String str86 = dateTime84.toString();
        org.joda.time.Chronology chronology87 = dateTime84.getChronology();
        java.lang.String str88 = dateTime84.toString();
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertNotNull(chronology6);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals(obj14.toString(), "2022-02-11T09:40:12.049Z/2022-02-11T09:40:12.049Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "2022-02-11T09:40:12.049Z/2022-02-11T09:40:12.049Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "2022-02-11T09:40:12.049Z/2022-02-11T09:40:12.049Z");
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572412049L + "'", long23 == 1644572412049L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1644572412049L + "'", long39 == 1644572412049L);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(mutableInterval80);
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:30.296Z" + "'", str82, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:30.296Z");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:30.296Z" + "'", str83, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:30.296Z");
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "1970-01-01T00:00:00.100Z" + "'", str86, "1970-01-01T00:00:00.100Z");
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "1970-01-01T00:00:00.100Z" + "'", str88, "1970-01-01T00:00:00.100Z");
    }

    @Test
    public void test03679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03679");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.hourOfHalfday();
        org.joda.time.Chronology chronology73 = chronology66.withUTC();
        org.joda.time.DurationField durationField74 = chronology66.years();
        org.joda.time.DurationField durationField75 = chronology66.weeks();
        long long83 = chronology66.getDateTimeMillis(0, 1, 8, (int) (byte) 1, 8, (int) '4', (int) (byte) 0);
        org.joda.time.DateTimeField dateTimeField84 = chronology66.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField85 = chronology66.weekOfWeekyear();
        org.joda.time.DurationField durationField86 = chronology66.weekyears();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:12.110Z/2022-02-11T09:40:12.110Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:12.110Z/2022-02-11T09:40:12.110Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:12.110Z/2022-02-11T09:40:12.110Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572412110L + "'", long14 == 1644572412110L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572412110L + "'", long30 == 1644572412110L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-62166610268000L) + "'", long83 == (-62166610268000L));
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(durationField86);
    }

    @Test
    public void test03680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03680");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        boolean boolean15 = mutableInterval9.isAfter(1644572126418L);
        org.joda.time.MutableInterval mutableInterval16 = mutableInterval9.copy();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        java.lang.Object obj22 = mutableInterval19.clone();
        org.joda.time.DateTime dateTime23 = mutableInterval19.getStart();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        long long47 = mutableInterval42.getEndMillis();
        org.joda.time.DateTime dateTime48 = mutableInterval42.getEnd();
        boolean boolean49 = mutableInterval35.isAfter((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean50 = dateTime32.isAfter((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = mutableInterval19.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology83 = dateTime48.getChronology();
        org.joda.time.Chronology chronology84 = dateTime48.getChronology();
        org.joda.time.DurationField durationField85 = chronology84.millis();
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval9, chronology84);
        org.joda.time.DateTime dateTime87 = mutableInterval86.getEnd();
        org.joda.time.DateTime dateTime88 = mutableInterval86.getStart();
        org.joda.time.Chronology chronology89 = mutableInterval86.getChronology();
        org.joda.time.ReadablePartial readablePartial90 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long92 = chronology89.set(readablePartial90, 1644572365357L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutableInterval16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "2022-02-11T09:40:12.143Z/2022-02-11T09:40:12.143Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "2022-02-11T09:40:12.143Z/2022-02-11T09:40:12.143Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "2022-02-11T09:40:12.143Z/2022-02-11T09:40:12.143Z");
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572412143L + "'", long31 == 1644572412143L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572412143L + "'", long47 == 1644572412143L);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(durationField85);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertNotNull(chronology89);
    }

    @Test
    public void test03681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03681");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean28 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.Duration duration29 = mutableInterval14.toDuration();
        org.joda.time.Period period30 = duration29.toPeriod();
        org.joda.time.Duration duration31 = duration29.toDuration();
        boolean boolean33 = duration31.equals((java.lang.Object) 1644572148169L);
        org.joda.time.Period period34 = duration31.toPeriod();
        org.joda.time.Duration duration35 = duration31.toDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration35);
    }

    @Test
    public void test03682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03682");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        mutableInterval70.setEndMillis(1644572130296L);
        org.joda.time.MutableInterval mutableInterval73 = mutableInterval70.toMutableInterval();
        java.lang.String str74 = mutableInterval73.toString();
        org.joda.time.Duration duration75 = mutableInterval73.toDuration();
        org.joda.time.Period period76 = duration75.toPeriod();
        org.joda.time.PeriodType periodType77 = period76.getPeriodType();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:12.328Z/2022-02-11T09:40:12.328Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:12.328Z/2022-02-11T09:40:12.328Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:12.328Z/2022-02-11T09:40:12.328Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572412328L + "'", long16 == 1644572412328L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572412328L + "'", long32 == 1644572412328L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(mutableInterval73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:30.296Z" + "'", str74, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:30.296Z");
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType77);
    }

    @Test
    public void test03683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03683");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.halfdayOfDay();
        org.joda.time.DurationField durationField72 = chronology68.days();
        org.joda.time.DateTimeField dateTimeField73 = chronology68.halfdayOfDay();
        org.joda.time.Chronology chronology74 = chronology68.withUTC();
        // The following exception was thrown during execution in test generation
        try {
            long long80 = chronology74.getDateTimeMillis(1644572174020L, 8, 10, (int) 'a', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 97 for secondOfMinute must be in the range [0,59]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:12.379Z/2022-02-11T09:40:12.379Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:12.379Z/2022-02-11T09:40:12.379Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:12.379Z/2022-02-11T09:40:12.379Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572412379L + "'", long16 == 1644572412379L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572412379L + "'", long32 == 1644572412379L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(chronology74);
    }

    @Test
    public void test03684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03684");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        boolean boolean77 = mutableInterval73.overlaps((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.Period period78 = mutableInterval76.toPeriod();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        org.joda.time.PeriodType periodType82 = null;
        org.joda.time.Period period83 = mutableInterval81.toPeriod(periodType82);
        org.joda.time.DurationFieldType durationFieldType84 = null;
        boolean boolean85 = period83.isSupported(durationFieldType84);
        boolean boolean87 = period83.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType89 = period83.getFieldType(0);
        int int90 = period78.get(durationFieldType89);
        int[] intArray93 = chronology68.get((org.joda.time.ReadablePeriod) period78, 1644572127855L, (long) 1);
        org.joda.time.DateTimeField dateTimeField94 = chronology68.secondOfDay();
        java.lang.String str95 = chronology68.toString();
        org.joda.time.DateTimeField dateTimeField96 = chronology68.centuryOfEra();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:12.442Z/2022-02-11T09:40:12.442Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:12.442Z/2022-02-11T09:40:12.442Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:12.442Z/2022-02-11T09:40:12.442Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572412442L + "'", long16 == 1644572412442L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572412442L + "'", long32 == 1644572412442L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-52, -1, -1, -3, -9, -35, -27, -854]");
        org.junit.Assert.assertNotNull(dateTimeField94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str95, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(dateTimeField96);
    }

    @Test
    public void test03685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03685");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        long long11 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        boolean boolean18 = mutableInterval14.equals((java.lang.Object) (-1));
        long long19 = mutableInterval14.getEndMillis();
        org.joda.time.DateTime dateTime20 = mutableInterval14.getEnd();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        boolean boolean37 = mutableInterval23.isAfter((org.joda.time.ReadableInstant) dateTime36);
        boolean boolean38 = dateTime20.isAfter((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readablePeriod46, readableInstant47);
        long long49 = mutableInterval48.toDurationMillis();
        boolean boolean50 = mutableInterval44.isAfter((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        boolean boolean52 = mutableInterval48.contains(readableInstant51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        boolean boolean59 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadablePeriod readablePeriod60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readablePeriod60, readableInstant61);
        long long63 = mutableInterval62.toDurationMillis();
        boolean boolean64 = mutableInterval58.isAfter((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        boolean boolean66 = mutableInterval62.contains(readableInstant65);
        boolean boolean67 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.Duration duration68 = mutableInterval62.toDuration();
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = mutableInterval2.equals((java.lang.Object) dateTime36);
        boolean boolean71 = mutableInterval2.isBeforeNow();
        boolean boolean73 = mutableInterval2.isAfter(1644572133577L);
        org.joda.time.DateTime dateTime74 = mutableInterval2.getStart();
        boolean boolean75 = mutableInterval2.containsNow();
        org.joda.time.DateTime dateTime76 = mutableInterval2.getEnd();
        boolean boolean78 = mutableInterval2.contains(0L);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1644572412477L + "'", long19 == 1644572412477L);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572412477L + "'", long35 == 1644572412477L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test03686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03686");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.MutableInterval mutableInterval5 = mutableInterval2.toMutableInterval();
        mutableInterval5.setDurationAfterStart((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        boolean boolean14 = mutableInterval10.overlaps((org.joda.time.ReadableInterval) mutableInterval13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = mutableInterval17.toPeriod(periodType18);
        java.lang.Object obj20 = mutableInterval17.clone();
        org.joda.time.DateTime dateTime21 = mutableInterval17.getStart();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        mutableInterval24.setDurationAfterStart(0L);
        boolean boolean28 = mutableInterval24.equals((java.lang.Object) (-1));
        long long29 = mutableInterval24.getEndMillis();
        org.joda.time.DateTime dateTime30 = mutableInterval24.getEnd();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        boolean boolean44 = mutableInterval40.equals((java.lang.Object) (-1));
        long long45 = mutableInterval40.getEndMillis();
        org.joda.time.DateTime dateTime46 = mutableInterval40.getEnd();
        boolean boolean47 = mutableInterval33.isAfter((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean48 = dateTime30.isAfter((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        boolean boolean69 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readablePeriod70, readableInstant71);
        long long73 = mutableInterval72.toDurationMillis();
        boolean boolean74 = mutableInterval68.isAfter((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        boolean boolean76 = mutableInterval72.contains(readableInstant75);
        boolean boolean77 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.Duration duration78 = mutableInterval72.toDuration();
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = mutableInterval17.contains((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean81 = mutableInterval10.contains((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        org.joda.time.PeriodType periodType85 = null;
        org.joda.time.Period period86 = mutableInterval84.toPeriod(periodType85);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period86, readableInstant87);
        boolean boolean89 = dateTime46.equals((java.lang.Object) mutableInterval88);
        boolean boolean90 = mutableInterval5.isBefore((org.joda.time.ReadableInterval) mutableInterval88);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.ReadableDuration readableDuration92 = null;
        org.joda.time.MutableInterval mutableInterval93 = new org.joda.time.MutableInterval(readableInstant91, readableDuration92);
        org.joda.time.PeriodType periodType94 = null;
        org.joda.time.Period period95 = mutableInterval93.toPeriod(periodType94);
        org.joda.time.ReadableInstant readableInstant96 = null;
        org.joda.time.MutableInterval mutableInterval97 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period95, readableInstant96);
        mutableInterval5.setPeriodAfterStart((org.joda.time.ReadablePeriod) period95);
        org.joda.time.MutablePeriod mutablePeriod99 = period95.toMutablePeriod();
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "2022-02-11T09:40:12.522Z/2022-02-11T09:40:12.522Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "2022-02-11T09:40:12.522Z/2022-02-11T09:40:12.522Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "2022-02-11T09:40:12.522Z/2022-02-11T09:40:12.522Z");
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572412522L + "'", long29 == 1644572412522L);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1644572412522L + "'", long45 == 1644572412522L);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(mutablePeriod99);
    }

    @Test
    public void test03687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03687");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        mutableInterval70.setEndMillis(1644572130296L);
        org.joda.time.MutableInterval mutableInterval73 = mutableInterval70.toMutableInterval();
        org.joda.time.DateTime dateTime74 = mutableInterval70.getStart();
        org.joda.time.Interval interval75 = mutableInterval70.toInterval();
        mutableInterval70.setEndMillis(1644572129419L);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:12.596Z/2022-02-11T09:40:12.596Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:12.596Z/2022-02-11T09:40:12.596Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:12.596Z/2022-02-11T09:40:12.596Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572412596L + "'", long16 == 1644572412596L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572412596L + "'", long32 == 1644572412596L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(mutableInterval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(interval75);
    }

    @Test
    public void test03688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03688");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        boolean boolean9 = mutableInterval5.isAfter(readableInstant8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        mutableInterval12.setStartMillis(1644572127942L);
        boolean boolean17 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        boolean boolean18 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.Period period26 = mutableInterval24.toPeriod();
        mutableInterval12.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period26);
        java.lang.Object obj28 = mutableInterval12.clone();
        org.joda.time.MutableInterval mutableInterval29 = mutableInterval12.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.Period period37 = mutableInterval35.toPeriod();
        org.joda.time.Period period38 = period37.toPeriod();
        org.joda.time.PeriodType periodType39 = period38.getPeriodType();
        org.joda.time.Period period40 = mutableInterval29.toPeriod(periodType39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = mutableInterval47.toPeriod(periodType48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.Period period57 = mutableInterval55.toPeriod();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        org.joda.time.PeriodType periodType61 = null;
        org.joda.time.Period period62 = mutableInterval60.toPeriod(periodType61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        boolean boolean64 = period62.isSupported(durationFieldType63);
        boolean boolean66 = period62.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType68 = period62.getFieldType(0);
        int int69 = period57.get(durationFieldType68);
        int int70 = period49.get(durationFieldType68);
        mutableInterval43.setPeriodAfterStart((org.joda.time.ReadablePeriod) period49);
        org.joda.time.Interval interval72 = mutableInterval43.toInterval();
        org.joda.time.Chronology chronology73 = mutableInterval43.getChronology();
        org.joda.time.DurationField durationField74 = chronology73.eras();
        org.joda.time.DateTimeField dateTimeField75 = chronology73.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.hourOfDay();
        boolean boolean77 = period40.equals((java.lang.Object) chronology73);
        org.joda.time.DateTimeField dateTimeField78 = chronology73.millisOfSecond();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals(obj28.toString(), "2022-02-11T09:40:12.636Z/2022-02-11T09:40:12.636Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "2022-02-11T09:40:12.636Z/2022-02-11T09:40:12.636Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "2022-02-11T09:40:12.636Z/2022-02-11T09:40:12.636Z");
        org.junit.Assert.assertNotNull(mutableInterval29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(dateTimeField78);
    }

    @Test
    public void test03689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03689");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        mutableInterval38.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant41 = null;
        boolean boolean42 = mutableInterval38.isAfter(readableInstant41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        mutableInterval38.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration72);
        mutableInterval35.setDurationAfterStart((org.joda.time.ReadableDuration) duration72);
        mutableInterval22.setDurationAfterStart((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Chronology chronology76 = mutableInterval22.getChronology();
        org.joda.time.DurationField durationField77 = chronology76.minutes();
        org.joda.time.DurationField durationField78 = chronology76.weeks();
        org.joda.time.DateTimeField dateTimeField79 = chronology76.year();
        // The following exception was thrown during execution in test generation
        try {
            long long87 = chronology76.getDateTimeMillis((int) '#', (int) (short) 0, (int) '4', 10, (int) (byte) 1, 1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 0 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572412660L + "'", long7 == 1644572412660L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572412660L + "'", long23 == 1644572412660L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
    }

    @Test
    public void test03690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03690");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        boolean boolean25 = mutableInterval21.contains(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        long long36 = mutableInterval35.toDurationMillis();
        boolean boolean37 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.contains(readableInstant38);
        boolean boolean40 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        boolean boolean55 = mutableInterval21.isBefore((org.joda.time.ReadableInterval) mutableInterval50);
        boolean boolean56 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = mutableInterval59.toPeriod(periodType60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        boolean boolean63 = period61.isSupported(durationFieldType62);
        boolean boolean65 = period61.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType67 = period61.getFieldType(0);
        mutableInterval50.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period61);
        org.joda.time.MutablePeriod mutablePeriod69 = period61.toMutablePeriod();
        int int70 = period61.size();
        org.joda.time.MutablePeriod mutablePeriod71 = period61.toMutablePeriod();
        org.joda.time.Period period72 = period61.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType74 = period72.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(period72);
    }

    @Test
    public void test03691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03691");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        mutableInterval4.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval12 = mutableInterval4.copy();
        boolean boolean14 = mutableInterval4.contains(1644572125519L);
        org.joda.time.Chronology chronology15 = mutableInterval4.getChronology();
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(0L, 1644572131452L, chronology15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period21, readableInstant22);
        int int24 = period21.size();
        mutableInterval16.setPeriodAfterStart((org.joda.time.ReadablePeriod) period21);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = mutableInterval28.toPeriod(periodType29);
        java.lang.Object obj31 = mutableInterval28.clone();
        org.joda.time.DateTime dateTime32 = mutableInterval28.getStart();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        mutableInterval51.setDurationAfterStart(0L);
        boolean boolean55 = mutableInterval51.equals((java.lang.Object) (-1));
        long long56 = mutableInterval51.getEndMillis();
        org.joda.time.DateTime dateTime57 = mutableInterval51.getEnd();
        boolean boolean58 = mutableInterval44.isAfter((org.joda.time.ReadableInstant) dateTime57);
        boolean boolean59 = dateTime41.isAfter((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        boolean boolean66 = mutableInterval62.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readablePeriod67, readableInstant68);
        long long70 = mutableInterval69.toDurationMillis();
        boolean boolean71 = mutableInterval65.isAfter((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        boolean boolean73 = mutableInterval69.contains(readableInstant72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.ReadableDuration readableDuration78 = null;
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(readableInstant77, readableDuration78);
        boolean boolean80 = mutableInterval76.overlaps((org.joda.time.ReadableInterval) mutableInterval79);
        org.joda.time.ReadablePeriod readablePeriod81 = null;
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readablePeriod81, readableInstant82);
        long long84 = mutableInterval83.toDurationMillis();
        boolean boolean85 = mutableInterval79.isAfter((org.joda.time.ReadableInterval) mutableInterval83);
        org.joda.time.ReadableInstant readableInstant86 = null;
        boolean boolean87 = mutableInterval83.contains(readableInstant86);
        boolean boolean88 = mutableInterval69.overlaps((org.joda.time.ReadableInterval) mutableInterval83);
        org.joda.time.Duration duration89 = mutableInterval83.toDuration();
        org.joda.time.MutableInterval mutableInterval90 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableDuration) duration89);
        boolean boolean91 = mutableInterval28.contains((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Chronology chronology92 = dateTime57.getChronology();
        org.joda.time.DateTimeField dateTimeField93 = chronology92.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField94 = chronology92.era();
        boolean boolean95 = mutableInterval16.equals((java.lang.Object) chronology92);
        org.joda.time.DurationField durationField96 = chronology92.eras();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mutableInterval12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals(obj31.toString(), "2022-02-11T09:40:12.727Z/2022-02-11T09:40:12.727Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "2022-02-11T09:40:12.727Z/2022-02-11T09:40:12.727Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "2022-02-11T09:40:12.727Z/2022-02-11T09:40:12.727Z");
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572412727L + "'", long40 == 1644572412727L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1644572412727L + "'", long56 == 1644572412727L);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(chronology92);
        org.junit.Assert.assertNotNull(dateTimeField93);
        org.junit.Assert.assertNotNull(dateTimeField94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(durationField96);
    }

    @Test
    public void test03692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03692");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        boolean boolean8 = mutableInterval5.contains(readableInstant7);
        org.joda.time.Period period9 = mutableInterval5.toPeriod();
        org.joda.time.DateTime dateTime10 = mutableInterval5.getEnd();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = mutableInterval13.toPeriod(periodType14);
        org.joda.time.Period period16 = mutableInterval13.toPeriod();
        org.joda.time.Interval interval17 = mutableInterval13.toInterval();
        boolean boolean18 = mutableInterval5.isBefore((org.joda.time.ReadableInterval) interval17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.ReadablePeriod readablePeriod26 = null;
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readablePeriod26, readableInstant27);
        long long29 = mutableInterval28.toDurationMillis();
        boolean boolean30 = mutableInterval24.isAfter((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval24.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        boolean boolean35 = mutableInterval33.isBeforeNow();
        org.joda.time.Interval interval36 = mutableInterval33.toInterval();
        org.joda.time.MutableInterval mutableInterval37 = mutableInterval33.toMutableInterval();
        org.joda.time.Duration duration38 = mutableInterval37.toDuration();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Period period43 = mutableInterval41.toPeriod(periodType42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period43, readableInstant44);
        long long46 = mutableInterval45.getStartMillis();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        mutableInterval49.setDurationAfterStart(0L);
        boolean boolean53 = mutableInterval49.equals((java.lang.Object) (-1));
        boolean boolean54 = mutableInterval45.isAfter((org.joda.time.ReadableInterval) mutableInterval49);
        org.joda.time.Duration duration55 = mutableInterval49.toDuration();
        int int56 = duration38.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        org.joda.time.PeriodType periodType64 = null;
        org.joda.time.Period period65 = mutableInterval63.toPeriod(periodType64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        boolean boolean72 = mutableInterval68.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.Period period73 = mutableInterval71.toPeriod();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.Period period78 = mutableInterval76.toPeriod(periodType77);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = period78.isSupported(durationFieldType79);
        boolean boolean82 = period78.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType84 = period78.getFieldType(0);
        int int85 = period73.get(durationFieldType84);
        int int86 = period65.get(durationFieldType84);
        mutableInterval59.setPeriodAfterStart((org.joda.time.ReadablePeriod) period65);
        org.joda.time.DateTime dateTime88 = mutableInterval59.getEnd();
        org.joda.time.MutableInterval mutableInterval89 = new org.joda.time.MutableInterval((org.joda.time.ReadableDuration) duration38, (org.joda.time.ReadableInstant) dateTime88);
        boolean boolean90 = interval17.isBefore((org.joda.time.ReadableInstant) dateTime88);
        long long91 = interval17.getStartMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(mutableInterval37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(period43);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572412757L + "'", long46 == 1644572412757L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1644572412757L + "'", long91 == 1644572412757L);
    }

    @Test
    public void test03693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03693");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readablePeriod14, readableInstant15);
        long long17 = mutableInterval16.toDurationMillis();
        boolean boolean18 = mutableInterval12.isAfter((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        boolean boolean20 = mutableInterval16.contains(readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        boolean boolean35 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Duration duration36 = mutableInterval30.toDuration();
        boolean boolean38 = duration36.equals((java.lang.Object) 'a');
        mutableInterval6.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        boolean boolean53 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.Period period54 = mutableInterval52.toPeriod();
        org.joda.time.Duration duration55 = mutableInterval52.toDuration();
        mutableInterval42.setDurationAfterStart((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Chronology chronology57 = mutableInterval42.getChronology();
        org.joda.time.DateTimeField dateTimeField58 = chronology57.weekOfWeekyear();
        mutableInterval6.setChronology(chronology57);
        org.joda.time.DateTimeField dateTimeField60 = chronology57.halfdayOfDay();
        org.joda.time.DurationField durationField61 = chronology57.hours();
        org.joda.time.DateTimeField dateTimeField62 = chronology57.dayOfYear();
        org.joda.time.DateTimeField dateTimeField63 = chronology57.weekOfWeekyear();
        org.joda.time.DurationField durationField64 = chronology57.minutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertNotNull(dateTimeField58);
        org.junit.Assert.assertNotNull(dateTimeField60);
        org.junit.Assert.assertNotNull(durationField61);
        org.junit.Assert.assertNotNull(dateTimeField62);
        org.junit.Assert.assertNotNull(dateTimeField63);
        org.junit.Assert.assertNotNull(durationField64);
    }

    @Test
    public void test03694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03694");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        mutableInterval2.setEndMillis(1644572128327L);
        org.joda.time.Period period77 = mutableInterval2.toPeriod();
        org.joda.time.Duration duration78 = mutableInterval2.toDuration();
        mutableInterval2.setDurationBeforeEnd(1644572209541L);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572412970L + "'", long22 == 1644572412970L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572412970L + "'", long38 == 1644572412970L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
    }

    @Test
    public void test03695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03695");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        java.lang.Object obj22 = mutableInterval19.clone();
        org.joda.time.DateTime dateTime23 = mutableInterval19.getStart();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        long long47 = mutableInterval42.getEndMillis();
        org.joda.time.DateTime dateTime48 = mutableInterval42.getEnd();
        boolean boolean49 = mutableInterval35.isAfter((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean50 = dateTime32.isAfter((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = mutableInterval19.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology83 = dateTime48.getChronology();
        org.joda.time.DateTimeField dateTimeField84 = chronology83.year();
        org.joda.time.DateTimeField dateTimeField85 = chronology83.monthOfYear();
        long long91 = chronology83.getDateTimeMillis(1644572130375L, 0, (int) (short) 0, 1, (int) (short) 100);
        mutableInterval5.setChronology(chronology83);
        org.joda.time.Interval interval93 = mutableInterval5.toInterval();
        long long94 = mutableInterval5.getEndMillis();
        java.lang.Object obj95 = mutableInterval5.clone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:12.993Z/2022-02-11T09:40:12.993Z" + "'", str16, "2022-02-11T09:40:12.993Z/2022-02-11T09:40:12.993Z");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "2022-02-11T09:40:12.993Z/2022-02-11T09:40:12.993Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "2022-02-11T09:40:12.993Z/2022-02-11T09:40:12.993Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "2022-02-11T09:40:12.993Z/2022-02-11T09:40:12.993Z");
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572412993L + "'", long31 == 1644572412993L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572412993L + "'", long47 == 1644572412993L);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1644537601100L + "'", long91 == 1644537601100L);
        org.junit.Assert.assertNotNull(interval93);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572412993L + "'", long94 == 1644572412993L);
        org.junit.Assert.assertNotNull(obj95);
// flaky:         org.junit.Assert.assertEquals(obj95.toString(), "2022-02-11T09:40:12.993Z/2022-02-11T09:40:12.993Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "2022-02-11T09:40:12.993Z/2022-02-11T09:40:12.993Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "2022-02-11T09:40:12.993Z/2022-02-11T09:40:12.993Z");
    }

    @Test
    public void test03696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03696");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.millisOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.dayOfMonth();
        long long79 = chronology66.getDateTimeMillis(1644572148756L, (int) (short) 10, 8, (int) '4', 10);
        org.joda.time.DateTimeField dateTimeField80 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField81 = chronology66.dayOfYear();
        java.lang.Class<?> wildcardClass82 = dateTimeField81.getClass();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:13.162Z/2022-02-11T09:40:13.162Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:13.162Z/2022-02-11T09:40:13.162Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:13.162Z/2022-02-11T09:40:13.162Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572413162L + "'", long14 == 1644572413162L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572413162L + "'", long30 == 1644572413162L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1644574132010L + "'", long79 == 1644574132010L);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTimeField81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test03697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03697");
        org.joda.time.MutableInterval mutableInterval0 = new org.joda.time.MutableInterval();
        org.joda.time.DateTime dateTime1 = mutableInterval0.getEnd();
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        mutableInterval4.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval12 = mutableInterval4.copy();
        boolean boolean14 = mutableInterval4.contains(1644572125519L);
        org.joda.time.Chronology chronology15 = mutableInterval4.getChronology();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = mutableInterval25.contains(readableInstant28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readablePeriod37, readableInstant38);
        long long40 = mutableInterval39.toDurationMillis();
        boolean boolean41 = mutableInterval35.isAfter((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        boolean boolean43 = mutableInterval39.contains(readableInstant42);
        boolean boolean44 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.Duration duration45 = mutableInterval39.toDuration();
        boolean boolean46 = mutableInterval4.contains((org.joda.time.ReadableInterval) mutableInterval39);
        boolean boolean48 = mutableInterval39.equals((java.lang.Object) 1644572139795L);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        mutableInterval54.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.isAfter(readableInstant57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        mutableInterval61.setDurationAfterStart(0L);
        mutableInterval61.setStartMillis(1644572127942L);
        boolean boolean66 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        boolean boolean67 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        boolean boolean74 = mutableInterval70.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.Period period75 = mutableInterval73.toPeriod();
        mutableInterval61.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period75);
        java.lang.Object obj77 = mutableInterval61.clone();
        org.joda.time.MutableInterval mutableInterval78 = mutableInterval61.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        mutableInterval81.setDurationAfterStart(0L);
        boolean boolean85 = mutableInterval81.equals((java.lang.Object) (-1));
        mutableInterval81.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period89 = mutableInterval81.toPeriod();
        org.joda.time.MutableInterval mutableInterval90 = mutableInterval81.toMutableInterval();
        boolean boolean91 = mutableInterval78.contains((org.joda.time.ReadableInterval) mutableInterval90);
        org.joda.time.DateTime dateTime92 = mutableInterval78.getEnd();
        boolean boolean93 = mutableInterval39.contains((org.joda.time.ReadableInstant) dateTime92);
        boolean boolean94 = mutableInterval0.isBefore((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.Interval interval95 = mutableInterval39.toInterval();
        org.joda.time.DateTime dateTime96 = interval95.getStart();
        org.joda.time.DateTime dateTime97 = interval95.getStart();
        org.junit.Assert.assertNotNull(dateTime1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mutableInterval12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(obj77);
// flaky:         org.junit.Assert.assertEquals(obj77.toString(), "2022-02-11T09:40:13.193Z/2022-02-11T09:40:13.193Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "2022-02-11T09:40:13.193Z/2022-02-11T09:40:13.193Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "2022-02-11T09:40:13.193Z/2022-02-11T09:40:13.193Z");
        org.junit.Assert.assertNotNull(mutableInterval78);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(mutableInterval90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(dateTime92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(interval95);
        org.junit.Assert.assertNotNull(dateTime96);
        org.junit.Assert.assertNotNull(dateTime97);
    }

    @Test
    public void test03698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03698");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean28 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.Period period29 = mutableInterval20.toPeriod();
        org.joda.time.Chronology chronology30 = mutableInterval20.getChronology();
        long long31 = mutableInterval20.toDurationMillis();
        org.joda.time.Chronology chronology32 = mutableInterval20.getChronology();
        org.joda.time.Chronology chronology33 = mutableInterval20.getChronology();
        org.joda.time.DateTimeField dateTimeField34 = chronology33.weekOfWeekyear();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(chronology30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(chronology33);
        org.junit.Assert.assertNotNull(dateTimeField34);
    }

    @Test
    public void test03699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03699");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        mutableInterval38.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant41 = null;
        boolean boolean42 = mutableInterval38.isAfter(readableInstant41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        mutableInterval38.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration72);
        mutableInterval35.setDurationAfterStart((org.joda.time.ReadableDuration) duration72);
        mutableInterval22.setDurationAfterStart((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Chronology chronology76 = mutableInterval22.getChronology();
        org.joda.time.DurationField durationField77 = chronology76.minutes();
        org.joda.time.DateTimeField dateTimeField78 = chronology76.dayOfMonth();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        org.joda.time.PeriodType periodType82 = null;
        org.joda.time.Period period83 = mutableInterval81.toPeriod(periodType82);
        org.joda.time.DurationFieldType durationFieldType84 = null;
        boolean boolean85 = period83.isSupported(durationFieldType84);
        boolean boolean87 = period83.equals((java.lang.Object) "hi!");
        int int88 = period83.size();
        int int89 = period83.size();
        int[] intArray91 = chronology76.get((org.joda.time.ReadablePeriod) period83, 1644572288008L);
        java.lang.String str92 = period83.toString();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572413245L + "'", long7 == 1644572413245L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572413245L + "'", long23 == 1644572413245L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 8 + "'", int88 == 8);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 8 + "'", int89 == 8);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0, 2719, 1, 9, 38, 8, 8]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "PT0S" + "'", str92, "PT0S");
    }

    @Test
    public void test03700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03700");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        boolean boolean15 = mutableInterval9.isAfter(1644572126418L);
        org.joda.time.MutableInterval mutableInterval16 = mutableInterval9.copy();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        java.lang.Object obj22 = mutableInterval19.clone();
        org.joda.time.DateTime dateTime23 = mutableInterval19.getStart();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        long long47 = mutableInterval42.getEndMillis();
        org.joda.time.DateTime dateTime48 = mutableInterval42.getEnd();
        boolean boolean49 = mutableInterval35.isAfter((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean50 = dateTime32.isAfter((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = mutableInterval19.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology83 = dateTime48.getChronology();
        org.joda.time.Chronology chronology84 = dateTime48.getChronology();
        org.joda.time.DurationField durationField85 = chronology84.millis();
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval9, chronology84);
        org.joda.time.DateTime dateTime87 = mutableInterval86.getEnd();
        org.joda.time.DateTimeFieldType dateTimeFieldType88 = null;
        boolean boolean89 = dateTime87.isSupported(dateTimeFieldType88);
        java.lang.String str90 = dateTime87.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutableInterval16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "2022-02-11T09:40:13.305Z/2022-02-11T09:40:13.305Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "2022-02-11T09:40:13.305Z/2022-02-11T09:40:13.305Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "2022-02-11T09:40:13.305Z/2022-02-11T09:40:13.305Z");
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572413305L + "'", long31 == 1644572413305L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572413305L + "'", long47 == 1644572413305L);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(durationField85);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "2022-02-11T09:40:13.305Z" + "'", str90, "2022-02-11T09:40:13.305Z");
    }

    @Test
    public void test03701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03701");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        java.lang.String str67 = dateTime31.toString();
        org.joda.time.Chronology chronology68 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.secondOfMinute();
        org.joda.time.Chronology chronology71 = chronology68.withUTC();
        org.joda.time.DateTimeField dateTimeField72 = chronology68.yearOfEra();
        org.joda.time.DurationField durationField73 = chronology68.years();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.minuteOfHour();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:13.365Z/2022-02-11T09:40:13.365Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:13.365Z/2022-02-11T09:40:13.365Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:13.365Z/2022-02-11T09:40:13.365Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572413365L + "'", long14 == 1644572413365L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572413365L + "'", long30 == 1644572413365L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "2022-02-11T09:40:13.365Z" + "'", str67, "2022-02-11T09:40:13.365Z");
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03702");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.DateTime dateTime33 = mutableInterval6.getEnd();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = mutableInterval36.toPeriod(periodType37);
        org.joda.time.MutableInterval mutableInterval39 = mutableInterval36.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval40 = mutableInterval36.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        mutableInterval43.setDurationAfterStart(0L);
        boolean boolean47 = mutableInterval43.equals((java.lang.Object) (-1));
        long long48 = mutableInterval43.getEndMillis();
        org.joda.time.DateTime dateTime49 = mutableInterval43.getEnd();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        mutableInterval59.setDurationAfterStart(0L);
        boolean boolean63 = mutableInterval59.equals((java.lang.Object) (-1));
        long long64 = mutableInterval59.getEndMillis();
        org.joda.time.DateTime dateTime65 = mutableInterval59.getEnd();
        boolean boolean66 = mutableInterval52.isAfter((org.joda.time.ReadableInstant) dateTime65);
        boolean boolean67 = dateTime49.isAfter((org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        boolean boolean74 = mutableInterval70.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        mutableInterval77.setDurationAfterStart(0L);
        boolean boolean81 = mutableInterval77.equals((java.lang.Object) (-1));
        long long82 = mutableInterval77.getEndMillis();
        org.joda.time.DateTime dateTime83 = mutableInterval77.getEnd();
        boolean boolean84 = mutableInterval70.isAfter((org.joda.time.ReadableInstant) dateTime83);
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime65, (org.joda.time.ReadableInstant) dateTime83);
        org.joda.time.Chronology chronology86 = dateTime83.getChronology();
        boolean boolean87 = mutableInterval40.isAfter((org.joda.time.ReadableInstant) dateTime83);
        long long88 = dateTime83.getMillis();
        org.joda.time.DateTimeZone dateTimeZone89 = dateTime83.getZone();
        boolean boolean90 = dateTime33.isAfter((org.joda.time.ReadableInstant) dateTime83);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572413391L + "'", long7 == 1644572413391L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572413391L + "'", long23 == 1644572413391L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(mutableInterval39);
        org.junit.Assert.assertNotNull(mutableInterval40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1644572413391L + "'", long48 == 1644572413391L);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1644572413391L + "'", long64 == 1644572413391L);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1644572413391L + "'", long82 == 1644572413391L);
        org.junit.Assert.assertNotNull(dateTime83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(chronology86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1644572413391L + "'", long88 == 1644572413391L);
        org.junit.Assert.assertNotNull(dateTimeZone89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test03703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03703");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.DateTime dateTime17 = mutableInterval14.getEnd();
        mutableInterval14.setInterval(1644572146011L, 1644572160970L);
        org.joda.time.Chronology chronology21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((java.lang.Object) 1644572146011L, chronology21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(dateTime17);
    }

    @Test
    public void test03704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03704");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField68 = chronology67.monthOfYear();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.clockhourOfDay();
        org.joda.time.Chronology chronology70 = chronology67.withUTC();
        org.joda.time.DurationField durationField71 = chronology67.halfdays();
        org.joda.time.DateTimeZone dateTimeZone72 = chronology67.getZone();
        org.joda.time.DateTimeField dateTimeField73 = chronology67.yearOfEra();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:13.559Z/2022-02-11T09:40:13.559Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:13.559Z/2022-02-11T09:40:13.559Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:13.559Z/2022-02-11T09:40:13.559Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572413559L + "'", long14 == 1644572413559L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572413559L + "'", long30 == 1644572413559L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeZone72);
        org.junit.Assert.assertNotNull(dateTimeField73);
    }

    @Test
    public void test03705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03705");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Duration duration8 = mutableInterval5.toDuration();
        org.joda.time.DateTime dateTime9 = mutableInterval5.getStart();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readablePeriod17, readableInstant18);
        long long20 = mutableInterval19.toDurationMillis();
        boolean boolean21 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        boolean boolean26 = mutableInterval24.isBeforeNow();
        org.joda.time.Interval interval27 = mutableInterval24.toInterval();
        org.joda.time.MutableInterval mutableInterval28 = mutableInterval24.toMutableInterval();
        org.joda.time.Duration duration29 = mutableInterval28.toDuration();
        org.joda.time.MutableInterval mutableInterval30 = mutableInterval28.toMutableInterval();
        boolean boolean31 = mutableInterval5.isBefore((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Duration duration32 = mutableInterval30.toDuration();
        mutableInterval30.setDurationBeforeEnd(1644572225402L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(dateTime9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(mutableInterval28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(mutableInterval30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration32);
    }

    @Test
    public void test03706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03706");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        mutableInterval4.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval12 = mutableInterval4.copy();
        boolean boolean14 = mutableInterval4.contains(1644572125519L);
        org.joda.time.Chronology chronology15 = mutableInterval4.getChronology();
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(0L, 1644572131452L, chronology15);
        org.joda.time.DurationField durationField17 = chronology15.weeks();
        org.joda.time.DateTimeField dateTimeField18 = chronology15.year();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mutableInterval12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(durationField17);
        org.junit.Assert.assertNotNull(dateTimeField18);
    }

    @Test
    public void test03707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03707");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        boolean boolean7 = mutableInterval6.containsNow();
        org.joda.time.Interval interval8 = mutableInterval6.toInterval();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        long long14 = mutableInterval11.getEndMillis();
        boolean boolean16 = mutableInterval11.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval17 = mutableInterval11.copy();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period22, readableInstant23);
        long long25 = mutableInterval24.getStartMillis();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        mutableInterval28.setDurationAfterStart(0L);
        boolean boolean32 = mutableInterval28.equals((java.lang.Object) (-1));
        boolean boolean33 = mutableInterval24.isAfter((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.Period period41 = mutableInterval39.toPeriod();
        org.joda.time.Duration duration42 = mutableInterval39.toDuration();
        mutableInterval28.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration44 = duration42.toDuration();
        mutableInterval11.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.Period period50 = mutableInterval48.toPeriod(periodType49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        boolean boolean52 = period50.isSupported(durationFieldType51);
        boolean boolean54 = period50.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType56 = period50.getFieldType(0);
        org.joda.time.Period period57 = period50.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod58 = period57.toMutablePeriod();
        org.joda.time.Period period59 = mutablePeriod58.toPeriod();
        mutableInterval11.setPeriodAfterStart((org.joda.time.ReadablePeriod) period59);
        java.lang.String str61 = period59.toString();
        org.joda.time.PeriodType periodType62 = period59.getPeriodType();
        org.joda.time.Period period63 = period59.toPeriod();
        mutableInterval6.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period63);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572413646L + "'", long14 == 1644572413646L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(mutableInterval17);
        org.junit.Assert.assertNotNull(period22);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572413646L + "'", long25 == 1644572413646L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT0S" + "'", str61, "PT0S");
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test03708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03708");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.year();
        org.joda.time.DateTimeField dateTimeField72 = chronology68.era();
        org.joda.time.DurationField durationField73 = chronology68.millis();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.hourOfHalfday();
        org.joda.time.DurationField durationField75 = chronology68.days();
        org.joda.time.DurationField durationField76 = chronology68.months();
        org.joda.time.DurationField durationField77 = chronology68.weeks();
        org.joda.time.DurationField durationField78 = chronology68.days();
        org.joda.time.ReadablePartial readablePartial79 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long81 = chronology68.set(readablePartial79, 1644572373917L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:13.666Z/2022-02-11T09:40:13.666Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:13.666Z/2022-02-11T09:40:13.666Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:13.666Z/2022-02-11T09:40:13.666Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572413666L + "'", long16 == 1644572413666L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572413666L + "'", long32 == 1644572413666L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(durationField78);
    }

    @Test
    public void test03709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03709");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval4 = mutableInterval2.toInterval();
        org.joda.time.MutableInterval mutableInterval5 = interval4.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        mutableInterval8.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        boolean boolean12 = mutableInterval8.contains(readableInstant11);
        long long13 = mutableInterval8.getEndMillis();
        org.joda.time.DateTime dateTime14 = mutableInterval8.getStart();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = mutableInterval17.toPeriod(periodType18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period19, readableInstant20);
        long long22 = mutableInterval21.getStartMillis();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        boolean boolean30 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = mutableInterval33.toPeriod(periodType34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period35, readableInstant36);
        long long38 = mutableInterval37.getStartMillis();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        mutableInterval41.setDurationAfterStart(0L);
        boolean boolean45 = mutableInterval41.equals((java.lang.Object) (-1));
        boolean boolean46 = mutableInterval37.isAfter((org.joda.time.ReadableInterval) mutableInterval41);
        boolean boolean47 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        boolean boolean48 = mutableInterval21.containsNow();
        boolean boolean49 = mutableInterval8.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.Duration duration50 = mutableInterval21.toDuration();
        mutableInterval5.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Interval interval52 = mutableInterval5.toInterval();
        org.joda.time.Interval interval53 = mutableInterval5.toInterval();
        mutableInterval5.setInterval(1644572285010L, 1644572389664L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1644572413754L + "'", long13 == 1644572413754L);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(period19);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572413754L + "'", long22 == 1644572413754L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(period35);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572413754L + "'", long38 == 1644572413754L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
    }

    @Test
    public void test03710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03710");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        long long8 = mutableInterval2.getStartMillis();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        mutableInterval2.setStart((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTimeZone dateTimeZone68 = dateTime33.getZone();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572413771L + "'", long5 == 1644572413771L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572413771L + "'", long8 == 1644572413771L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572413771L + "'", long16 == 1644572413771L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572413771L + "'", long32 == 1644572413771L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(dateTimeZone68);
    }

    @Test
    public void test03711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03711");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        boolean boolean8 = mutableInterval5.contains(readableInstant7);
        org.joda.time.Period period9 = mutableInterval5.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = period9.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = period9.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test03712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03712");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean28 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        mutableInterval31.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant34 = null;
        boolean boolean35 = mutableInterval31.contains(readableInstant34);
        long long36 = mutableInterval31.getEndMillis();
        boolean boolean37 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval31.setEndMillis(1644572329608L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1644572413904L + "'", long36 == 1644572413904L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03713");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        boolean boolean15 = mutableInterval9.isAfter(1644572126418L);
        org.joda.time.MutableInterval mutableInterval16 = mutableInterval9.copy();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        java.lang.Object obj22 = mutableInterval19.clone();
        org.joda.time.DateTime dateTime23 = mutableInterval19.getStart();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        long long47 = mutableInterval42.getEndMillis();
        org.joda.time.DateTime dateTime48 = mutableInterval42.getEnd();
        boolean boolean49 = mutableInterval35.isAfter((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean50 = dateTime32.isAfter((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = mutableInterval19.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology83 = dateTime48.getChronology();
        org.joda.time.Chronology chronology84 = dateTime48.getChronology();
        org.joda.time.DateTimeField dateTimeField85 = chronology84.monthOfYear();
        org.joda.time.DateTimeField dateTimeField86 = chronology84.clockhourOfDay();
        org.joda.time.Chronology chronology87 = chronology84.withUTC();
        boolean boolean88 = mutableInterval9.equals((java.lang.Object) chronology84);
        org.joda.time.DurationField durationField89 = chronology84.millis();
        org.joda.time.DateTimeField dateTimeField90 = chronology84.year();
        org.joda.time.DurationField durationField91 = chronology84.days();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutableInterval16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "2022-02-11T09:40:13.917Z/2022-02-11T09:40:13.917Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "2022-02-11T09:40:13.917Z/2022-02-11T09:40:13.917Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "2022-02-11T09:40:13.917Z/2022-02-11T09:40:13.917Z");
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572413917L + "'", long31 == 1644572413917L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572413917L + "'", long47 == 1644572413917L);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(dateTimeField86);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(durationField89);
        org.junit.Assert.assertNotNull(dateTimeField90);
        org.junit.Assert.assertNotNull(durationField91);
    }

    @Test
    public void test03714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03714");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        mutableInterval2.setStartMillis(1644572127942L);
        mutableInterval2.setStartMillis(1644572127679L);
        mutableInterval2.setDurationAfterStart(1644572124037L);
        org.joda.time.Period period11 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        boolean boolean25 = mutableInterval21.contains(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        long long36 = mutableInterval35.toDurationMillis();
        boolean boolean37 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.contains(readableInstant38);
        boolean boolean40 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        long long41 = mutableInterval35.getStartMillis();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        java.lang.String str58 = mutableInterval47.toString();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.PeriodType periodType62 = null;
        org.joda.time.Period period63 = mutableInterval61.toPeriod(periodType62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        boolean boolean67 = period63.equals((java.lang.Object) readableInstant65);
        mutableInterval47.setPeriodAfterStart((org.joda.time.ReadablePeriod) period63);
        org.joda.time.ReadableDuration readableDuration69 = null;
        mutableInterval47.setDurationBeforeEnd(readableDuration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.PeriodType periodType74 = null;
        org.joda.time.Period period75 = mutableInterval73.toPeriod(periodType74);
        org.joda.time.DurationFieldType durationFieldType76 = null;
        boolean boolean77 = period75.isSupported(durationFieldType76);
        boolean boolean79 = period75.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType81 = period75.getFieldType(0);
        org.joda.time.Period period82 = period75.toPeriod();
        mutableInterval47.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period75);
        boolean boolean84 = mutableInterval35.equals((java.lang.Object) mutableInterval47);
        org.joda.time.DateTime dateTime85 = mutableInterval35.getEnd();
        mutableInterval2.setStart((org.joda.time.ReadableInstant) dateTime85);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572413968L + "'", long41 == 1644572413968L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "2022-02-11T09:40:13.968Z/2022-02-11T09:40:13.968Z" + "'", str58, "2022-02-11T09:40:13.968Z/2022-02-11T09:40:13.968Z");
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(dateTime85);
    }

    @Test
    public void test03715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03715");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        boolean boolean33 = mutableInterval6.containsNow();
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readablePeriod34, readableInstant35);
        org.joda.time.Chronology chronology37 = null;
        mutableInterval36.setChronology(chronology37);
        org.joda.time.Chronology chronology39 = mutableInterval36.getChronology();
        boolean boolean40 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(1644572140555L, 1644572153433L, chronology43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        mutableInterval47.setDurationAfterStart(0L);
        boolean boolean51 = mutableInterval47.equals((java.lang.Object) (-1));
        mutableInterval47.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period55 = mutableInterval47.toPeriod();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        mutableInterval58.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        long long63 = mutableInterval58.getEndMillis();
        org.joda.time.DateTime dateTime64 = mutableInterval58.getStart();
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period55, (org.joda.time.ReadableInstant) dateTime64);
        mutableInterval44.setEnd((org.joda.time.ReadableInstant) dateTime64);
        java.lang.String str67 = dateTime64.toString();
        boolean boolean68 = mutableInterval36.isAfter((org.joda.time.ReadableInstant) dateTime64);
        org.joda.time.DateTimeFieldType dateTimeFieldType69 = null;
        boolean boolean70 = dateTime64.isSupported(dateTimeFieldType69);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572414045L + "'", long7 == 1644572414045L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572414045L + "'", long23 == 1644572414045L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(chronology39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1644572414045L + "'", long63 == 1644572414045L);
        org.junit.Assert.assertNotNull(dateTime64);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "2022-02-11T09:40:14.045Z" + "'", str67, "2022-02-11T09:40:14.045Z");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test03716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03716");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        mutableInterval6.setInterval(1644572129143L, 1644572133904L);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readablePeriod17, readableInstant18);
        long long20 = mutableInterval19.toDurationMillis();
        boolean boolean21 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        java.lang.String str26 = mutableInterval15.toString();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        mutableInterval45.setDurationAfterStart(0L);
        boolean boolean49 = mutableInterval45.equals((java.lang.Object) (-1));
        long long50 = mutableInterval45.getEndMillis();
        org.joda.time.DateTime dateTime51 = mutableInterval45.getEnd();
        boolean boolean52 = mutableInterval38.isAfter((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean53 = dateTime35.isAfter((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean54 = mutableInterval15.contains((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean55 = mutableInterval6.isBefore((org.joda.time.ReadableInterval) mutableInterval15);
        java.lang.String str56 = mutableInterval15.toString();
        org.joda.time.MutableInterval mutableInterval57 = mutableInterval15.toMutableInterval();
        org.joda.time.DateTime dateTime58 = mutableInterval57.getEnd();
        org.joda.time.DateTime dateTime59 = mutableInterval57.getEnd();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        boolean boolean68 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadablePeriod readablePeriod69 = null;
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readablePeriod69, readableInstant70);
        long long72 = mutableInterval71.toDurationMillis();
        boolean boolean73 = mutableInterval67.isAfter((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        boolean boolean75 = mutableInterval71.contains(readableInstant74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        boolean boolean82 = mutableInterval78.overlaps((org.joda.time.ReadableInterval) mutableInterval81);
        org.joda.time.ReadablePeriod readablePeriod83 = null;
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval(readablePeriod83, readableInstant84);
        long long86 = mutableInterval85.toDurationMillis();
        boolean boolean87 = mutableInterval81.isAfter((org.joda.time.ReadableInterval) mutableInterval85);
        org.joda.time.ReadableInstant readableInstant88 = null;
        boolean boolean89 = mutableInterval85.contains(readableInstant88);
        boolean boolean90 = mutableInterval71.overlaps((org.joda.time.ReadableInterval) mutableInterval85);
        long long91 = mutableInterval85.getStartMillis();
        org.joda.time.Chronology chronology92 = mutableInterval85.getChronology();
        org.joda.time.DateTimeField dateTimeField93 = chronology92.millisOfDay();
        org.joda.time.MutableInterval mutableInterval94 = new org.joda.time.MutableInterval(1644572134186L, 1644572156655L, chronology92);
        boolean boolean95 = mutableInterval94.containsNow();
        org.joda.time.DateTime dateTime96 = mutableInterval94.getEnd();
        org.joda.time.DateTimeZone dateTimeZone97 = dateTime96.getZone();
        org.joda.time.DateTimeZone dateTimeZone98 = dateTime96.getZone();
        int int99 = dateTime59.compareTo((org.joda.time.ReadableInstant) dateTime96);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "2022-02-11T09:40:14.067Z/2022-02-11T09:40:14.067Z" + "'", str26, "2022-02-11T09:40:14.067Z/2022-02-11T09:40:14.067Z");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572414067L + "'", long34 == 1644572414067L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1644572414067L + "'", long50 == 1644572414067L);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "2022-02-11T09:40:14.067Z/2022-02-11T09:40:14.067Z" + "'", str56, "2022-02-11T09:40:14.067Z/2022-02-11T09:40:14.067Z");
        org.junit.Assert.assertNotNull(mutableInterval57);
        org.junit.Assert.assertNotNull(dateTime58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1644572414067L + "'", long91 == 1644572414067L);
        org.junit.Assert.assertNotNull(chronology92);
        org.junit.Assert.assertNotNull(dateTimeField93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(dateTime96);
        org.junit.Assert.assertNotNull(dateTimeZone97);
        org.junit.Assert.assertNotNull(dateTimeZone98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test03717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03717");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.hours();
        org.joda.time.DurationField durationField69 = chronology67.months();
        org.joda.time.DateTimeZone dateTimeZone70 = chronology67.getZone();
        org.joda.time.DateTimeField dateTimeField71 = chronology67.weekyearOfCentury();
        org.joda.time.DurationField durationField72 = chronology67.years();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:14.101Z/2022-02-11T09:40:14.101Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:14.101Z/2022-02-11T09:40:14.101Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:14.101Z/2022-02-11T09:40:14.101Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572414101L + "'", long14 == 1644572414101L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572414101L + "'", long30 == 1644572414101L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertNotNull(dateTimeZone70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
    }

    @Test
    public void test03718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03718");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.MutableInterval mutableInterval7 = mutableInterval2.toMutableInterval();
        boolean boolean8 = mutableInterval2.containsNow();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = period13.isSupported(durationFieldType14);
        boolean boolean17 = period13.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType19 = period13.getFieldType(0);
        org.joda.time.Period period20 = period13.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod21 = period20.toMutablePeriod();
        mutableInterval2.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) mutablePeriod21);
        long long23 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval2.getStart();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = null;
        boolean boolean26 = dateTime24.isSupported(dateTimeFieldType25);
        org.joda.time.Chronology chronology27 = dateTime24.getChronology();
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = dateTime24.get(dateTimeFieldType28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:14.125Z/2022-02-11T09:40:14.125Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:14.125Z/2022-02-11T09:40:14.125Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:14.125Z/2022-02-11T09:40:14.125Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertNotNull(mutableInterval7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572414125L + "'", long23 == 1644572414125L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(chronology27);
    }

    @Test
    public void test03719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03719");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:27.942Z/2022-02-11T09:35:44.271Z");
        boolean boolean3 = mutableInterval1.isAfter(1644572143091L);
        org.joda.time.ReadablePeriod readablePeriod4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readablePeriod4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period11, readableInstant12);
        boolean boolean14 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        boolean boolean21 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        long long25 = mutableInterval24.toDurationMillis();
        boolean boolean26 = mutableInterval20.isAfter((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        boolean boolean28 = mutableInterval24.contains(readableInstant27);
        long long29 = mutableInterval24.getEndMillis();
        java.lang.String str30 = mutableInterval24.toString();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        boolean boolean44 = mutableInterval40.equals((java.lang.Object) (-1));
        long long45 = mutableInterval40.getEndMillis();
        org.joda.time.DateTime dateTime46 = mutableInterval40.getEnd();
        boolean boolean47 = mutableInterval33.isAfter((org.joda.time.ReadableInstant) dateTime46);
// flaky:         mutableInterval24.setStart((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean49 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.Duration duration50 = mutableInterval24.toDuration();
        boolean boolean52 = mutableInterval24.isAfter(1644572157502L);
        mutableInterval1.setInterval((org.joda.time.ReadableInterval) mutableInterval24);
        boolean boolean54 = mutableInterval1.isAfterNow();
        org.joda.time.Duration duration55 = mutableInterval1.toDuration();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        boolean boolean72 = mutableInterval70.isBeforeNow();
        org.joda.time.Interval interval73 = mutableInterval70.toInterval();
        org.joda.time.MutableInterval mutableInterval74 = mutableInterval70.toMutableInterval();
        long long75 = mutableInterval70.getEndMillis();
        org.joda.time.ReadableInterval readableInterval76 = null;
        boolean boolean77 = mutableInterval70.contains(readableInterval76);
        boolean boolean78 = duration55.equals((java.lang.Object) readableInterval76);
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572414183L + "'", long29 == 1644572414183L);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "2022-02-11T09:40:14.183Z/2022-02-11T09:40:14.183Z" + "'", str30, "2022-02-11T09:40:14.183Z/2022-02-11T09:40:14.183Z");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1644572414183L + "'", long45 == 1644572414183L);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(mutableInterval74);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572414183L + "'", long75 == 1644572414183L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test03720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03720");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.DateTime dateTime31 = mutableInterval2.getEnd();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = mutableInterval34.toPeriod(periodType35);
        java.lang.Object obj37 = mutableInterval34.clone();
        org.joda.time.DateTime dateTime38 = mutableInterval34.getStart();
        org.joda.time.MutableInterval mutableInterval39 = mutableInterval34.toMutableInterval();
        org.joda.time.Duration duration40 = mutableInterval39.toDuration();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.Period period45 = mutableInterval43.toPeriod(periodType44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period45, readableInstant46);
        long long48 = mutableInterval47.getStartMillis();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        mutableInterval51.setDurationAfterStart(0L);
        boolean boolean55 = mutableInterval51.equals((java.lang.Object) (-1));
        boolean boolean56 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.Period period64 = mutableInterval62.toPeriod();
        org.joda.time.Duration duration65 = mutableInterval62.toDuration();
        mutableInterval51.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration67 = duration65.toDuration();
        mutableInterval39.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration65);
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration65);
        org.joda.time.Period period70 = mutableInterval69.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod71 = period70.toMutablePeriod();
        org.joda.time.Period period72 = period70.toPeriod();
        boolean boolean74 = period72.equals((java.lang.Object) 1644572144318L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(obj37);
// flaky:         org.junit.Assert.assertEquals(obj37.toString(), "2022-02-11T09:40:14.259Z/2022-02-11T09:40:14.259Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "2022-02-11T09:40:14.259Z/2022-02-11T09:40:14.259Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "2022-02-11T09:40:14.259Z/2022-02-11T09:40:14.259Z");
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(mutableInterval39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period45);
// flaky:         org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1644572414259L + "'", long48 == 1644572414259L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test03721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03721");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        org.joda.time.Interval interval6 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        mutableInterval9.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period17 = mutableInterval9.toPeriod();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        boolean boolean24 = mutableInterval20.contains(readableInstant23);
        long long25 = mutableInterval20.getEndMillis();
        org.joda.time.DateTime dateTime26 = mutableInterval20.getStart();
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period17, (org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        boolean boolean43 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        mutableInterval46.setDurationAfterStart(0L);
        boolean boolean50 = mutableInterval46.equals((java.lang.Object) (-1));
        long long51 = mutableInterval46.getEndMillis();
        org.joda.time.DateTime dateTime52 = mutableInterval46.getEnd();
        boolean boolean53 = mutableInterval39.isAfter((org.joda.time.ReadableInstant) dateTime52);
        boolean boolean54 = dateTime36.isAfter((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        mutableInterval64.setDurationAfterStart(0L);
        boolean boolean68 = mutableInterval64.equals((java.lang.Object) (-1));
        long long69 = mutableInterval64.getEndMillis();
        org.joda.time.DateTime dateTime70 = mutableInterval64.getEnd();
        boolean boolean71 = mutableInterval57.isAfter((org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime70);
        boolean boolean73 = dateTime26.isBefore((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean74 = interval6.contains((org.joda.time.ReadableInstant) dateTime70);
        java.lang.String str75 = dateTime70.toString();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572414337L + "'", long5 == 1644572414337L);
        org.junit.Assert.assertNotNull(interval6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572414337L + "'", long25 == 1644572414337L);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572414337L + "'", long35 == 1644572414337L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572414337L + "'", long51 == 1644572414337L);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1644572414337L + "'", long69 == 1644572414337L);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "2022-02-11T09:40:14.337Z" + "'", str75, "2022-02-11T09:40:14.337Z");
    }

    @Test
    public void test03722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03722");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        boolean boolean16 = mutableInterval10.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        mutableInterval19.setStartMillis(1644572127942L);
        mutableInterval19.setStartMillis(1644572127679L);
        mutableInterval19.setDurationAfterStart(1644572124037L);
        org.joda.time.Period period28 = mutableInterval19.toPeriod();
        org.joda.time.Duration duration29 = mutableInterval19.toDuration();
        org.joda.time.DateTime dateTime30 = mutableInterval19.getStart();
        boolean boolean31 = mutableInterval10.contains((org.joda.time.ReadableInterval) mutableInterval19);
        boolean boolean33 = mutableInterval19.equals((java.lang.Object) 1644572207876L);
        boolean boolean35 = mutableInterval19.isBefore(1644572180190L);
        mutableInterval19.setDurationAfterStart(0L);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572414369L + "'", long7 == 1644572414369L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test03723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03723");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone70 = chronology68.getZone();
        org.joda.time.Chronology chronology71 = chronology68.withUTC();
        org.joda.time.DurationField durationField72 = chronology68.days();
        org.joda.time.Chronology chronology73 = chronology68.withUTC();
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(0L, 1644572359960L, chronology73);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:14.410Z/2022-02-11T09:40:14.410Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:14.410Z/2022-02-11T09:40:14.410Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:14.410Z/2022-02-11T09:40:14.410Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572414410L + "'", long16 == 1644572414410L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572414410L + "'", long32 == 1644572414410L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeZone70);
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(chronology73);
    }

    @Test
    public void test03724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03724");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField68 = chronology67.monthOfYear();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology67.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField71 = chronology67.weekyear();
        org.joda.time.DateTimeField dateTimeField72 = chronology67.minuteOfHour();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:14.449Z/2022-02-11T09:40:14.449Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:14.449Z/2022-02-11T09:40:14.449Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:14.449Z/2022-02-11T09:40:14.449Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572414449L + "'", long14 == 1644572414449L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572414449L + "'", long30 == 1644572414449L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
    }

    @Test
    public void test03725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03725");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField68 = chronology67.dayOfYear();
        org.joda.time.DurationField durationField69 = chronology67.minutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:14.654Z/2022-02-11T09:40:14.654Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:14.654Z/2022-02-11T09:40:14.654Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:14.654Z/2022-02-11T09:40:14.654Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572414654L + "'", long14 == 1644572414654L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572414654L + "'", long30 == 1644572414654L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(durationField69);
    }

    @Test
    public void test03726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03726");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Period period12 = mutableInterval5.toPeriod();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        mutableInterval15.setDurationAfterStart(0L);
        boolean boolean19 = mutableInterval15.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = mutableInterval22.toPeriod(periodType23);
        java.lang.Object obj25 = mutableInterval22.clone();
        org.joda.time.DateTime dateTime26 = mutableInterval22.getStart();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        mutableInterval45.setDurationAfterStart(0L);
        boolean boolean49 = mutableInterval45.equals((java.lang.Object) (-1));
        long long50 = mutableInterval45.getEndMillis();
        org.joda.time.DateTime dateTime51 = mutableInterval45.getEnd();
        boolean boolean52 = mutableInterval38.isAfter((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean53 = dateTime35.isAfter((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        boolean boolean60 = mutableInterval56.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadablePeriod readablePeriod61 = null;
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readablePeriod61, readableInstant62);
        long long64 = mutableInterval63.toDurationMillis();
        boolean boolean65 = mutableInterval59.isAfter((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.ReadableInstant readableInstant66 = null;
        boolean boolean67 = mutableInterval63.contains(readableInstant66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        boolean boolean74 = mutableInterval70.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.ReadablePeriod readablePeriod75 = null;
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readablePeriod75, readableInstant76);
        long long78 = mutableInterval77.toDurationMillis();
        boolean boolean79 = mutableInterval73.isAfter((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.ReadableInstant readableInstant80 = null;
        boolean boolean81 = mutableInterval77.contains(readableInstant80);
        boolean boolean82 = mutableInterval63.overlaps((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.Duration duration83 = mutableInterval77.toDuration();
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableDuration) duration83);
        boolean boolean85 = mutableInterval22.contains((org.joda.time.ReadableInstant) dateTime51);
        mutableInterval22.setStartMillis(1644572128269L);
        org.joda.time.DateTime dateTime88 = mutableInterval22.getEnd();
        boolean boolean89 = mutableInterval15.contains((org.joda.time.ReadableInstant) dateTime88);
        boolean boolean90 = mutableInterval5.contains((org.joda.time.ReadableInstant) dateTime88);
        long long91 = mutableInterval5.toDurationMillis();
        org.joda.time.DateTime dateTime92 = mutableInterval5.getStart();
        org.joda.time.DateTimeZone dateTimeZone93 = dateTime92.getZone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals(obj25.toString(), "2022-02-11T09:40:14.684Z/2022-02-11T09:40:14.684Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "2022-02-11T09:40:14.684Z/2022-02-11T09:40:14.684Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "2022-02-11T09:40:14.684Z/2022-02-11T09:40:14.684Z");
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572414684L + "'", long34 == 1644572414684L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1644572414684L + "'", long50 == 1644572414684L);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertNotNull(dateTime92);
        org.junit.Assert.assertNotNull(dateTimeZone93);
    }

    @Test
    public void test03727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03727");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone72 = chronology70.getZone();
        org.joda.time.Chronology chronology73 = chronology70.withUTC();
        mutableInterval2.setChronology(chronology73);
        org.joda.time.MutableInterval mutableInterval75 = mutableInterval2.copy();
        org.joda.time.Period period76 = mutableInterval75.toPeriod();
        org.joda.time.Chronology chronology77 = mutableInterval75.getChronology();
        org.joda.time.Period period78 = mutableInterval75.toPeriod();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:14.745Z/2022-02-11T09:40:14.745Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:14.745Z/2022-02-11T09:40:14.745Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:14.745Z/2022-02-11T09:40:14.745Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572414745L + "'", long18 == 1644572414745L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572414745L + "'", long34 == 1644572414745L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeZone72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(mutableInterval75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertNotNull(period78);
    }

    @Test
    public void test03728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03728");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        boolean boolean6 = period4.isSupported(durationFieldType5);
        boolean boolean8 = period4.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType10 = period4.getFieldType(0);
        org.joda.time.Period period11 = period4.toPeriod();
        int int12 = period11.size();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = mutableInterval15.toPeriod(periodType16);
        java.lang.Object obj18 = mutableInterval15.clone();
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval15.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = mutableInterval23.toPeriod(periodType24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.Period period33 = mutableInterval31.toPeriod();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = mutableInterval36.toPeriod(periodType37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = period38.isSupported(durationFieldType39);
        boolean boolean42 = period38.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType44 = period38.getFieldType(0);
        int int45 = period33.get(durationFieldType44);
        int int46 = period25.get(durationFieldType44);
        int int47 = period20.get(durationFieldType44);
        int int48 = period11.get(durationFieldType44);
        int int50 = period11.getValue(0);
        org.joda.time.MutablePeriod mutablePeriod51 = period11.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        mutableInterval54.setDurationAfterStart(0L);
        boolean boolean58 = mutableInterval54.equals((java.lang.Object) (-1));
        long long59 = mutableInterval54.getEndMillis();
        org.joda.time.DateTime dateTime60 = mutableInterval54.getEnd();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        boolean boolean67 = mutableInterval63.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        mutableInterval70.setDurationAfterStart(0L);
        boolean boolean74 = mutableInterval70.equals((java.lang.Object) (-1));
        long long75 = mutableInterval70.getEndMillis();
        org.joda.time.DateTime dateTime76 = mutableInterval70.getEnd();
        boolean boolean77 = mutableInterval63.isAfter((org.joda.time.ReadableInstant) dateTime76);
        boolean boolean78 = dateTime60.isAfter((org.joda.time.ReadableInstant) dateTime76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        mutableInterval81.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant84 = null;
        boolean boolean85 = mutableInterval81.contains(readableInstant84);
        long long86 = mutableInterval81.getEndMillis();
        org.joda.time.DateTime dateTime87 = mutableInterval81.getStart();
        boolean boolean88 = dateTime60.isAfter((org.joda.time.ReadableInstant) dateTime87);
        org.joda.time.DateTimeZone dateTimeZone89 = dateTime87.getZone();
        java.lang.String str90 = dateTime87.toString();
        org.joda.time.Chronology chronology91 = dateTime87.getChronology();
        org.joda.time.MutableInterval mutableInterval92 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period11, (org.joda.time.ReadableInstant) dateTime87);
        org.joda.time.Period period93 = period11.toPeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals(obj18.toString(), "2022-02-11T09:40:14.794Z/2022-02-11T09:40:14.794Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "2022-02-11T09:40:14.794Z/2022-02-11T09:40:14.794Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "2022-02-11T09:40:14.794Z/2022-02-11T09:40:14.794Z");
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1644572414794L + "'", long59 == 1644572414794L);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572414794L + "'", long75 == 1644572414794L);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1644572414794L + "'", long86 == 1644572414794L);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(dateTimeZone89);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "2022-02-11T09:40:14.794Z" + "'", str90, "2022-02-11T09:40:14.794Z");
        org.junit.Assert.assertNotNull(chronology91);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test03729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03729");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        org.joda.time.Chronology chronology13 = mutableInterval2.getChronology();
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval();
        boolean boolean15 = mutableInterval14.isAfterNow();
        boolean boolean16 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Duration duration17 = mutableInterval14.toDuration();
        org.joda.time.Chronology chronology18 = mutableInterval14.getChronology();
        long long22 = chronology18.add(1644572139181L, 1644572134302L, (int) (byte) 10);
        org.joda.time.DateTimeField dateTimeField23 = chronology18.secondOfMinute();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(chronology13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(chronology18);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 18090293482201L + "'", long22 == 18090293482201L);
        org.junit.Assert.assertNotNull(dateTimeField23);
    }

    @Test
    public void test03730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03730");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval4 = mutableInterval2.toInterval();
        mutableInterval2.setStartMillis(1644572130296L);
        org.joda.time.Chronology chronology7 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField8 = chronology7.clockhourOfDay();
        org.joda.time.ReadablePartial readablePartial9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray11 = chronology7.get(readablePartial9, 1644572160611L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(dateTimeField8);
    }

    @Test
    public void test03731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03731");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        java.lang.Object obj9 = mutableInterval2.clone();
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval();
        org.joda.time.DateTime dateTime11 = mutableInterval10.getEnd();
        boolean boolean12 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.Period period13 = mutableInterval2.toPeriod();
        org.joda.time.Interval interval14 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        boolean boolean21 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        long long25 = mutableInterval24.toDurationMillis();
        boolean boolean26 = mutableInterval20.isAfter((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        boolean boolean28 = mutableInterval24.contains(readableInstant27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadablePeriod readablePeriod36 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readablePeriod36, readableInstant37);
        long long39 = mutableInterval38.toDurationMillis();
        boolean boolean40 = mutableInterval34.isAfter((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        boolean boolean42 = mutableInterval38.contains(readableInstant41);
        boolean boolean43 = mutableInterval24.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.Duration duration44 = mutableInterval38.toDuration();
        boolean boolean46 = duration44.equals((java.lang.Object) 'a');
        long long47 = duration44.getMillis();
        long long48 = duration44.getMillis();
        org.joda.time.Duration duration49 = duration44.toDuration();
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration49);
        mutableInterval2.setDurationBeforeEnd(1644572197994L);
        org.joda.time.Interval interval53 = mutableInterval2.toInterval();
        mutableInterval2.setStartMillis(1644572406440L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572414847L + "'", long7 == 1644572414847L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:14.847Z/2022-02-11T09:40:14.847Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:14.847Z/2022-02-11T09:40:14.847Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:14.847Z/2022-02-11T09:40:14.847Z");
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(interval53);
    }

    @Test
    public void test03732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03732");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.secondOfDay();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
    }

    @Test
    public void test03733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03733");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        mutableInterval9.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean17 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Interval interval18 = mutableInterval9.toInterval();
        boolean boolean19 = mutableInterval9.isAfterNow();
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval9.setStartMillis(1644572292345L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03734");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInterval readableInterval11 = null;
        boolean boolean12 = mutableInterval2.isAfter(readableInterval11);
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readablePeriod13, readableInstant14);
        long long16 = mutableInterval15.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        boolean boolean28 = mutableInterval24.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.Period period29 = mutableInterval27.toPeriod();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = mutableInterval32.toPeriod(periodType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = period34.isSupported(durationFieldType35);
        boolean boolean38 = period34.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType40 = period34.getFieldType(0);
        int int41 = period29.get(durationFieldType40);
        int int42 = period21.get(durationFieldType40);
        mutableInterval15.setPeriodAfterStart((org.joda.time.ReadablePeriod) period21);
        org.joda.time.DateTime dateTime44 = mutableInterval15.getEnd();
        boolean boolean45 = mutableInterval15.isBeforeNow();
        org.joda.time.DateTime dateTime46 = mutableInterval15.getEnd();
        boolean boolean47 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.Chronology chronology48 = mutableInterval2.getChronology();
        org.joda.time.MutableInterval mutableInterval49 = mutableInterval2.copy();
        org.joda.time.DateTime dateTime50 = mutableInterval49.getStart();
        mutableInterval49.setInterval(1644572143397L, 1644572164749L);
        boolean boolean55 = mutableInterval49.equals((java.lang.Object) 1644572219985L);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(chronology48);
        org.junit.Assert.assertNotNull(mutableInterval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test03735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03735");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval8 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        java.lang.Object obj14 = mutableInterval11.clone();
        org.joda.time.DateTime dateTime15 = mutableInterval11.getStart();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        mutableInterval18.setDurationAfterStart(0L);
        boolean boolean22 = mutableInterval18.equals((java.lang.Object) (-1));
        long long23 = mutableInterval18.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval18.getEnd();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        mutableInterval34.setDurationAfterStart(0L);
        boolean boolean38 = mutableInterval34.equals((java.lang.Object) (-1));
        long long39 = mutableInterval34.getEndMillis();
        org.joda.time.DateTime dateTime40 = mutableInterval34.getEnd();
        boolean boolean41 = mutableInterval27.isAfter((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean42 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = mutableInterval11.contains((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Chronology chronology75 = dateTime40.getChronology();
        org.joda.time.Chronology chronology76 = dateTime40.getChronology();
        org.joda.time.DurationField durationField77 = chronology76.hours();
        org.joda.time.DateTimeField dateTimeField78 = chronology76.monthOfYear();
        org.joda.time.DateTimeField dateTimeField79 = chronology76.secondOfDay();
        mutableInterval2.setChronology(chronology76);
        org.joda.time.Duration duration81 = mutableInterval2.toDuration();
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval2.setEndMillis(1644572331116L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572414982L + "'", long5 == 1644572414982L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mutableInterval8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals(obj14.toString(), "2022-02-11T09:40:14.982Z/2022-02-11T09:40:14.982Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "2022-02-11T09:40:14.982Z/2022-02-11T09:40:14.982Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "2022-02-11T09:40:14.982Z/2022-02-11T09:40:14.982Z");
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572414982L + "'", long23 == 1644572414982L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1644572414982L + "'", long39 == 1644572414982L);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(duration81);
    }

    @Test
    public void test03736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03736");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.millisOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.dayOfMonth();
        long long79 = chronology66.getDateTimeMillis(1644572148756L, (int) (short) 10, 8, (int) '4', 10);
        org.joda.time.DateTimeField dateTimeField80 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField81 = chronology66.dayOfYear();
        org.joda.time.DateTimeField dateTimeField82 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField83 = chronology66.dayOfYear();
        org.joda.time.DateTimeField dateTimeField84 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField85 = chronology66.dayOfYear();
        java.lang.Class<?> wildcardClass86 = chronology66.getClass();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:15.025Z/2022-02-11T09:40:15.025Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:15.025Z/2022-02-11T09:40:15.025Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:15.025Z/2022-02-11T09:40:15.025Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572415025L + "'", long14 == 1644572415025L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572415025L + "'", long30 == 1644572415025L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1644574132010L + "'", long79 == 1644574132010L);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTimeField81);
        org.junit.Assert.assertNotNull(dateTimeField82);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test03737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03737");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        long long16 = mutableInterval10.toDurationMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval10.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        mutableInterval20.setStartMillis(1644572127942L);
        mutableInterval20.setStartMillis(1644572127679L);
        mutableInterval20.setDurationAfterStart(1644572124037L);
        org.joda.time.Period period29 = mutableInterval20.toPeriod();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = mutableInterval32.toPeriod(periodType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = period34.isSupported(durationFieldType35);
        boolean boolean38 = period34.equals((java.lang.Object) "hi!");
        int int39 = period34.size();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        boolean boolean46 = mutableInterval42.overlaps((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.Period period47 = mutableInterval45.toPeriod();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.Period period52 = mutableInterval50.toPeriod(periodType51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        boolean boolean54 = period52.isSupported(durationFieldType53);
        boolean boolean56 = period52.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType58 = period52.getFieldType(0);
        int int59 = period47.get(durationFieldType58);
        int int60 = period34.get(durationFieldType58);
        boolean boolean61 = period29.isSupported(durationFieldType58);
        int int62 = period29.size();
        org.joda.time.PeriodType periodType63 = period29.getPeriodType();
        org.joda.time.Period period64 = mutableInterval10.toPeriod(periodType63);
        org.joda.time.Duration duration65 = mutableInterval10.toDuration();
        java.lang.String str66 = mutableInterval10.toString();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572415059L + "'", long7 == 1644572415059L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8 + "'", int62 == 8);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration65);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "2022-02-11T09:40:15.059Z/2022-02-11T09:40:15.059Z" + "'", str66, "2022-02-11T09:40:15.059Z/2022-02-11T09:40:15.059Z");
    }

    @Test
    public void test03738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03738");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology2 = mutableInterval1.getChronology();
        long long3 = mutableInterval1.toDurationMillis();
        boolean boolean4 = mutableInterval1.containsNow();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(chronology2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test03739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03739");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        long long2 = mutableInterval1.getEndMillis();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        mutableInterval5.setStartMillis(1644572127942L);
        mutableInterval5.setStartMillis(1644572127679L);
        mutableInterval5.setDurationAfterStart(1644572124037L);
        org.joda.time.Period period14 = mutableInterval5.toPeriod();
        org.joda.time.Duration duration15 = mutableInterval5.toDuration();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        boolean boolean32 = mutableInterval30.isBeforeNow();
        org.joda.time.Interval interval33 = mutableInterval30.toInterval();
        org.joda.time.MutableInterval mutableInterval34 = mutableInterval30.toMutableInterval();
        org.joda.time.Duration duration35 = mutableInterval34.toDuration();
        java.lang.String str36 = duration35.toString();
        int int37 = duration15.compareTo((org.joda.time.ReadableDuration) duration35);
        mutableInterval1.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period39 = mutableInterval1.toPeriod();
        boolean boolean41 = mutableInterval1.isBefore(1644572161767L);
        org.joda.time.Interval interval42 = mutableInterval1.toInterval();
        org.joda.time.Period period43 = mutableInterval1.toPeriod();
        org.joda.time.ReadableDuration readableDuration44 = null;
        mutableInterval1.setDurationBeforeEnd(readableDuration44);
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1644572134356L + "'", long2 == 1644572134356L);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(mutableInterval34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT0S" + "'", str36, "PT0S");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(period43);
    }

    @Test
    public void test03740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03740");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.weekyears();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.secondOfMinute();
        org.joda.time.Chronology chronology14 = chronology8.withUTC();
        org.joda.time.DateTimeField dateTimeField15 = chronology14.millisOfDay();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        mutableInterval18.setDurationAfterStart(0L);
        boolean boolean22 = mutableInterval18.equals((java.lang.Object) (-1));
        long long23 = mutableInterval18.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval18.getEnd();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = mutableInterval27.toPeriod(periodType28);
        long long30 = mutableInterval27.getEndMillis();
        boolean boolean32 = mutableInterval27.equals((java.lang.Object) ' ');
        long long33 = mutableInterval27.getStartMillis();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        mutableInterval36.setDurationAfterStart(0L);
        boolean boolean40 = mutableInterval36.equals((java.lang.Object) (-1));
        long long41 = mutableInterval36.getEndMillis();
        org.joda.time.DateTime dateTime42 = mutableInterval36.getEnd();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        mutableInterval52.setDurationAfterStart(0L);
        boolean boolean56 = mutableInterval52.equals((java.lang.Object) (-1));
        long long57 = mutableInterval52.getEndMillis();
        org.joda.time.DateTime dateTime58 = mutableInterval52.getEnd();
        boolean boolean59 = mutableInterval45.isAfter((org.joda.time.ReadableInstant) dateTime58);
        boolean boolean60 = dateTime42.isAfter((org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        boolean boolean67 = mutableInterval63.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadablePeriod readablePeriod68 = null;
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readablePeriod68, readableInstant69);
        long long71 = mutableInterval70.toDurationMillis();
        boolean boolean72 = mutableInterval66.isAfter((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        boolean boolean74 = mutableInterval70.contains(readableInstant73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        boolean boolean81 = mutableInterval77.overlaps((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.ReadablePeriod readablePeriod82 = null;
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readablePeriod82, readableInstant83);
        long long85 = mutableInterval84.toDurationMillis();
        boolean boolean86 = mutableInterval80.isAfter((org.joda.time.ReadableInterval) mutableInterval84);
        org.joda.time.ReadableInstant readableInstant87 = null;
        boolean boolean88 = mutableInterval84.contains(readableInstant87);
        boolean boolean89 = mutableInterval70.overlaps((org.joda.time.ReadableInterval) mutableInterval84);
        org.joda.time.Duration duration90 = mutableInterval84.toDuration();
        org.joda.time.MutableInterval mutableInterval91 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime58, (org.joda.time.ReadableDuration) duration90);
        mutableInterval27.setStart((org.joda.time.ReadableInstant) dateTime58);
        int int93 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.DateTimeZone dateTimeZone94 = dateTime24.getZone();
        org.joda.time.Chronology chronology95 = chronology14.withZone(dateTimeZone94);
        org.joda.time.DateTimeField dateTimeField96 = chronology95.dayOfYear();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(chronology14);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572415181L + "'", long23 == 1644572415181L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(period29);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572415181L + "'", long30 == 1644572415181L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1644572415181L + "'", long33 == 1644572415181L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572415181L + "'", long41 == 1644572415181L);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1644572415181L + "'", long57 == 1644572415181L);
        org.junit.Assert.assertNotNull(dateTime58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(dateTimeZone94);
        org.junit.Assert.assertNotNull(chronology95);
        org.junit.Assert.assertNotNull(dateTimeField96);
    }

    @Test
    public void test03741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03741");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.minutes();
        org.joda.time.DurationField durationField11 = chronology8.seconds();
        long long19 = chronology8.getDateTimeMillis(1, 8, 8, 8, (int) '#', 0, (int) (short) 0);
        org.joda.time.DateTimeField dateTimeField20 = chronology8.hourOfDay();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(durationField11);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-62116644300000L) + "'", long19 == (-62116644300000L));
        org.junit.Assert.assertNotNull(dateTimeField20);
    }

    @Test
    public void test03742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03742");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.Period period14 = mutableInterval12.toPeriod();
        org.joda.time.Duration duration15 = mutableInterval12.toDuration();
        mutableInterval2.setDurationAfterStart((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Chronology chronology17 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField18 = chronology17.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField19 = chronology17.weekyear();
        org.joda.time.DateTimeZone dateTimeZone20 = chronology17.getZone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertNotNull(dateTimeField18);
        org.junit.Assert.assertNotNull(dateTimeField19);
        org.junit.Assert.assertNotNull(dateTimeZone20);
    }

    @Test
    public void test03743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03743");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.monthOfYear();
        long long74 = chronology66.getDateTimeMillis(1644572130375L, 0, (int) (short) 0, 1, (int) (short) 100);
        org.joda.time.DurationField durationField75 = chronology66.months();
        org.joda.time.DateTimeField dateTimeField76 = chronology66.dayOfWeek();
        java.lang.String str77 = chronology66.toString();
        org.joda.time.DurationField durationField78 = chronology66.years();
        org.joda.time.DurationField durationField79 = chronology66.seconds();
        org.joda.time.DurationField durationField80 = chronology66.days();
        org.joda.time.ReadablePartial readablePartial81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = chronology66.get(readablePartial81, 1644572200253L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:15.376Z/2022-02-11T09:40:15.376Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:15.376Z/2022-02-11T09:40:15.376Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:15.376Z/2022-02-11T09:40:15.376Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572415376L + "'", long14 == 1644572415376L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572415376L + "'", long30 == 1644572415376L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1644537601100L + "'", long74 == 1644537601100L);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str77, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(durationField79);
        org.junit.Assert.assertNotNull(durationField80);
    }

    @Test
    public void test03744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03744");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.contains(readableInstant5);
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        long long16 = mutableInterval15.getStartMillis();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        boolean boolean24 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = mutableInterval27.toPeriod(periodType28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period29, readableInstant30);
        long long32 = mutableInterval31.getStartMillis();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        boolean boolean40 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        boolean boolean41 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        boolean boolean42 = mutableInterval15.containsNow();
        boolean boolean43 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        long long44 = mutableInterval15.getStartMillis();
        boolean boolean46 = mutableInterval15.equals((java.lang.Object) 1644572198711L);
        mutableInterval15.setDurationAfterStart(1644572284930L);
        org.joda.time.DateTime dateTime49 = mutableInterval15.getStart();
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval15.setEndMillis(1644572409570L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572415399L + "'", long7 == 1644572415399L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572415399L + "'", long16 == 1644572415399L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(period29);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572415399L + "'", long32 == 1644572415399L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572415399L + "'", long44 == 1644572415399L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(dateTime49);
    }

    @Test
    public void test03745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03745");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        long long8 = mutableInterval2.getStartMillis();
        java.lang.Object obj9 = mutableInterval2.clone();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = mutableInterval12.toPeriod(periodType13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period14, readableInstant15);
        long long17 = mutableInterval16.getStartMillis();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        boolean boolean25 = mutableInterval16.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.Period period33 = mutableInterval31.toPeriod();
        org.joda.time.Duration duration34 = mutableInterval31.toDuration();
        mutableInterval20.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration36 = duration34.toDuration();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = mutableInterval39.toPeriod(periodType40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period41, readableInstant42);
        mutableInterval43.setInterval(1644572129143L, 1644572133904L);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        boolean boolean53 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadablePeriod readablePeriod54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readablePeriod54, readableInstant55);
        long long57 = mutableInterval56.toDurationMillis();
        boolean boolean58 = mutableInterval52.isAfter((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        java.lang.String str63 = mutableInterval52.toString();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        mutableInterval66.setDurationAfterStart(0L);
        boolean boolean70 = mutableInterval66.equals((java.lang.Object) (-1));
        long long71 = mutableInterval66.getEndMillis();
        org.joda.time.DateTime dateTime72 = mutableInterval66.getEnd();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        boolean boolean79 = mutableInterval75.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.ReadableDuration readableDuration81 = null;
        org.joda.time.MutableInterval mutableInterval82 = new org.joda.time.MutableInterval(readableInstant80, readableDuration81);
        mutableInterval82.setDurationAfterStart(0L);
        boolean boolean86 = mutableInterval82.equals((java.lang.Object) (-1));
        long long87 = mutableInterval82.getEndMillis();
        org.joda.time.DateTime dateTime88 = mutableInterval82.getEnd();
        boolean boolean89 = mutableInterval75.isAfter((org.joda.time.ReadableInstant) dateTime88);
        boolean boolean90 = dateTime72.isAfter((org.joda.time.ReadableInstant) dateTime88);
        boolean boolean91 = mutableInterval52.contains((org.joda.time.ReadableInstant) dateTime72);
        boolean boolean92 = mutableInterval43.isBefore((org.joda.time.ReadableInterval) mutableInterval52);
        java.lang.String str93 = mutableInterval52.toString();
        org.joda.time.Duration duration94 = mutableInterval52.toDuration();
        boolean boolean95 = duration36.isEqual((org.joda.time.ReadableDuration) duration94);
        org.joda.time.Period period96 = duration36.toPeriod();
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration36);
        long long98 = mutableInterval2.getStartMillis();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572415416L + "'", long5 == 1644572415416L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572415416L + "'", long8 == 1644572415416L);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:15.416Z/2022-02-11T09:40:15.416Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:15.416Z/2022-02-11T09:40:15.416Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:15.416Z/2022-02-11T09:40:15.416Z");
        org.junit.Assert.assertNotNull(period14);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1644572415416L + "'", long17 == 1644572415416L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "2022-02-11T09:40:15.416Z/2022-02-11T09:40:15.416Z" + "'", str63, "2022-02-11T09:40:15.416Z/2022-02-11T09:40:15.416Z");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572415416L + "'", long71 == 1644572415416L);
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long87 + "' != '" + 1644572415416L + "'", long87 == 1644572415416L);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "2022-02-11T09:40:15.416Z/2022-02-11T09:40:15.416Z" + "'", str93, "2022-02-11T09:40:15.416Z/2022-02-11T09:40:15.416Z");
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(period96);
// flaky:         org.junit.Assert.assertTrue("'" + long98 + "' != '" + 1644572415416L + "'", long98 == 1644572415416L);
    }

    @Test
    public void test03746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03746");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeZone dateTimeZone67 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.hourOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.weekyear();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:15.486Z/2022-02-11T09:40:15.486Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:15.486Z/2022-02-11T09:40:15.486Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:15.486Z/2022-02-11T09:40:15.486Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572415486L + "'", long14 == 1644572415486L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572415486L + "'", long30 == 1644572415486L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeZone67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
    }

    @Test
    public void test03747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03747");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        org.joda.time.Period period14 = mutableInterval9.toPeriod();
        org.joda.time.Interval interval15 = mutableInterval9.toInterval();
        org.joda.time.MutableInterval mutableInterval17 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:49.835Z/2022-02-11T09:36:49.835Z");
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadablePeriod readablePeriod25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readablePeriod25, readableInstant26);
        long long28 = mutableInterval27.toDurationMillis();
        boolean boolean29 = mutableInterval23.isAfter((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        boolean boolean34 = mutableInterval32.isBeforeNow();
        org.joda.time.Interval interval35 = mutableInterval32.toInterval();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = mutableInterval38.toPeriod(periodType39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period40, readableInstant41);
        long long43 = mutableInterval42.getStartMillis();
        boolean boolean44 = interval35.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.MutableInterval mutableInterval45 = mutableInterval42.copy();
        org.joda.time.Duration duration46 = mutableInterval45.toDuration();
        mutableInterval17.setDurationAfterStart((org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = interval15.isBefore((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.Period period49 = mutableInterval17.toPeriod();
        mutableInterval17.setDurationAfterStart(1644572157569L);
        java.lang.Class<?> wildcardClass52 = mutableInterval17.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(mutableInterval17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(period40);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1644572415509L + "'", long43 == 1644572415509L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(mutableInterval45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test03748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03748");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        java.lang.String str70 = chronology67.toString();
        org.joda.time.DurationField durationField71 = chronology67.halfdays();
        org.joda.time.DateTimeField dateTimeField72 = chronology67.monthOfYear();
        org.joda.time.DateTimeField dateTimeField73 = chronology67.hourOfDay();
        org.joda.time.DurationField durationField74 = chronology67.hours();
        org.joda.time.DateTimeField dateTimeField75 = chronology67.millisOfDay();
        java.lang.Class<?> wildcardClass76 = dateTimeField75.getClass();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:15.630Z/2022-02-11T09:40:15.630Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:15.630Z/2022-02-11T09:40:15.630Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:15.630Z/2022-02-11T09:40:15.630Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572415630L + "'", long14 == 1644572415630L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572415630L + "'", long30 == 1644572415630L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str70, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test03749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03749");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.contains(readableInstant5);
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        boolean boolean43 = mutableInterval39.contains(readableInstant42);
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getStart();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        mutableInterval48.setDurationAfterStart(0L);
        boolean boolean52 = mutableInterval48.equals((java.lang.Object) (-1));
        long long53 = mutableInterval48.getEndMillis();
        org.joda.time.DateTime dateTime54 = mutableInterval48.getEnd();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        mutableInterval64.setDurationAfterStart(0L);
        boolean boolean68 = mutableInterval64.equals((java.lang.Object) (-1));
        long long69 = mutableInterval64.getEndMillis();
        org.joda.time.DateTime dateTime70 = mutableInterval64.getEnd();
        boolean boolean71 = mutableInterval57.isAfter((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean72 = dateTime54.isAfter((org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableInstant) dateTime70);
        boolean boolean74 = mutableInterval36.contains((org.joda.time.ReadableInterval) mutableInterval73);
        long long75 = mutableInterval36.getEndMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572415657L + "'", long7 == 1644572415657L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572415657L + "'", long16 == 1644572415657L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572415657L + "'", long32 == 1644572415657L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572415657L + "'", long44 == 1644572415657L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1644572415657L + "'", long53 == 1644572415657L);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1644572415657L + "'", long69 == 1644572415657L);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572415657L + "'", long75 == 1644572415657L);
    }

    @Test
    public void test03750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03750");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        java.lang.String str67 = dateTime31.toString();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.PeriodType periodType71 = null;
        org.joda.time.Period period72 = mutableInterval70.toPeriod(periodType71);
        java.lang.Object obj73 = mutableInterval70.clone();
        org.joda.time.DateTime dateTime74 = mutableInterval70.getStart();
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.MutableInterval mutableInterval76 = mutableInterval75.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval77 = mutableInterval75.toMutableInterval();
        boolean boolean78 = mutableInterval77.isBeforeNow();
        org.joda.time.Period period79 = mutableInterval77.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod80 = period79.toMutablePeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:15.678Z/2022-02-11T09:40:15.678Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:15.678Z/2022-02-11T09:40:15.678Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:15.678Z/2022-02-11T09:40:15.678Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572415678L + "'", long14 == 1644572415678L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572415678L + "'", long30 == 1644572415678L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "2022-02-11T09:40:15.678Z" + "'", str67, "2022-02-11T09:40:15.678Z");
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals(obj73.toString(), "2022-02-11T09:40:15.678Z/2022-02-11T09:40:15.678Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "2022-02-11T09:40:15.678Z/2022-02-11T09:40:15.678Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "2022-02-11T09:40:15.678Z/2022-02-11T09:40:15.678Z");
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(mutableInterval76);
        org.junit.Assert.assertNotNull(mutableInterval77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
    }

    @Test
    public void test03751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03751");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.minutes();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.dayOfYear();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.year();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField14 = chronology8.era();
        org.joda.time.DurationField durationField15 = chronology8.millis();
        org.joda.time.ReadablePartial readablePartial16 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray18 = chronology8.get(readablePartial16, 1644572148988L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(dateTimeField14);
        org.junit.Assert.assertNotNull(durationField15);
    }

    @Test
    public void test03752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03752");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        boolean boolean25 = mutableInterval21.contains(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        long long36 = mutableInterval35.toDurationMillis();
        boolean boolean37 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.contains(readableInstant38);
        boolean boolean40 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        boolean boolean55 = mutableInterval21.isBefore((org.joda.time.ReadableInterval) mutableInterval50);
        boolean boolean56 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.Chronology chronology57 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField58 = chronology57.weekyearOfCentury();
        long long64 = chronology57.getDateTimeMillis(1644572176981L, 1, (int) (short) 1, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            long long72 = chronology57.getDateTimeMillis((int) (short) 0, (int) (byte) 1, (int) (short) -1, 0, (int) '4', (int) (byte) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for dayOfMonth must be in the range [1,31]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertNotNull(dateTimeField58);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1644541260001L + "'", long64 == 1644541260001L);
    }

    @Test
    public void test03753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03753");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.MutableInterval mutableInterval5 = mutableInterval2.toMutableInterval();
        mutableInterval2.setDurationAfterStart(1644572138427L);
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readablePeriod16, readableInstant17);
        long long19 = mutableInterval18.toDurationMillis();
        boolean boolean20 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        boolean boolean25 = mutableInterval23.isBeforeNow();
        org.joda.time.DateTime dateTime26 = mutableInterval23.getEnd();
        boolean boolean27 = mutableInterval2.isAfter((org.joda.time.ReadableInstant) dateTime26);
        java.lang.String str28 = dateTime26.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "2022-02-11T09:40:15.816Z" + "'", str28, "2022-02-11T09:40:15.816Z");
    }

    @Test
    public void test03754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03754");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Interval interval31 = mutableInterval2.toInterval();
        org.joda.time.Chronology chronology32 = mutableInterval2.getChronology();
        org.joda.time.DurationField durationField33 = chronology32.eras();
        org.joda.time.DateTimeField dateTimeField34 = chronology32.dayOfYear();
        org.joda.time.DateTimeField dateTimeField35 = chronology32.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField36 = chronology32.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField37 = chronology32.monthOfYear();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(durationField33);
        org.junit.Assert.assertNotNull(dateTimeField34);
        org.junit.Assert.assertNotNull(dateTimeField35);
        org.junit.Assert.assertNotNull(dateTimeField36);
        org.junit.Assert.assertNotNull(dateTimeField37);
    }

    @Test
    public void test03755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03755");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.halfdayOfDay();
        org.joda.time.DurationField durationField12 = chronology8.centuries();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.weekyear();
        org.joda.time.DateTimeField dateTimeField14 = chronology8.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField15 = chronology8.yearOfCentury();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(dateTimeField14);
        org.junit.Assert.assertNotNull(dateTimeField15);
    }

    @Test
    public void test03756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03756");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval1 = new org.joda.time.MutableInterval((java.lang.Object) 1644572356170L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03757");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.DateTime dateTime66 = mutableInterval2.getEnd();
        org.joda.time.DateTimeZone dateTimeZone67 = dateTime66.getZone();
        org.joda.time.Chronology chronology68 = dateTime66.getChronology();
        org.joda.time.Chronology chronology69 = dateTime66.getChronology();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        mutableInterval72.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant75 = null;
        boolean boolean76 = mutableInterval72.contains(readableInstant75);
        long long77 = mutableInterval72.getEndMillis();
        org.joda.time.DateTime dateTime78 = mutableInterval72.getStart();
        long long79 = dateTime78.getMillis();
        boolean boolean80 = dateTime66.isEqual((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.DateTimeZone dateTimeZone81 = dateTime66.getZone();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:15.906Z/2022-02-11T09:40:15.906Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:15.906Z/2022-02-11T09:40:15.906Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:15.906Z/2022-02-11T09:40:15.906Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572415906L + "'", long14 == 1644572415906L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572415906L + "'", long30 == 1644572415906L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertNotNull(dateTimeZone67);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1644572415906L + "'", long77 == 1644572415906L);
        org.junit.Assert.assertNotNull(dateTime78);
// flaky:         org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1644572415906L + "'", long79 == 1644572415906L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(dateTimeZone81);
    }

    @Test
    public void test03758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03758");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone72 = chronology70.getZone();
        org.joda.time.Chronology chronology73 = chronology70.withUTC();
        mutableInterval2.setChronology(chronology73);
        org.joda.time.DurationField durationField75 = chronology73.halfdays();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField77 = chronology73.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField78 = chronology73.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField79 = chronology73.millisOfSecond();
        org.joda.time.DurationField durationField80 = chronology73.seconds();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:15.936Z/2022-02-11T09:40:15.936Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:15.936Z/2022-02-11T09:40:15.936Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:15.936Z/2022-02-11T09:40:15.936Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572415936L + "'", long18 == 1644572415936L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572415936L + "'", long34 == 1644572415936L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeZone72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(durationField80);
    }

    @Test
    public void test03759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03759");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        org.joda.time.Chronology chronology13 = mutableInterval2.getChronology();
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval();
        boolean boolean15 = mutableInterval14.isAfterNow();
        boolean boolean16 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.Object obj17 = mutableInterval2.clone();
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval2.setInterval(1644572304745L, 1644572218900L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(chronology13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
    }

    @Test
    public void test03760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03760");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.contains(readableInstant5);
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        long long16 = mutableInterval15.getStartMillis();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        boolean boolean24 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = mutableInterval27.toPeriod(periodType28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period29, readableInstant30);
        long long32 = mutableInterval31.getStartMillis();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        boolean boolean40 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        boolean boolean41 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        boolean boolean42 = mutableInterval15.containsNow();
        boolean boolean43 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        long long44 = mutableInterval2.getStartMillis();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        boolean boolean60 = mutableInterval54.isAfter(1644572126418L);
        org.joda.time.MutableInterval mutableInterval61 = mutableInterval54.copy();
        mutableInterval54.setDurationAfterStart(1644572132627L);
        org.joda.time.MutableInterval mutableInterval64 = mutableInterval54.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.ReadableDuration readableDuration78 = null;
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(readableInstant77, readableDuration78);
        boolean boolean80 = mutableInterval70.overlaps((org.joda.time.ReadableInterval) mutableInterval79);
        boolean boolean81 = mutableInterval79.isBeforeNow();
        org.joda.time.Interval interval82 = mutableInterval79.toInterval();
        org.joda.time.MutableInterval mutableInterval83 = mutableInterval79.toMutableInterval();
        org.joda.time.Duration duration84 = mutableInterval83.toDuration();
        java.lang.String str85 = duration84.toString();
        boolean boolean86 = mutableInterval54.equals((java.lang.Object) duration84);
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration84);
        java.lang.String str88 = duration84.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572415991L + "'", long7 == 1644572415991L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572415991L + "'", long16 == 1644572415991L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(period29);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572415991L + "'", long32 == 1644572415991L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572415991L + "'", long44 == 1644572415991L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(mutableInterval61);
        org.junit.Assert.assertNotNull(mutableInterval64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertNotNull(mutableInterval83);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PT0S" + "'", str85, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "PT0S" + "'", str88, "PT0S");
    }

    @Test
    public void test03761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03761");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfYear();
        long long75 = chronology68.add(1644572130394L, 1644572130656L, 1);
        org.joda.time.DateTimeField dateTimeField76 = chronology68.yearOfEra();
        org.joda.time.DurationField durationField77 = chronology68.months();
        org.joda.time.DateTimeField dateTimeField78 = chronology68.weekyearOfCentury();
        org.joda.time.DurationField durationField79 = chronology68.seconds();
        org.joda.time.DurationField durationField80 = chronology68.years();
        org.joda.time.ReadablePartial readablePartial81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = chronology68.get(readablePartial81, 1644572223024L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:16.018Z/2022-02-11T09:40:16.018Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:16.018Z/2022-02-11T09:40:16.018Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:16.018Z/2022-02-11T09:40:16.018Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572416018L + "'", long16 == 1644572416018L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572416018L + "'", long32 == 1644572416018L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 3289144261050L + "'", long75 == 3289144261050L);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(durationField79);
        org.junit.Assert.assertNotNull(durationField80);
    }

    @Test
    public void test03762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03762");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.hours();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.monthOfYear();
        long long73 = chronology67.add(1644572150812L, 1644572157013L, (int) (short) 100);
        org.joda.time.DurationField durationField74 = chronology67.weeks();
        org.joda.time.DateTimeField dateTimeField75 = chronology67.minuteOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:16.040Z/2022-02-11T09:40:16.040Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:16.040Z/2022-02-11T09:40:16.040Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:16.040Z/2022-02-11T09:40:16.040Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572416040L + "'", long14 == 1644572416040L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572416040L + "'", long30 == 1644572416040L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 166101787852112L + "'", long73 == 166101787852112L);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03763");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        java.lang.Object obj14 = mutableInterval11.clone();
        org.joda.time.DateTime dateTime15 = mutableInterval11.getStart();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        mutableInterval18.setDurationAfterStart(0L);
        boolean boolean22 = mutableInterval18.equals((java.lang.Object) (-1));
        long long23 = mutableInterval18.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval18.getEnd();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        mutableInterval34.setDurationAfterStart(0L);
        boolean boolean38 = mutableInterval34.equals((java.lang.Object) (-1));
        long long39 = mutableInterval34.getEndMillis();
        org.joda.time.DateTime dateTime40 = mutableInterval34.getEnd();
        boolean boolean41 = mutableInterval27.isAfter((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean42 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = mutableInterval11.contains((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Chronology chronology75 = dateTime40.getChronology();
        org.joda.time.DateTimeField dateTimeField76 = chronology75.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology75);
        org.joda.time.DateTime dateTime78 = mutableInterval77.getEnd();
        org.joda.time.ReadablePeriod readablePeriod79 = null;
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readablePeriod79, readableInstant80);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        org.joda.time.PeriodType periodType85 = null;
        org.joda.time.Period period86 = mutableInterval84.toPeriod(periodType85);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period86, readableInstant87);
        boolean boolean89 = mutableInterval81.isAfter((org.joda.time.ReadableInterval) mutableInterval88);
        boolean boolean90 = mutableInterval81.isBeforeNow();
        boolean boolean91 = dateTime78.equals((java.lang.Object) mutableInterval81);
        org.joda.time.DateTime dateTime92 = mutableInterval81.getStart();
        org.joda.time.MutableInterval mutableInterval93 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime6, (org.joda.time.ReadableInstant) dateTime92);
        java.lang.String str94 = dateTime6.toString();
        boolean boolean96 = dateTime6.equals((java.lang.Object) 1644572148624L);
        org.joda.time.Chronology chronology97 = dateTime6.getChronology();
        org.joda.time.DateTimeField dateTimeField98 = chronology97.millisOfDay();
        org.joda.time.DateTimeField dateTimeField99 = chronology97.weekyearOfCentury();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:16.092Z/2022-02-11T09:40:16.092Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:16.092Z/2022-02-11T09:40:16.092Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:16.092Z/2022-02-11T09:40:16.092Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals(obj14.toString(), "2022-02-11T09:40:16.092Z/2022-02-11T09:40:16.092Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "2022-02-11T09:40:16.092Z/2022-02-11T09:40:16.092Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "2022-02-11T09:40:16.092Z/2022-02-11T09:40:16.092Z");
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572416092L + "'", long23 == 1644572416092L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1644572416092L + "'", long39 == 1644572416092L);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(dateTime92);
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "2022-02-11T09:40:16.092Z" + "'", str94, "2022-02-11T09:40:16.092Z");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(chronology97);
        org.junit.Assert.assertNotNull(dateTimeField98);
        org.junit.Assert.assertNotNull(dateTimeField99);
    }

    @Test
    public void test03764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03764");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone72 = chronology70.getZone();
        org.joda.time.Chronology chronology73 = chronology70.withUTC();
        mutableInterval2.setChronology(chronology73);
        org.joda.time.DurationField durationField75 = chronology73.halfdays();
        org.joda.time.DateTimeZone dateTimeZone76 = chronology73.getZone();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:16.126Z/2022-02-11T09:40:16.126Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:16.126Z/2022-02-11T09:40:16.126Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:16.126Z/2022-02-11T09:40:16.126Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572416126L + "'", long18 == 1644572416126L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572416126L + "'", long34 == 1644572416126L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeZone72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(dateTimeZone76);
    }

    @Test
    public void test03765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03765");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.yearOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.clockhourOfHalfday();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(1644572127385L, 1644572137028L, chronology68);
        org.joda.time.DurationField durationField73 = chronology68.halfdays();
        org.joda.time.DurationField durationField74 = chronology68.hours();
        org.joda.time.DurationField durationField75 = chronology68.days();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:16.151Z/2022-02-11T09:40:16.151Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:16.151Z/2022-02-11T09:40:16.151Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:16.151Z/2022-02-11T09:40:16.151Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572416151L + "'", long16 == 1644572416151L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572416151L + "'", long32 == 1644572416151L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(durationField75);
    }

    @Test
    public void test03766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03766");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:38.562Z/2022-02-11T09:35:38.562Z");
        org.joda.time.Interval interval2 = mutableInterval1.toInterval();
        org.joda.time.MutableInterval mutableInterval3 = interval2.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval4 = mutableInterval3.copy();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = mutableInterval7.toPeriod(periodType8);
        java.lang.Object obj10 = mutableInterval7.clone();
        org.joda.time.DateTime dateTime11 = mutableInterval7.getStart();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        boolean boolean18 = mutableInterval14.equals((java.lang.Object) (-1));
        long long19 = mutableInterval14.getEndMillis();
        org.joda.time.DateTime dateTime20 = mutableInterval14.getEnd();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        boolean boolean37 = mutableInterval23.isAfter((org.joda.time.ReadableInstant) dateTime36);
        boolean boolean38 = dateTime20.isAfter((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readablePeriod46, readableInstant47);
        long long49 = mutableInterval48.toDurationMillis();
        boolean boolean50 = mutableInterval44.isAfter((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        boolean boolean52 = mutableInterval48.contains(readableInstant51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        boolean boolean59 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadablePeriod readablePeriod60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readablePeriod60, readableInstant61);
        long long63 = mutableInterval62.toDurationMillis();
        boolean boolean64 = mutableInterval58.isAfter((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        boolean boolean66 = mutableInterval62.contains(readableInstant65);
        boolean boolean67 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.Duration duration68 = mutableInterval62.toDuration();
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = mutableInterval7.contains((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Chronology chronology71 = dateTime36.getChronology();
        org.joda.time.DateTimeField dateTimeField72 = chronology71.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField73 = chronology71.yearOfEra();
        org.joda.time.DateTimeField dateTimeField74 = chronology71.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField75 = chronology71.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField76 = chronology71.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField77 = chronology71.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField78 = chronology71.year();
        mutableInterval4.setChronology(chronology71);
        java.lang.String str80 = chronology71.toString();
        // The following exception was thrown during execution in test generation
        try {
            long long86 = chronology71.getDateTimeMillis(1644572395273L, (int) (short) 1, (int) (byte) 0, (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 97 for secondOfMinute must be in the range [0,59]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(interval2);
        org.junit.Assert.assertNotNull(mutableInterval3);
        org.junit.Assert.assertNotNull(mutableInterval4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "2022-02-11T09:40:16.176Z/2022-02-11T09:40:16.176Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "2022-02-11T09:40:16.176Z/2022-02-11T09:40:16.176Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "2022-02-11T09:40:16.176Z/2022-02-11T09:40:16.176Z");
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1644572416176L + "'", long19 == 1644572416176L);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572416176L + "'", long35 == 1644572416176L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str80, "ISOChronology[Etc/UTC]");
    }

    @Test
    public void test03767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03767");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        org.joda.time.Interval interval6 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        java.lang.Object obj12 = mutableInterval9.clone();
        org.joda.time.DateTime dateTime13 = mutableInterval9.getStart();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getEnd();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        boolean boolean39 = mutableInterval25.isAfter((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean40 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        boolean boolean69 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.Duration duration70 = mutableInterval64.toDuration();
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = mutableInterval9.contains((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Chronology chronology73 = dateTime38.getChronology();
        org.joda.time.DateTimeField dateTimeField74 = chronology73.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField75 = chronology73.era();
        mutableInterval2.setChronology(chronology73);
        org.joda.time.DurationField durationField77 = chronology73.months();
        org.joda.time.DateTimeField dateTimeField78 = chronology73.millisOfDay();
        org.joda.time.DateTimeField dateTimeField79 = chronology73.dayOfWeek();
        org.joda.time.ReadablePartial readablePartial80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = chronology73.get(readablePartial80, 1644572283826L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572416215L + "'", long5 == 1644572416215L);
        org.junit.Assert.assertNotNull(interval6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(obj12);
// flaky:         org.junit.Assert.assertEquals(obj12.toString(), "2022-02-11T09:40:16.215Z/2022-02-11T09:40:16.215Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "2022-02-11T09:40:16.215Z/2022-02-11T09:40:16.215Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "2022-02-11T09:40:16.215Z/2022-02-11T09:40:16.215Z");
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572416215L + "'", long21 == 1644572416215L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572416215L + "'", long37 == 1644572416215L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
    }

    @Test
    public void test03768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03768");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        boolean boolean8 = mutableInterval5.contains(readableInstant7);
        org.joda.time.Period period9 = mutableInterval5.toPeriod();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = mutableInterval12.toPeriod(periodType13);
        java.lang.Object obj15 = mutableInterval12.clone();
        org.joda.time.DateTime dateTime16 = mutableInterval12.getStart();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        boolean boolean42 = mutableInterval28.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean43 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        boolean boolean50 = mutableInterval46.overlaps((org.joda.time.ReadableInterval) mutableInterval49);
        org.joda.time.ReadablePeriod readablePeriod51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readablePeriod51, readableInstant52);
        long long54 = mutableInterval53.toDurationMillis();
        boolean boolean55 = mutableInterval49.isAfter((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        boolean boolean57 = mutableInterval53.contains(readableInstant56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        boolean boolean64 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readablePeriod65, readableInstant66);
        long long68 = mutableInterval67.toDurationMillis();
        boolean boolean69 = mutableInterval63.isAfter((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        boolean boolean71 = mutableInterval67.contains(readableInstant70);
        boolean boolean72 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.Duration duration73 = mutableInterval67.toDuration();
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime41, (org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = mutableInterval12.contains((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Chronology chronology76 = dateTime41.getChronology();
        org.joda.time.Chronology chronology77 = dateTime41.getChronology();
        org.joda.time.DurationField durationField78 = chronology77.weekyears();
        org.joda.time.DateTimeField dateTimeField79 = chronology77.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField80 = chronology77.clockhourOfDay();
        java.lang.String str81 = chronology77.toString();
        boolean boolean82 = mutableInterval5.equals((java.lang.Object) str81);
        org.joda.time.Interval interval83 = mutableInterval5.toInterval();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "2022-02-11T09:40:16.237Z/2022-02-11T09:40:16.237Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "2022-02-11T09:40:16.237Z/2022-02-11T09:40:16.237Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "2022-02-11T09:40:16.237Z/2022-02-11T09:40:16.237Z");
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572416237L + "'", long24 == 1644572416237L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572416237L + "'", long40 == 1644572416237L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str81, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(interval83);
    }

    @Test
    public void test03769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03769");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.millisOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.dayOfMonth();
        long long79 = chronology66.getDateTimeMillis(1644572148756L, (int) (short) 10, 8, (int) '4', 10);
        org.joda.time.DateTimeField dateTimeField80 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField81 = chronology66.dayOfYear();
        org.joda.time.DateTimeField dateTimeField82 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField83 = chronology66.dayOfYear();
        org.joda.time.DateTimeField dateTimeField84 = chronology66.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField85 = chronology66.dayOfYear();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:16.266Z/2022-02-11T09:40:16.266Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:16.266Z/2022-02-11T09:40:16.266Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:16.266Z/2022-02-11T09:40:16.266Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572416266L + "'", long14 == 1644572416266L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572416266L + "'", long30 == 1644572416266L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1644574132010L + "'", long79 == 1644574132010L);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTimeField81);
        org.junit.Assert.assertNotNull(dateTimeField82);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
    }

    @Test
    public void test03770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03770");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readablePeriod2, readableInstant3);
        long long5 = mutableInterval4.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.Period period18 = mutableInterval16.toPeriod();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = mutableInterval21.toPeriod(periodType22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = period23.isSupported(durationFieldType24);
        boolean boolean27 = period23.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType29 = period23.getFieldType(0);
        int int30 = period18.get(durationFieldType29);
        int int31 = period10.get(durationFieldType29);
        mutableInterval4.setPeriodAfterStart((org.joda.time.ReadablePeriod) period10);
        org.joda.time.Interval interval33 = mutableInterval4.toInterval();
        org.joda.time.Chronology chronology34 = mutableInterval4.getChronology();
        org.joda.time.DateTimeField dateTimeField35 = chronology34.weekyear();
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(1644572136374L, 1644572143397L, chronology34);
        org.joda.time.DateTimeField dateTimeField37 = chronology34.dayOfYear();
        // The following exception was thrown during execution in test generation
        try {
            long long43 = chronology34.getDateTimeMillis(1644572185464L, (int) 'a', (int) (byte) -1, (int) (short) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 97 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(chronology34);
        org.junit.Assert.assertNotNull(dateTimeField35);
        org.junit.Assert.assertNotNull(dateTimeField37);
    }

    @Test
    public void test03771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03771");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.minuteOfDay();
        org.joda.time.DurationField durationField69 = chronology66.hours();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekyear();
        java.lang.String str72 = chronology66.toString();
        long long77 = chronology66.getDateTimeMillis(100, (int) (short) 1, (int) (byte) 1, (int) (short) 0);
        org.joda.time.DurationField durationField78 = chronology66.millis();
        org.joda.time.DateTimeField dateTimeField79 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField80 = chronology66.weekyearOfCentury();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:16.384Z/2022-02-11T09:40:16.384Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:16.384Z/2022-02-11T09:40:16.384Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:16.384Z/2022-02-11T09:40:16.384Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572416384L + "'", long14 == 1644572416384L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572416385L + "'", long30 == 1644572416385L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(durationField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str72, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-59011459200000L) + "'", long77 == (-59011459200000L));
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
    }

    @Test
    public void test03772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03772");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:18.178Z/2022-02-11T09:36:18.178Z");
        org.joda.time.MutableInterval mutableInterval3 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:27.942Z/2022-02-11T09:35:44.271Z");
        boolean boolean5 = mutableInterval3.isAfter(1644572143091L);
        org.joda.time.MutableInterval mutableInterval6 = mutableInterval3.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        java.lang.Object obj12 = mutableInterval9.clone();
        org.joda.time.DateTime dateTime13 = mutableInterval9.getStart();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getEnd();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        boolean boolean39 = mutableInterval25.isAfter((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean40 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        boolean boolean69 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.Duration duration70 = mutableInterval64.toDuration();
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = mutableInterval9.contains((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Chronology chronology73 = dateTime38.getChronology();
        org.joda.time.DateTimeFieldType dateTimeFieldType74 = null;
        boolean boolean75 = dateTime38.isSupported(dateTimeFieldType74);
        boolean boolean76 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime38);
        mutableInterval1.setEnd((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Chronology chronology78 = mutableInterval1.getChronology();
        org.joda.time.DurationField durationField79 = chronology78.millis();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(mutableInterval3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(mutableInterval6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(obj12);
// flaky:         org.junit.Assert.assertEquals(obj12.toString(), "2022-02-11T09:40:16.409Z/2022-02-11T09:40:16.409Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "2022-02-11T09:40:16.409Z/2022-02-11T09:40:16.409Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "2022-02-11T09:40:16.409Z/2022-02-11T09:40:16.409Z");
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572416410L + "'", long21 == 1644572416410L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572416410L + "'", long37 == 1644572416410L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(chronology78);
        org.junit.Assert.assertNotNull(durationField79);
    }

    @Test
    public void test03773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03773");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        mutableInterval9.setStartMillis(1644572127942L);
        boolean boolean14 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = mutableInterval17.toPeriod(periodType18);
        java.lang.Object obj20 = mutableInterval17.clone();
        org.joda.time.DateTime dateTime21 = mutableInterval17.getStart();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        mutableInterval24.setDurationAfterStart(0L);
        boolean boolean28 = mutableInterval24.equals((java.lang.Object) (-1));
        long long29 = mutableInterval24.getEndMillis();
        org.joda.time.DateTime dateTime30 = mutableInterval24.getEnd();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        boolean boolean44 = mutableInterval40.equals((java.lang.Object) (-1));
        long long45 = mutableInterval40.getEndMillis();
        org.joda.time.DateTime dateTime46 = mutableInterval40.getEnd();
        boolean boolean47 = mutableInterval33.isAfter((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean48 = dateTime30.isAfter((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        boolean boolean69 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readablePeriod70, readableInstant71);
        long long73 = mutableInterval72.toDurationMillis();
        boolean boolean74 = mutableInterval68.isAfter((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        boolean boolean76 = mutableInterval72.contains(readableInstant75);
        boolean boolean77 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.Duration duration78 = mutableInterval72.toDuration();
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = mutableInterval17.contains((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Chronology chronology81 = dateTime46.getChronology();
        org.joda.time.DateTimeField dateTimeField82 = chronology81.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField83 = chronology81.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField84 = chronology81.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField85 = chronology81.centuryOfEra();
        mutableInterval9.setChronology(chronology81);
        org.joda.time.Period period87 = mutableInterval9.toPeriod();
        long long88 = mutableInterval9.getEndMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "2022-02-11T09:40:16.438Z/2022-02-11T09:40:16.438Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "2022-02-11T09:40:16.438Z/2022-02-11T09:40:16.438Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "2022-02-11T09:40:16.438Z/2022-02-11T09:40:16.438Z");
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572416439L + "'", long29 == 1644572416439L);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1644572416439L + "'", long45 == 1644572416439L);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertNotNull(dateTimeField82);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(period87);
// flaky:         org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1644572416438L + "'", long88 == 1644572416438L);
    }

    @Test
    public void test03774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03774");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        long long33 = mutableInterval6.getStartMillis();
        org.joda.time.Chronology chronology34 = mutableInterval6.getChronology();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572416478L + "'", long7 == 1644572416478L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572416478L + "'", long23 == 1644572416478L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1644572416478L + "'", long33 == 1644572416478L);
        org.junit.Assert.assertNotNull(chronology34);
    }

    @Test
    public void test03775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03775");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval8 = mutableInterval2.copy();
        boolean boolean10 = mutableInterval2.contains(1644572149831L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = mutableInterval15.toPeriod(periodType16);
        java.lang.Object obj18 = mutableInterval15.clone();
        org.joda.time.DateTime dateTime19 = mutableInterval15.getStart();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        mutableInterval22.setDurationAfterStart(0L);
        boolean boolean26 = mutableInterval22.equals((java.lang.Object) (-1));
        long long27 = mutableInterval22.getEndMillis();
        org.joda.time.DateTime dateTime28 = mutableInterval22.getEnd();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        mutableInterval38.setDurationAfterStart(0L);
        boolean boolean42 = mutableInterval38.equals((java.lang.Object) (-1));
        long long43 = mutableInterval38.getEndMillis();
        org.joda.time.DateTime dateTime44 = mutableInterval38.getEnd();
        boolean boolean45 = mutableInterval31.isAfter((org.joda.time.ReadableInstant) dateTime44);
        boolean boolean46 = dateTime28.isAfter((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        boolean boolean53 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadablePeriod readablePeriod54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readablePeriod54, readableInstant55);
        long long57 = mutableInterval56.toDurationMillis();
        boolean boolean58 = mutableInterval52.isAfter((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        boolean boolean60 = mutableInterval56.contains(readableInstant59);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        boolean boolean67 = mutableInterval63.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadablePeriod readablePeriod68 = null;
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readablePeriod68, readableInstant69);
        long long71 = mutableInterval70.toDurationMillis();
        boolean boolean72 = mutableInterval66.isAfter((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        boolean boolean74 = mutableInterval70.contains(readableInstant73);
        boolean boolean75 = mutableInterval56.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.Duration duration76 = mutableInterval70.toDuration();
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = mutableInterval15.contains((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Chronology chronology79 = dateTime44.getChronology();
        org.joda.time.DateTimeField dateTimeField80 = chronology79.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology79);
        org.joda.time.DateTime dateTime82 = mutableInterval81.getEnd();
        org.joda.time.ReadablePeriod readablePeriod83 = null;
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval(readablePeriod83, readableInstant84);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.ReadableDuration readableDuration87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval(readableInstant86, readableDuration87);
        org.joda.time.PeriodType periodType89 = null;
        org.joda.time.Period period90 = mutableInterval88.toPeriod(periodType89);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.MutableInterval mutableInterval92 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period90, readableInstant91);
        boolean boolean93 = mutableInterval85.isAfter((org.joda.time.ReadableInterval) mutableInterval92);
        boolean boolean94 = mutableInterval85.isBeforeNow();
        boolean boolean95 = dateTime82.equals((java.lang.Object) mutableInterval85);
        org.joda.time.DateTime dateTime96 = mutableInterval85.getStart();
        mutableInterval2.setStart((org.joda.time.ReadableInstant) dateTime96);
        org.joda.time.Duration duration98 = mutableInterval2.toDuration();
        org.joda.time.Interval interval99 = mutableInterval2.toInterval();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572416636L + "'", long5 == 1644572416636L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mutableInterval8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals(obj18.toString(), "2022-02-11T09:40:16.636Z/2022-02-11T09:40:16.636Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "2022-02-11T09:40:16.636Z/2022-02-11T09:40:16.636Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "2022-02-11T09:40:16.636Z/2022-02-11T09:40:16.636Z");
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1644572416636L + "'", long27 == 1644572416636L);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1644572416636L + "'", long43 == 1644572416636L);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTime82);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(dateTime96);
        org.junit.Assert.assertNotNull(duration98);
        org.junit.Assert.assertNotNull(interval99);
    }

    @Test
    public void test03776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03776");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readablePeriod9, readableInstant10);
        long long12 = mutableInterval11.toDurationMillis();
        boolean boolean13 = mutableInterval7.isAfter((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval7.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        boolean boolean18 = mutableInterval16.isBeforeNow();
        org.joda.time.Interval interval19 = mutableInterval16.toInterval();
        org.joda.time.MutableInterval mutableInterval20 = mutableInterval16.toMutableInterval();
        org.joda.time.Duration duration21 = mutableInterval20.toDuration();
        org.joda.time.Chronology chronology22 = mutableInterval20.getChronology();
        org.joda.time.DateTimeField dateTimeField23 = chronology22.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField24 = chronology22.weekOfWeekyear();
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(1644572168759L, 1644572286644L, chronology22);
        long long29 = chronology22.add(1644572401218L, 1644572206509L, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(mutableInterval20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(dateTimeField23);
        org.junit.Assert.assertNotNull(dateTimeField24);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572401218L + "'", long29 == 1644572401218L);
    }

    @Test
    public void test03777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03777");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.centuryOfEra();
        java.lang.String str68 = chronology66.toString();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.minuteOfDay();
        org.joda.time.DurationField durationField70 = chronology66.seconds();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekyear();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.clockhourOfHalfday();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:16.766Z/2022-02-11T09:40:16.766Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:16.766Z/2022-02-11T09:40:16.766Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:16.766Z/2022-02-11T09:40:16.766Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572416766L + "'", long14 == 1644572416766L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572416766L + "'", long30 == 1644572416766L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str68, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
    }

    @Test
    public void test03778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03778");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.Period period8 = mutableInterval6.toPeriod();
        java.lang.String str9 = mutableInterval6.toString();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        boolean boolean16 = mutableInterval12.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.Period period24 = mutableInterval22.toPeriod();
        org.joda.time.Duration duration25 = mutableInterval22.toDuration();
        mutableInterval12.setDurationAfterStart((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Chronology chronology27 = mutableInterval12.getChronology();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readablePeriod35, readableInstant36);
        long long38 = mutableInterval37.toDurationMillis();
        boolean boolean39 = mutableInterval33.isAfter((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        boolean boolean41 = mutableInterval37.contains(readableInstant40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        boolean boolean56 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.Duration duration57 = mutableInterval51.toDuration();
        boolean boolean59 = duration57.equals((java.lang.Object) 'a');
        long long60 = duration57.getMillis();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        boolean boolean67 = mutableInterval63.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadablePeriod readablePeriod68 = null;
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readablePeriod68, readableInstant69);
        long long71 = mutableInterval70.toDurationMillis();
        boolean boolean72 = mutableInterval66.isAfter((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        boolean boolean76 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        boolean boolean77 = mutableInterval75.isBeforeNow();
        org.joda.time.Interval interval78 = mutableInterval75.toInterval();
        org.joda.time.MutableInterval mutableInterval79 = mutableInterval75.toMutableInterval();
        org.joda.time.Duration duration80 = mutableInterval79.toDuration();
        int int81 = duration57.compareTo((org.joda.time.ReadableDuration) duration80);
        org.joda.time.Period period82 = duration80.toPeriod();
        boolean boolean83 = mutableInterval12.equals((java.lang.Object) duration80);
        boolean boolean84 = mutableInterval6.contains((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.MutableInterval mutableInterval85 = mutableInterval12.copy();
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.ReadableDuration readableDuration87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval(readableInstant86, readableDuration87);
        org.joda.time.PeriodType periodType89 = null;
        org.joda.time.Period period90 = mutableInterval88.toPeriod(periodType89);
        org.joda.time.DurationFieldType durationFieldType91 = null;
        boolean boolean92 = period90.isSupported(durationFieldType91);
        boolean boolean94 = period90.equals((java.lang.Object) "hi!");
        int int95 = period90.size();
        org.joda.time.MutablePeriod mutablePeriod96 = period90.toMutablePeriod();
        org.joda.time.PeriodType periodType97 = mutablePeriod96.getPeriodType();
        org.joda.time.Period period98 = mutableInterval12.toPeriod(periodType97);
        org.joda.time.MutablePeriod mutablePeriod99 = period98.toMutablePeriod();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572416792L + "'", long7 == 1644572416792L);
        org.junit.Assert.assertNotNull(period8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "2022-02-11T09:40:16.792Z/2022-02-11T09:40:16.792Z" + "'", str9, "2022-02-11T09:40:16.792Z/2022-02-11T09:40:16.792Z");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(chronology27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(mutableInterval79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(mutableInterval85);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 8 + "'", int95 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod96);
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertNotNull(period98);
        org.junit.Assert.assertNotNull(mutablePeriod99);
    }

    @Test
    public void test03779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03779");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readablePeriod14, readableInstant15);
        long long17 = mutableInterval16.toDurationMillis();
        boolean boolean18 = mutableInterval12.isAfter((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        boolean boolean20 = mutableInterval16.contains(readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        boolean boolean35 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Duration duration36 = mutableInterval30.toDuration();
        boolean boolean38 = duration36.equals((java.lang.Object) 'a');
        mutableInterval6.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        boolean boolean53 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.Period period54 = mutableInterval52.toPeriod();
        org.joda.time.Duration duration55 = mutableInterval52.toDuration();
        mutableInterval42.setDurationAfterStart((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Chronology chronology57 = mutableInterval42.getChronology();
        org.joda.time.DateTimeField dateTimeField58 = chronology57.weekOfWeekyear();
        mutableInterval6.setChronology(chronology57);
        org.joda.time.DateTimeField dateTimeField60 = chronology57.weekyear();
        org.joda.time.DateTimeField dateTimeField61 = chronology57.weekyear();
        org.joda.time.DateTimeField dateTimeField62 = chronology57.weekyear();
        org.joda.time.DateTimeField dateTimeField63 = chronology57.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField64 = chronology57.weekOfWeekyear();
        long long68 = chronology57.add(1644572205030L, 1644572391983L, (int) (byte) -1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertNotNull(dateTimeField58);
        org.junit.Assert.assertNotNull(dateTimeField60);
        org.junit.Assert.assertNotNull(dateTimeField61);
        org.junit.Assert.assertNotNull(dateTimeField62);
        org.junit.Assert.assertNotNull(dateTimeField63);
        org.junit.Assert.assertNotNull(dateTimeField64);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-186953L) + "'", long68 == (-186953L));
    }

    @Test
    public void test03780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03780");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval8 = mutableInterval2.copy();
        boolean boolean10 = mutableInterval2.isAfter(1644572138018L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadablePeriod readablePeriod18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readablePeriod18, readableInstant19);
        long long21 = mutableInterval20.toDurationMillis();
        boolean boolean22 = mutableInterval16.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        java.lang.String str27 = mutableInterval16.toString();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = mutableInterval30.toPeriod(periodType31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        boolean boolean36 = period32.equals((java.lang.Object) readableInstant34);
        mutableInterval16.setPeriodAfterStart((org.joda.time.ReadablePeriod) period32);
        mutableInterval16.setDurationAfterStart((long) 1);
        boolean boolean40 = mutableInterval16.containsNow();
        boolean boolean41 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval16);
        boolean boolean43 = mutableInterval16.contains(1644572163278L);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.Period period48 = mutableInterval46.toPeriod(periodType47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period48, readableInstant49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        boolean boolean82 = duration80.equals((java.lang.Object) 'a');
        mutableInterval50.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration80);
        org.joda.time.DateTime dateTime84 = mutableInterval50.getStart();
        boolean boolean85 = mutableInterval16.isAfter((org.joda.time.ReadableInstant) dateTime84);
        java.lang.String str86 = dateTime84.toString();
        org.joda.time.DateTimeZone dateTimeZone87 = dateTime84.getZone();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572416981L + "'", long5 == 1644572416981L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mutableInterval8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "2022-02-11T09:40:16.981Z/2022-02-11T09:40:16.981Z" + "'", str27, "2022-02-11T09:40:16.981Z/2022-02-11T09:40:16.981Z");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "2022-02-11T09:40:16.981Z" + "'", str86, "2022-02-11T09:40:16.981Z");
        org.junit.Assert.assertNotNull(dateTimeZone87);
    }

    @Test
    public void test03781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03781");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.dayOfWeek();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        org.joda.time.PeriodType periodType75 = null;
        org.joda.time.Period period76 = mutableInterval74.toPeriod(periodType75);
        org.joda.time.DurationFieldType durationFieldType77 = null;
        boolean boolean78 = period76.isSupported(durationFieldType77);
        boolean boolean80 = period76.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType82 = period76.getFieldType(0);
        int[] intArray85 = chronology66.get((org.joda.time.ReadablePeriod) period76, 1644572209056L, 1644572274590L);
        // The following exception was thrown during execution in test generation
        try {
            long long91 = chronology66.getDateTimeMillis(1644572368271L, (int) (short) 100, 8, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 100 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:17.011Z/2022-02-11T09:40:17.011Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:17.011Z/2022-02-11T09:40:17.011Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:17.011Z/2022-02-11T09:40:17.011Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572417011L + "'", long14 == 1644572417011L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572417011L + "'", long30 == 1644572417011L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0, 0, 0, 0, 1, 5, 534]");
    }

    @Test
    public void test03782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03782");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology2 = mutableInterval1.getChronology();
        long long3 = mutableInterval1.toDurationMillis();
        org.joda.time.ReadablePeriod readablePeriod4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readablePeriod4, readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period11, readableInstant12);
        boolean boolean14 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval13);
        long long15 = mutableInterval6.toDurationMillis();
        mutableInterval6.setStartMillis(1644572127431L);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        long long25 = mutableInterval20.getEndMillis();
        org.joda.time.DateTime dateTime26 = mutableInterval20.getEnd();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = mutableInterval29.toPeriod(periodType30);
        long long32 = mutableInterval29.getEndMillis();
        boolean boolean34 = mutableInterval29.equals((java.lang.Object) ' ');
        long long35 = mutableInterval29.getStartMillis();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        mutableInterval38.setDurationAfterStart(0L);
        boolean boolean42 = mutableInterval38.equals((java.lang.Object) (-1));
        long long43 = mutableInterval38.getEndMillis();
        org.joda.time.DateTime dateTime44 = mutableInterval38.getEnd();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        mutableInterval54.setDurationAfterStart(0L);
        boolean boolean58 = mutableInterval54.equals((java.lang.Object) (-1));
        long long59 = mutableInterval54.getEndMillis();
        org.joda.time.DateTime dateTime60 = mutableInterval54.getEnd();
        boolean boolean61 = mutableInterval47.isAfter((org.joda.time.ReadableInstant) dateTime60);
        boolean boolean62 = dateTime44.isAfter((org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        boolean boolean69 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readablePeriod70, readableInstant71);
        long long73 = mutableInterval72.toDurationMillis();
        boolean boolean74 = mutableInterval68.isAfter((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        boolean boolean76 = mutableInterval72.contains(readableInstant75);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.ReadableDuration readableDuration78 = null;
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(readableInstant77, readableDuration78);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.ReadableDuration readableDuration81 = null;
        org.joda.time.MutableInterval mutableInterval82 = new org.joda.time.MutableInterval(readableInstant80, readableDuration81);
        boolean boolean83 = mutableInterval79.overlaps((org.joda.time.ReadableInterval) mutableInterval82);
        org.joda.time.ReadablePeriod readablePeriod84 = null;
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval(readablePeriod84, readableInstant85);
        long long87 = mutableInterval86.toDurationMillis();
        boolean boolean88 = mutableInterval82.isAfter((org.joda.time.ReadableInterval) mutableInterval86);
        org.joda.time.ReadableInstant readableInstant89 = null;
        boolean boolean90 = mutableInterval86.contains(readableInstant89);
        boolean boolean91 = mutableInterval72.overlaps((org.joda.time.ReadableInterval) mutableInterval86);
        org.joda.time.Duration duration92 = mutableInterval86.toDuration();
        org.joda.time.MutableInterval mutableInterval93 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime60, (org.joda.time.ReadableDuration) duration92);
        mutableInterval29.setStart((org.joda.time.ReadableInstant) dateTime60);
        int int95 = dateTime26.compareTo((org.joda.time.ReadableInstant) dateTime60);
        mutableInterval6.setStart((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.Interval interval97 = mutableInterval6.toInterval();
        org.joda.time.DateTime dateTime98 = interval97.getStart();
        boolean boolean99 = mutableInterval1.contains((org.joda.time.ReadableInterval) interval97);
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(chronology2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572417036L + "'", long25 == 1644572417036L);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertNotNull(period31);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572417036L + "'", long32 == 1644572417036L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572417036L + "'", long35 == 1644572417036L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1644572417036L + "'", long43 == 1644572417036L);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1644572417036L + "'", long59 == 1644572417036L);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(interval97);
        org.junit.Assert.assertNotNull(dateTime98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03783");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        org.joda.time.Chronology chronology13 = mutableInterval2.getChronology();
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval();
        boolean boolean15 = mutableInterval14.isAfterNow();
        boolean boolean16 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Duration duration17 = mutableInterval14.toDuration();
        org.joda.time.DateTime dateTime18 = mutableInterval14.getEnd();
        org.joda.time.MutableInterval mutableInterval20 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        long long21 = mutableInterval20.getEndMillis();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        boolean boolean28 = mutableInterval24.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readablePeriod29, readableInstant30);
        long long32 = mutableInterval31.toDurationMillis();
        boolean boolean33 = mutableInterval27.isAfter((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        boolean boolean38 = mutableInterval36.isBeforeNow();
        org.joda.time.Interval interval39 = mutableInterval36.toInterval();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        mutableInterval42.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean50 = mutableInterval36.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.Duration duration51 = mutableInterval36.toDuration();
        org.joda.time.Period period52 = duration51.toPeriod();
        org.joda.time.Duration duration53 = duration51.toDuration();
        mutableInterval20.setDurationAfterStart((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Period period55 = mutableInterval20.toPeriod();
        org.joda.time.Period period56 = mutableInterval20.toPeriod();
        boolean boolean57 = mutableInterval14.equals((java.lang.Object) period56);
        org.joda.time.Period period58 = period56.toPeriod();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(chronology13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(dateTime18);
        org.junit.Assert.assertNotNull(mutableInterval20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572134356L + "'", long21 == 1644572134356L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test03784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03784");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        boolean boolean6 = period4.isSupported(durationFieldType5);
        boolean boolean8 = period4.equals((java.lang.Object) "hi!");
        int int9 = period4.size();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.Period period17 = mutableInterval15.toPeriod();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = period22.isSupported(durationFieldType23);
        boolean boolean26 = period22.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType28 = period22.getFieldType(0);
        int int29 = period17.get(durationFieldType28);
        int int30 = period4.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType32 = period4.getFieldType(0);
        int int33 = period4.size();
        org.joda.time.MutablePeriod mutablePeriod34 = period4.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int36 = mutablePeriod34.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod34);
    }

    @Test
    public void test03785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03785");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadablePeriod readablePeriod18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readablePeriod18, readableInstant19);
        long long21 = mutableInterval20.toDurationMillis();
        boolean boolean22 = mutableInterval16.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        boolean boolean24 = mutableInterval20.contains(readableInstant23);
        long long25 = mutableInterval20.getEndMillis();
        java.lang.String str26 = mutableInterval20.toString();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        mutableInterval36.setDurationAfterStart(0L);
        boolean boolean40 = mutableInterval36.equals((java.lang.Object) (-1));
        long long41 = mutableInterval36.getEndMillis();
        org.joda.time.DateTime dateTime42 = mutableInterval36.getEnd();
        boolean boolean43 = mutableInterval29.isAfter((org.joda.time.ReadableInstant) dateTime42);
// flaky:         mutableInterval20.setStart((org.joda.time.ReadableInstant) dateTime42);
        boolean boolean45 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.Duration duration46 = mutableInterval20.toDuration();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.Period period51 = mutableInterval49.toPeriod(periodType50);
        long long52 = mutableInterval49.getEndMillis();
        boolean boolean54 = mutableInterval49.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval55 = mutableInterval49.copy();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        mutableInterval61.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.isAfter(readableInstant64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        mutableInterval68.setDurationAfterStart(0L);
        mutableInterval68.setStartMillis(1644572127942L);
        boolean boolean73 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        boolean boolean74 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        boolean boolean81 = mutableInterval77.overlaps((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.Period period82 = mutableInterval80.toPeriod();
        mutableInterval68.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period82);
        boolean boolean84 = mutableInterval49.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        long long85 = mutableInterval49.toDurationMillis();
        org.joda.time.Duration duration86 = mutableInterval49.toDuration();
        int int87 = duration46.compareTo((org.joda.time.ReadableDuration) duration86);
        long long88 = duration46.getMillis();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572417197L + "'", long25 == 1644572417197L);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "2022-02-11T09:40:17.197Z/2022-02-11T09:40:17.197Z" + "'", str26, "2022-02-11T09:40:17.197Z/2022-02-11T09:40:17.197Z");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572417197L + "'", long41 == 1644572417197L);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(period51);
// flaky:         org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1644572417197L + "'", long52 == 1644572417197L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(mutableInterval55);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test03786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03786");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        mutableInterval68.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.isAfter(readableInstant71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        mutableInterval75.setDurationAfterStart(0L);
        mutableInterval75.setStartMillis(1644572127942L);
        boolean boolean80 = mutableInterval68.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        java.lang.String str81 = mutableInterval68.toString();
        long long82 = mutableInterval68.getStartMillis();
        long long83 = mutableInterval68.getEndMillis();
        mutableInterval68.setStartMillis(1644572161385L);
        boolean boolean87 = mutableInterval68.isAfter(1644572157013L);
        org.joda.time.DateTime dateTime88 = mutableInterval68.getStart();
        org.joda.time.MutableInterval mutableInterval90 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:49.835Z/2022-02-11T09:36:49.835Z");
        org.joda.time.DateTime dateTime91 = mutableInterval90.getEnd();
        boolean boolean92 = dateTime88.isBefore((org.joda.time.ReadableInstant) dateTime91);
        boolean boolean93 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime88);
        long long94 = mutableInterval2.getStartMillis();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval95 = new org.joda.time.MutableInterval((java.lang.Object) long94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:17.229Z/2022-02-11T09:40:17.229Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:17.229Z/2022-02-11T09:40:17.229Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:17.229Z/2022-02-11T09:40:17.229Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572417229L + "'", long14 == 1644572417229L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572417229L + "'", long30 == 1644572417229L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "2022-02-11T09:40:17.229Z/2022-02-11T09:40:17.229Z" + "'", str81, "2022-02-11T09:40:17.229Z/2022-02-11T09:40:17.229Z");
// flaky:         org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1644572417229L + "'", long82 == 1644572417229L);
// flaky:         org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1644572417229L + "'", long83 == 1644572417229L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertNotNull(mutableInterval90);
        org.junit.Assert.assertNotNull(dateTime91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572417229L + "'", long94 == 1644572417229L);
    }

    @Test
    public void test03787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03787");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DurationField durationField68 = chronology66.hours();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekOfWeekyear();
        org.joda.time.DurationField durationField71 = chronology66.hours();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.dayOfMonth();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:17.277Z/2022-02-11T09:40:17.277Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:17.277Z/2022-02-11T09:40:17.277Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:17.277Z/2022-02-11T09:40:17.277Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572417277L + "'", long14 == 1644572417277L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572417277L + "'", long30 == 1644572417277L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03788");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readablePeriod14, readableInstant15);
        long long17 = mutableInterval16.toDurationMillis();
        boolean boolean18 = mutableInterval12.isAfter((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        boolean boolean20 = mutableInterval16.contains(readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        boolean boolean35 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Duration duration36 = mutableInterval30.toDuration();
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant43 = null;
        boolean boolean44 = mutableInterval40.isAfter(readableInstant43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        boolean boolean65 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadablePeriod readablePeriod66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readablePeriod66, readableInstant67);
        long long69 = mutableInterval68.toDurationMillis();
        boolean boolean70 = mutableInterval64.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.contains(readableInstant71);
        boolean boolean73 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.Duration duration74 = mutableInterval68.toDuration();
        mutableInterval40.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration74);
        org.joda.time.MutableInterval mutableInterval76 = mutableInterval40.toMutableInterval();
        org.joda.time.DateTime dateTime77 = mutableInterval76.getEnd();
        org.joda.time.Interval interval78 = mutableInterval76.toInterval();
        org.joda.time.DateTime dateTime79 = interval78.getStart();
        org.joda.time.DateTime dateTime80 = interval78.getEnd();
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime80);
        org.joda.time.Chronology chronology82 = dateTime80.getChronology();
        org.joda.time.Chronology chronology83 = dateTime80.getChronology();
        org.joda.time.DurationField durationField84 = chronology83.seconds();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(mutableInterval76);
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertNotNull(dateTime80);
        org.junit.Assert.assertNotNull(chronology82);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(durationField84);
    }

    @Test
    public void test03789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03789");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.Period period8 = mutableInterval6.toPeriod();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        boolean boolean18 = mutableInterval6.isBefore((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.Chronology chronology19 = mutableInterval6.getChronology();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572417364L + "'", long7 == 1644572417364L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572417364L + "'", long16 == 1644572417364L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(chronology19);
    }

    @Test
    public void test03790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03790");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        long long14 = mutableInterval11.getEndMillis();
        boolean boolean16 = mutableInterval11.equals((java.lang.Object) ' ');
        long long17 = mutableInterval11.getStartMillis();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        long long25 = mutableInterval20.getEndMillis();
        org.joda.time.DateTime dateTime26 = mutableInterval20.getEnd();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        mutableInterval36.setDurationAfterStart(0L);
        boolean boolean40 = mutableInterval36.equals((java.lang.Object) (-1));
        long long41 = mutableInterval36.getEndMillis();
        org.joda.time.DateTime dateTime42 = mutableInterval36.getEnd();
        boolean boolean43 = mutableInterval29.isAfter((org.joda.time.ReadableInstant) dateTime42);
        boolean boolean44 = dateTime26.isAfter((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        boolean boolean65 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadablePeriod readablePeriod66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readablePeriod66, readableInstant67);
        long long69 = mutableInterval68.toDurationMillis();
        boolean boolean70 = mutableInterval64.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.contains(readableInstant71);
        boolean boolean73 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.Duration duration74 = mutableInterval68.toDuration();
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableDuration) duration74);
        mutableInterval11.setStart((org.joda.time.ReadableInstant) dateTime42);
        int int77 = dateTime8.compareTo((org.joda.time.ReadableInstant) dateTime42);
        boolean boolean79 = dateTime8.equals((java.lang.Object) 1644572348373L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572417378L + "'", long7 == 1644572417378L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572417378L + "'", long14 == 1644572417378L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1644572417378L + "'", long17 == 1644572417378L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572417378L + "'", long25 == 1644572417378L);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572417378L + "'", long41 == 1644572417378L);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test03791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03791");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DurationField durationField68 = chronology66.hours();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.millisOfSecond();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:17.444Z/2022-02-11T09:40:17.444Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:17.444Z/2022-02-11T09:40:17.444Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:17.444Z/2022-02-11T09:40:17.444Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572417444L + "'", long14 == 1644572417444L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572417444L + "'", long30 == 1644572417444L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
    }

    @Test
    public void test03792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03792");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        mutableInterval9.setStartMillis(1644572127942L);
        boolean boolean14 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = mutableInterval17.toPeriod(periodType18);
        java.lang.Object obj20 = mutableInterval17.clone();
        org.joda.time.DateTime dateTime21 = mutableInterval17.getStart();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        mutableInterval24.setDurationAfterStart(0L);
        boolean boolean28 = mutableInterval24.equals((java.lang.Object) (-1));
        long long29 = mutableInterval24.getEndMillis();
        org.joda.time.DateTime dateTime30 = mutableInterval24.getEnd();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        boolean boolean44 = mutableInterval40.equals((java.lang.Object) (-1));
        long long45 = mutableInterval40.getEndMillis();
        org.joda.time.DateTime dateTime46 = mutableInterval40.getEnd();
        boolean boolean47 = mutableInterval33.isAfter((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean48 = dateTime30.isAfter((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        boolean boolean69 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readablePeriod70, readableInstant71);
        long long73 = mutableInterval72.toDurationMillis();
        boolean boolean74 = mutableInterval68.isAfter((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        boolean boolean76 = mutableInterval72.contains(readableInstant75);
        boolean boolean77 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.Duration duration78 = mutableInterval72.toDuration();
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = mutableInterval17.contains((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Chronology chronology81 = dateTime46.getChronology();
        org.joda.time.DateTimeField dateTimeField82 = chronology81.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField83 = chronology81.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField84 = chronology81.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField85 = chronology81.centuryOfEra();
        mutableInterval9.setChronology(chronology81);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.ReadableDuration readableDuration88 = null;
        org.joda.time.MutableInterval mutableInterval89 = new org.joda.time.MutableInterval(readableInstant87, readableDuration88);
        org.joda.time.PeriodType periodType90 = null;
        org.joda.time.Period period91 = mutableInterval89.toPeriod(periodType90);
        org.joda.time.ReadableInstant readableInstant92 = null;
        org.joda.time.MutableInterval mutableInterval93 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period91, readableInstant92);
        long long94 = mutableInterval93.getStartMillis();
        org.joda.time.Period period95 = mutableInterval93.toPeriod();
        mutableInterval9.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period95);
        org.joda.time.Interval interval97 = mutableInterval9.toInterval();
        org.joda.time.ReadablePeriod readablePeriod98 = null;
        mutableInterval9.setPeriodAfterStart(readablePeriod98);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "2022-02-11T09:40:17.488Z/2022-02-11T09:40:17.488Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "2022-02-11T09:40:17.488Z/2022-02-11T09:40:17.488Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "2022-02-11T09:40:17.488Z/2022-02-11T09:40:17.488Z");
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572417488L + "'", long29 == 1644572417488L);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1644572417488L + "'", long45 == 1644572417488L);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertNotNull(dateTimeField82);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(period91);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572417488L + "'", long94 == 1644572417488L);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(interval97);
    }

    @Test
    public void test03793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03793");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        boolean boolean25 = mutableInterval21.contains(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        long long36 = mutableInterval35.toDurationMillis();
        boolean boolean37 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.contains(readableInstant38);
        boolean boolean40 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        boolean boolean55 = mutableInterval21.isBefore((org.joda.time.ReadableInterval) mutableInterval50);
        boolean boolean56 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        long long71 = mutableInterval66.getEndMillis();
        boolean boolean72 = mutableInterval50.contains((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.MutableInterval mutableInterval73 = mutableInterval66.toMutableInterval();
        org.joda.time.Duration duration74 = mutableInterval66.toDuration();
        mutableInterval66.setStartMillis(1644572202637L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572417519L + "'", long71 == 1644572417519L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(mutableInterval73);
        org.junit.Assert.assertNotNull(duration74);
    }

    @Test
    public void test03794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03794");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfWeek();
        long long74 = chronology66.getDateTimeMillis((int) (short) 10, (int) (short) 1, 8, (int) (byte) 0);
        org.joda.time.DateTimeField dateTimeField75 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField76 = chronology66.weekyearOfCentury();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:17.569Z/2022-02-11T09:40:17.569Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:17.569Z/2022-02-11T09:40:17.569Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:17.569Z/2022-02-11T09:40:17.569Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572417569L + "'", long14 == 1644572417569L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572417569L + "'", long30 == 1644572417569L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-61850995200000L) + "'", long74 == (-61850995200000L));
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
    }

    @Test
    public void test03795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03795");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DurationField durationField68 = chronology66.minutes();
        // The following exception was thrown during execution in test generation
        try {
            long long74 = chronology66.getDateTimeMillis(0L, 0, (int) ' ', (int) 'a', 1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 97 for secondOfMinute must be in the range [0,59]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:17.597Z/2022-02-11T09:40:17.597Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:17.597Z/2022-02-11T09:40:17.597Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:17.597Z/2022-02-11T09:40:17.597Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572417597L + "'", long14 == 1644572417597L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572417597L + "'", long30 == 1644572417597L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(durationField68);
    }

    @Test
    public void test03796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03796");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField70 = chronology66.minutes();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.dayOfYear();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:17.623Z/2022-02-11T09:40:17.623Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:17.623Z/2022-02-11T09:40:17.623Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:17.623Z/2022-02-11T09:40:17.623Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572417623L + "'", long14 == 1644572417623L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572417623L + "'", long30 == 1644572417623L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03797");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.MutableInterval mutableInterval3 = new org.joda.time.MutableInterval(readableInstant1, readableDuration2);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = mutableInterval3.toPeriod(periodType4);
        java.lang.Object obj6 = mutableInterval3.clone();
        org.joda.time.DateTime dateTime7 = mutableInterval3.getStart();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        long long15 = mutableInterval10.getEndMillis();
        org.joda.time.DateTime dateTime16 = mutableInterval10.getEnd();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        boolean boolean33 = mutableInterval19.isAfter((org.joda.time.ReadableInstant) dateTime32);
        boolean boolean34 = dateTime16.isAfter((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        boolean boolean41 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readablePeriod42, readableInstant43);
        long long45 = mutableInterval44.toDurationMillis();
        boolean boolean46 = mutableInterval40.isAfter((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        boolean boolean48 = mutableInterval44.contains(readableInstant47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        boolean boolean63 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.Duration duration64 = mutableInterval58.toDuration();
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = mutableInterval3.contains((org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Chronology chronology67 = dateTime32.getChronology();
        org.joda.time.DateTimeField dateTimeField68 = chronology67.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        org.joda.time.PeriodType periodType73 = null;
        org.joda.time.Period period74 = mutableInterval72.toPeriod(periodType73);
        long long75 = mutableInterval72.getEndMillis();
        org.joda.time.Interval interval76 = mutableInterval72.toInterval();
        long long77 = interval76.getEndMillis();
        org.joda.time.ReadablePeriod readablePeriod78 = null;
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readablePeriod78, readableInstant79);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.ReadableDuration readableDuration82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readableInstant81, readableDuration82);
        org.joda.time.PeriodType periodType84 = null;
        org.joda.time.Period period85 = mutableInterval83.toPeriod(periodType84);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period85, readableInstant86);
        boolean boolean88 = mutableInterval80.isAfter((org.joda.time.ReadableInterval) mutableInterval87);
        boolean boolean89 = interval76.contains((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.PeriodType periodType90 = null;
        org.joda.time.Period period91 = interval76.toPeriod(periodType90);
        int[] intArray93 = chronology67.get((org.joda.time.ReadablePeriod) period91, 1644572163097L);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval94 = new org.joda.time.MutableInterval((java.lang.Object) 1644572142045L, chronology67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(obj6);
// flaky:         org.junit.Assert.assertEquals(obj6.toString(), "2022-02-11T09:40:17.652Z/2022-02-11T09:40:17.652Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "2022-02-11T09:40:17.652Z/2022-02-11T09:40:17.652Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "2022-02-11T09:40:17.652Z/2022-02-11T09:40:17.652Z");
        org.junit.Assert.assertNotNull(dateTime7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1644572417652L + "'", long15 == 1644572417652L);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572417652L + "'", long31 == 1644572417652L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(period74);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572417652L + "'", long75 == 1644572417652L);
        org.junit.Assert.assertNotNull(interval76);
// flaky:         org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1644572417652L + "'", long77 == 1644572417652L);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0, 2719, 1, 9, 36, 3, 97]");
    }

    @Test
    public void test03798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03798");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        mutableInterval2.setEndMillis((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.DateTimeZone dateTimeZone42 = dateTime23.getZone();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        mutableInterval45.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        long long50 = mutableInterval45.getEndMillis();
        org.joda.time.DateTime dateTime51 = mutableInterval45.getStart();
        boolean boolean52 = dateTime23.isEqual((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean53 = mutableInterval2.isBefore((org.joda.time.ReadableInstant) dateTime51);
        java.lang.Object obj54 = null;
        boolean boolean55 = dateTime51.equals(obj54);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = null;
        boolean boolean57 = dateTime51.isSupported(dateTimeFieldType56);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572417698L + "'", long22 == 1644572417698L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572417698L + "'", long38 == 1644572417698L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(dateTimeZone42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1644572417699L + "'", long50 == 1644572417699L);
        org.junit.Assert.assertNotNull(dateTime51);
// flaky:         org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test03799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03799");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        mutableInterval4.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval12 = mutableInterval4.copy();
        boolean boolean14 = mutableInterval4.contains(1644572125519L);
        org.joda.time.Chronology chronology15 = mutableInterval4.getChronology();
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(0L, 1644572131452L, chronology15);
        org.joda.time.Chronology chronology17 = mutableInterval16.getChronology();
        org.joda.time.DateTimeField dateTimeField18 = chronology17.millisOfDay();
        org.joda.time.DurationField durationField19 = chronology17.days();
        org.joda.time.DateTimeField dateTimeField20 = chronology17.secondOfDay();
        org.joda.time.DateTimeField dateTimeField21 = chronology17.hourOfDay();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mutableInterval12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertNotNull(dateTimeField18);
        org.junit.Assert.assertNotNull(durationField19);
        org.junit.Assert.assertNotNull(dateTimeField20);
        org.junit.Assert.assertNotNull(dateTimeField21);
    }

    @Test
    public void test03800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03800");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.minuteOfDay();
        org.joda.time.DurationField durationField10 = chronology8.hours();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.dayOfYear();
        long long17 = chronology8.add(1644572283272L, 1644572176705L, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 106567L + "'", long17 == 106567L);
    }

    @Test
    public void test03801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03801");
        org.joda.time.MutableInterval mutableInterval1 = new org.joda.time.MutableInterval((java.lang.Object) "2022-02-11T09:36:22.815Z/2022-02-11T09:36:22.815Z");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.Duration duration17 = mutableInterval14.toDuration();
        mutableInterval4.setDurationAfterStart((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Chronology chronology19 = mutableInterval4.getChronology();
        boolean boolean20 = mutableInterval4.isAfterNow();
        boolean boolean21 = mutableInterval1.isBefore((org.joda.time.ReadableInterval) mutableInterval4);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = mutableInterval24.toPeriod(periodType25);
        java.lang.Object obj27 = mutableInterval24.clone();
        org.joda.time.DateTime dateTime28 = mutableInterval24.getStart();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        mutableInterval31.setDurationAfterStart(0L);
        boolean boolean35 = mutableInterval31.equals((java.lang.Object) (-1));
        long long36 = mutableInterval31.getEndMillis();
        org.joda.time.DateTime dateTime37 = mutableInterval31.getEnd();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        mutableInterval47.setDurationAfterStart(0L);
        boolean boolean51 = mutableInterval47.equals((java.lang.Object) (-1));
        long long52 = mutableInterval47.getEndMillis();
        org.joda.time.DateTime dateTime53 = mutableInterval47.getEnd();
        boolean boolean54 = mutableInterval40.isAfter((org.joda.time.ReadableInstant) dateTime53);
        boolean boolean55 = dateTime37.isAfter((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        boolean boolean76 = mutableInterval72.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        org.joda.time.ReadablePeriod readablePeriod77 = null;
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(readablePeriod77, readableInstant78);
        long long80 = mutableInterval79.toDurationMillis();
        boolean boolean81 = mutableInterval75.isAfter((org.joda.time.ReadableInterval) mutableInterval79);
        org.joda.time.ReadableInstant readableInstant82 = null;
        boolean boolean83 = mutableInterval79.contains(readableInstant82);
        boolean boolean84 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval79);
        org.joda.time.Duration duration85 = mutableInterval79.toDuration();
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = mutableInterval24.contains((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Chronology chronology88 = dateTime53.getChronology();
        org.joda.time.Chronology chronology89 = dateTime53.getChronology();
        org.joda.time.DateTimeZone dateTimeZone90 = dateTime53.getZone();
        boolean boolean91 = mutableInterval4.isAfter((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Chronology chronology92 = mutableInterval4.getChronology();
        org.joda.time.Period period93 = mutableInterval4.toPeriod();
        long long94 = mutableInterval4.getStartMillis();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals(obj27.toString(), "2022-02-11T09:40:17.986Z/2022-02-11T09:40:17.986Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "2022-02-11T09:40:17.986Z/2022-02-11T09:40:17.986Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "2022-02-11T09:40:17.986Z/2022-02-11T09:40:17.986Z");
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1644572417986L + "'", long36 == 1644572417986L);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1644572417986L + "'", long52 == 1644572417986L);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(chronology89);
        org.junit.Assert.assertNotNull(dateTimeZone90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(chronology92);
        org.junit.Assert.assertNotNull(period93);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572417986L + "'", long94 == 1644572417986L);
    }

    @Test
    public void test03802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03802");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadablePeriod readablePeriod18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readablePeriod18, readableInstant19);
        long long21 = mutableInterval20.toDurationMillis();
        boolean boolean22 = mutableInterval16.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        boolean boolean24 = mutableInterval20.contains(readableInstant23);
        long long25 = mutableInterval20.getEndMillis();
        java.lang.String str26 = mutableInterval20.toString();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        mutableInterval36.setDurationAfterStart(0L);
        boolean boolean40 = mutableInterval36.equals((java.lang.Object) (-1));
        long long41 = mutableInterval36.getEndMillis();
        org.joda.time.DateTime dateTime42 = mutableInterval36.getEnd();
        boolean boolean43 = mutableInterval29.isAfter((org.joda.time.ReadableInstant) dateTime42);
        mutableInterval20.setStart((org.joda.time.ReadableInstant) dateTime42);
        boolean boolean45 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        boolean boolean46 = mutableInterval9.isAfterNow();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        boolean boolean53 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadablePeriod readablePeriod54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readablePeriod54, readableInstant55);
        long long57 = mutableInterval56.toDurationMillis();
        boolean boolean58 = mutableInterval52.isAfter((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = mutableInterval66.toPeriod(periodType67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period68, readableInstant69);
        long long71 = mutableInterval70.getStartMillis();
        org.joda.time.Period period72 = mutableInterval70.toPeriod();
        java.lang.String str73 = mutableInterval70.toString();
        boolean boolean74 = mutableInterval70.isAfterNow();
        boolean boolean75 = mutableInterval61.isBefore((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        mutableInterval78.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant81 = null;
        boolean boolean82 = mutableInterval78.contains(readableInstant81);
        long long83 = mutableInterval78.getEndMillis();
        org.joda.time.DateTime dateTime84 = mutableInterval78.getStart();
        boolean boolean85 = mutableInterval61.contains((org.joda.time.ReadableInstant) dateTime84);
        boolean boolean86 = mutableInterval9.isBefore((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.DateTime dateTime87 = mutableInterval61.getEnd();
        org.joda.time.Chronology chronology88 = mutableInterval61.getChronology();
        java.lang.String str89 = mutableInterval61.toString();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572418013L + "'", long25 == 1644572418013L);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "2022-02-11T09:40:18.013Z/2022-02-11T09:40:18.013Z" + "'", str26, "2022-02-11T09:40:18.013Z/2022-02-11T09:40:18.013Z");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572418013L + "'", long41 == 1644572418013L);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(period68);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572418013L + "'", long71 == 1644572418013L);
        org.junit.Assert.assertNotNull(period72);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "2022-02-11T09:40:18.013Z/2022-02-11T09:40:18.013Z" + "'", str73, "2022-02-11T09:40:18.013Z/2022-02-11T09:40:18.013Z");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1644572418013L + "'", long83 == 1644572418013L);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(chronology88);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "2022-02-11T09:40:18.013Z/2022-02-11T09:40:18.013Z" + "'", str89, "2022-02-11T09:40:18.013Z/2022-02-11T09:40:18.013Z");
    }

    @Test
    public void test03803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03803");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval2.toPeriod(periodType6);
        org.joda.time.Duration duration8 = mutableInterval2.toDuration();
        org.joda.time.ReadableDuration readableDuration9 = null;
        boolean boolean10 = duration8.isLongerThan(readableDuration9);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:18.039Z/2022-02-11T09:40:18.039Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:18.039Z/2022-02-11T09:40:18.039Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:18.039Z/2022-02-11T09:40:18.039Z");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03804");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Chronology chronology4 = mutableInterval2.getChronology();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        mutableInterval7.setDurationAfterStart(0L);
        boolean boolean11 = mutableInterval7.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        boolean boolean18 = mutableInterval14.equals((java.lang.Object) (-1));
        mutableInterval14.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean22 = mutableInterval7.contains((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadablePeriod readablePeriod30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readablePeriod30, readableInstant31);
        long long33 = mutableInterval32.toDurationMillis();
        boolean boolean34 = mutableInterval28.isAfter((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        boolean boolean36 = mutableInterval32.contains(readableInstant35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        boolean boolean43 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadablePeriod readablePeriod44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readablePeriod44, readableInstant45);
        long long47 = mutableInterval46.toDurationMillis();
        boolean boolean48 = mutableInterval42.isAfter((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        boolean boolean50 = mutableInterval46.contains(readableInstant49);
        boolean boolean51 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.Duration duration52 = mutableInterval46.toDuration();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.PeriodType periodType56 = null;
        org.joda.time.Period period57 = mutableInterval55.toPeriod(periodType56);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        boolean boolean59 = period57.isSupported(durationFieldType58);
        boolean boolean61 = period57.equals((java.lang.Object) "hi!");
        int int62 = period57.size();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        boolean boolean69 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.Period period70 = mutableInterval68.toPeriod();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.PeriodType periodType74 = null;
        org.joda.time.Period period75 = mutableInterval73.toPeriod(periodType74);
        org.joda.time.DurationFieldType durationFieldType76 = null;
        boolean boolean77 = period75.isSupported(durationFieldType76);
        boolean boolean79 = period75.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType81 = period75.getFieldType(0);
        int int82 = period70.get(durationFieldType81);
        int int83 = period57.get(durationFieldType81);
        org.joda.time.MutablePeriod mutablePeriod84 = period57.toMutablePeriod();
        org.joda.time.Period period85 = period57.toPeriod();
        mutableInterval46.setPeriodAfterStart((org.joda.time.ReadablePeriod) period57);
        mutableInterval7.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period57);
        long long90 = chronology4.add((org.joda.time.ReadablePeriod) period57, 1644572227342L, (int) (short) 100);
        org.joda.time.DateTimeField dateTimeField91 = chronology4.hourOfDay();
        org.joda.time.ReadablePartial readablePartial92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = chronology4.get(readablePartial92, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(chronology4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8 + "'", int62 == 8);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 1644572227342L + "'", long90 == 1644572227342L);
        org.junit.Assert.assertNotNull(dateTimeField91);
    }

    @Test
    public void test03805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03805");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readablePeriod16, readableInstant17);
        long long19 = mutableInterval18.toDurationMillis();
        boolean boolean20 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        boolean boolean41 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readablePeriod42, readableInstant43);
        long long45 = mutableInterval44.toDurationMillis();
        boolean boolean46 = mutableInterval40.isAfter((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        boolean boolean48 = mutableInterval44.contains(readableInstant47);
        boolean boolean49 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval30.isBefore((org.joda.time.ReadableInterval) mutableInterval59);
        boolean boolean65 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = mutableInterval68.toPeriod(periodType69);
        org.joda.time.DurationFieldType durationFieldType71 = null;
        boolean boolean72 = period70.isSupported(durationFieldType71);
        boolean boolean74 = period70.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType76 = period70.getFieldType(0);
        mutableInterval59.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period70);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period70);
        int int79 = period70.size();
        int int81 = period70.getValue((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        org.joda.time.PeriodType periodType85 = null;
        org.joda.time.Period period86 = mutableInterval84.toPeriod(periodType85);
        java.lang.Object obj87 = mutableInterval84.clone();
        org.joda.time.DateTime dateTime88 = mutableInterval84.getStart();
        org.joda.time.DateTimeZone dateTimeZone89 = dateTime88.getZone();
        org.joda.time.MutableInterval mutableInterval90 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period70, (org.joda.time.ReadableInstant) dateTime88);
        boolean boolean91 = mutableInterval90.containsNow();
        org.joda.time.DateTime dateTime92 = mutableInterval90.getStart();
        org.joda.time.Period period93 = mutableInterval90.toPeriod();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572418097L + "'", long7 == 1644572418097L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8 + "'", int79 == 8);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(obj87);
// flaky:         org.junit.Assert.assertEquals(obj87.toString(), "2022-02-11T09:40:18.097Z/2022-02-11T09:40:18.097Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "2022-02-11T09:40:18.097Z/2022-02-11T09:40:18.097Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "2022-02-11T09:40:18.097Z/2022-02-11T09:40:18.097Z");
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertNotNull(dateTimeZone89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(dateTime92);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test03806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03806");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        mutableInterval38.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant41 = null;
        boolean boolean42 = mutableInterval38.isAfter(readableInstant41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        mutableInterval38.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration72);
        mutableInterval35.setDurationAfterStart((org.joda.time.ReadableDuration) duration72);
        mutableInterval22.setDurationAfterStart((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Chronology chronology76 = mutableInterval22.getChronology();
        org.joda.time.DateTimeField dateTimeField77 = chronology76.yearOfCentury();
        org.joda.time.DurationField durationField78 = chronology76.weeks();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572418191L + "'", long7 == 1644572418191L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572418191L + "'", long23 == 1644572418191L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(durationField78);
    }

    @Test
    public void test03807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03807");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        boolean boolean42 = mutableInterval28.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean43 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean44 = mutableInterval5.contains((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.Period period52 = mutableInterval50.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period52, readableInstant53);
        boolean boolean55 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        long long70 = mutableInterval65.getEndMillis();
        java.lang.String str71 = mutableInterval65.toString();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        boolean boolean78 = mutableInterval74.overlaps((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        mutableInterval81.setDurationAfterStart(0L);
        boolean boolean85 = mutableInterval81.equals((java.lang.Object) (-1));
        long long86 = mutableInterval81.getEndMillis();
        org.joda.time.DateTime dateTime87 = mutableInterval81.getEnd();
        boolean boolean88 = mutableInterval74.isAfter((org.joda.time.ReadableInstant) dateTime87);
        mutableInterval65.setStart((org.joda.time.ReadableInstant) dateTime87);
        boolean boolean90 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        java.lang.Object obj91 = mutableInterval65.clone();
        boolean boolean92 = mutableInterval5.isBefore((org.joda.time.ReadableInterval) mutableInterval65);
        java.lang.Object obj93 = mutableInterval65.clone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z" + "'", str16, "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572418253L + "'", long24 == 1644572418253L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572418253L + "'", long40 == 1644572418253L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1644572418253L + "'", long70 == 1644572418253L);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z" + "'", str71, "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1644572418253L + "'", long86 == 1644572418253L);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj91);
// flaky:         org.junit.Assert.assertEquals(obj91.toString(), "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(obj93);
// flaky:         org.junit.Assert.assertEquals(obj93.toString(), "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "2022-02-11T09:40:18.253Z/2022-02-11T09:40:18.253Z");
    }

    @Test
    public void test03808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03808");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = mutableInterval14.toPeriod(periodType15);
        java.lang.Object obj17 = mutableInterval14.clone();
        org.joda.time.DateTime dateTime18 = mutableInterval14.getStart();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        mutableInterval21.setDurationAfterStart(0L);
        boolean boolean25 = mutableInterval21.equals((java.lang.Object) (-1));
        long long26 = mutableInterval21.getEndMillis();
        org.joda.time.DateTime dateTime27 = mutableInterval21.getEnd();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        mutableInterval37.setDurationAfterStart(0L);
        boolean boolean41 = mutableInterval37.equals((java.lang.Object) (-1));
        long long42 = mutableInterval37.getEndMillis();
        org.joda.time.DateTime dateTime43 = mutableInterval37.getEnd();
        boolean boolean44 = mutableInterval30.isAfter((org.joda.time.ReadableInstant) dateTime43);
        boolean boolean45 = dateTime27.isAfter((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        boolean boolean52 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadablePeriod readablePeriod53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readablePeriod53, readableInstant54);
        long long56 = mutableInterval55.toDurationMillis();
        boolean boolean57 = mutableInterval51.isAfter((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        boolean boolean59 = mutableInterval55.contains(readableInstant58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        boolean boolean66 = mutableInterval62.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readablePeriod67, readableInstant68);
        long long70 = mutableInterval69.toDurationMillis();
        boolean boolean71 = mutableInterval65.isAfter((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        boolean boolean73 = mutableInterval69.contains(readableInstant72);
        boolean boolean74 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.Duration duration75 = mutableInterval69.toDuration();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = mutableInterval14.contains((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Chronology chronology78 = dateTime43.getChronology();
        org.joda.time.DateTimeField dateTimeField79 = chronology78.yearOfCentury();
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(1644572129876L, 1644572137933L, chronology78);
        org.joda.time.DurationField durationField81 = chronology78.centuries();
        org.joda.time.DateTimeField dateTimeField82 = chronology78.year();
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(1644572132708L, 1644572140952L, chronology78);
        mutableInterval5.setChronology(chronology78);
        org.joda.time.DateTimeField dateTimeField85 = chronology78.minuteOfDay();
        org.joda.time.ReadablePartial readablePartial86 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long88 = chronology78.set(readablePartial86, 1644572286084L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(obj17);
// flaky:         org.junit.Assert.assertEquals(obj17.toString(), "2022-02-11T09:40:18.302Z/2022-02-11T09:40:18.302Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "2022-02-11T09:40:18.302Z/2022-02-11T09:40:18.302Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "2022-02-11T09:40:18.302Z/2022-02-11T09:40:18.302Z");
        org.junit.Assert.assertNotNull(dateTime18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572418302L + "'", long26 == 1644572418302L);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1644572418302L + "'", long42 == 1644572418302L);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(chronology78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(durationField81);
        org.junit.Assert.assertNotNull(dateTimeField82);
        org.junit.Assert.assertNotNull(dateTimeField85);
    }

    @Test
    public void test03809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03809");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.halfdayOfDay();
        org.joda.time.DurationField durationField12 = chronology8.centuries();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.weekyear();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        java.lang.Object obj21 = mutableInterval18.clone();
        org.joda.time.DateTime dateTime22 = mutableInterval18.getStart();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        boolean boolean38 = mutableInterval34.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        mutableInterval41.setDurationAfterStart(0L);
        boolean boolean45 = mutableInterval41.equals((java.lang.Object) (-1));
        long long46 = mutableInterval41.getEndMillis();
        org.joda.time.DateTime dateTime47 = mutableInterval41.getEnd();
        boolean boolean48 = mutableInterval34.isAfter((org.joda.time.ReadableInstant) dateTime47);
        boolean boolean49 = dateTime31.isAfter((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableDuration readableDuration68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readableInstant67, readableDuration68);
        boolean boolean70 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.ReadablePeriod readablePeriod71 = null;
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readablePeriod71, readableInstant72);
        long long74 = mutableInterval73.toDurationMillis();
        boolean boolean75 = mutableInterval69.isAfter((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        boolean boolean77 = mutableInterval73.contains(readableInstant76);
        boolean boolean78 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.Duration duration79 = mutableInterval73.toDuration();
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = mutableInterval18.contains((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Chronology chronology82 = dateTime47.getChronology();
        org.joda.time.DateTimeField dateTimeField83 = chronology82.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField84 = chronology82.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField85 = chronology82.dayOfWeek();
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval(1644572136401L, 1644572141513L, chronology82);
        org.joda.time.DateTimeField dateTimeField87 = chronology82.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField88 = chronology82.weekyear();
        org.joda.time.DateTimeZone dateTimeZone89 = chronology82.getZone();
        org.joda.time.Chronology chronology90 = chronology8.withZone(dateTimeZone89);
        // The following exception was thrown during execution in test generation
        try {
            long long98 = chronology90.getDateTimeMillis((int) (short) -1, (-1), 10, 100, (int) (short) 0, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 100 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals(obj21.toString(), "2022-02-11T09:40:18.361Z/2022-02-11T09:40:18.361Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "2022-02-11T09:40:18.361Z/2022-02-11T09:40:18.361Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "2022-02-11T09:40:18.361Z/2022-02-11T09:40:18.361Z");
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572418361L + "'", long30 == 1644572418361L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572418361L + "'", long46 == 1644572418361L);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(chronology82);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(dateTimeField87);
        org.junit.Assert.assertNotNull(dateTimeField88);
        org.junit.Assert.assertNotNull(dateTimeZone89);
        org.junit.Assert.assertNotNull(chronology90);
    }

    @Test
    public void test03810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03810");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        boolean boolean18 = mutableInterval5.isBefore(1644572127359L);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        mutableInterval24.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant27 = null;
        boolean boolean28 = mutableInterval24.isAfter(readableInstant27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        mutableInterval31.setDurationAfterStart(0L);
        mutableInterval31.setStartMillis(1644572127942L);
        boolean boolean36 = mutableInterval24.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        boolean boolean37 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.Period period45 = mutableInterval43.toPeriod();
        mutableInterval31.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period45);
        java.lang.Object obj47 = mutableInterval31.clone();
        org.joda.time.MutableInterval mutableInterval48 = mutableInterval31.toMutableInterval();
        org.joda.time.Period period49 = mutableInterval31.toPeriod();
        boolean boolean51 = mutableInterval31.isAfter(1644572143901L);
        boolean boolean52 = mutableInterval5.isBefore((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval31.contains(readableInstant53);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:18.409Z/2022-02-11T09:40:18.409Z" + "'", str16, "2022-02-11T09:40:18.409Z/2022-02-11T09:40:18.409Z");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(obj47);
// flaky:         org.junit.Assert.assertEquals(obj47.toString(), "2022-02-11T09:40:18.410Z/2022-02-11T09:40:18.410Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "2022-02-11T09:40:18.410Z/2022-02-11T09:40:18.410Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "2022-02-11T09:40:18.410Z/2022-02-11T09:40:18.410Z");
        org.junit.Assert.assertNotNull(mutableInterval48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test03811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03811");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology2 = mutableInterval1.getChronology();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        mutableInterval9.setInterval(1644572129143L, 1644572133904L);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        boolean boolean19 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval18);
        org.joda.time.ReadablePeriod readablePeriod20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readablePeriod20, readableInstant21);
        long long23 = mutableInterval22.toDurationMillis();
        boolean boolean24 = mutableInterval18.isAfter((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        boolean boolean28 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        java.lang.String str29 = mutableInterval18.toString();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        mutableInterval48.setDurationAfterStart(0L);
        boolean boolean52 = mutableInterval48.equals((java.lang.Object) (-1));
        long long53 = mutableInterval48.getEndMillis();
        org.joda.time.DateTime dateTime54 = mutableInterval48.getEnd();
        boolean boolean55 = mutableInterval41.isAfter((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean56 = dateTime38.isAfter((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean57 = mutableInterval18.contains((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean58 = mutableInterval9.isBefore((org.joda.time.ReadableInterval) mutableInterval18);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        mutableInterval64.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.isAfter(readableInstant67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        mutableInterval71.setDurationAfterStart(0L);
        mutableInterval71.setStartMillis(1644572127942L);
        boolean boolean76 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        boolean boolean77 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.MutableInterval mutableInterval78 = mutableInterval71.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant79 = null;
        boolean boolean80 = mutableInterval71.isAfter(readableInstant79);
        boolean boolean81 = mutableInterval9.contains((org.joda.time.ReadableInterval) mutableInterval71);
        boolean boolean82 = mutableInterval1.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.ReadableDuration readableDuration84 = null;
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval(readableInstant83, readableDuration84);
        org.joda.time.PeriodType periodType86 = null;
        org.joda.time.Period period87 = mutableInterval85.toPeriod(periodType86);
        long long88 = mutableInterval85.getEndMillis();
        boolean boolean90 = mutableInterval85.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval91 = mutableInterval85.copy();
        long long92 = mutableInterval91.getEndMillis();
        mutableInterval1.setInterval((org.joda.time.ReadableInterval) mutableInterval91);
        org.joda.time.DateTime dateTime94 = mutableInterval1.getEnd();
        org.joda.time.DateTime dateTime95 = mutableInterval1.getStart();
        org.joda.time.MutableInterval mutableInterval96 = mutableInterval1.toMutableInterval();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(chronology2);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "2022-02-11T09:40:18.479Z/2022-02-11T09:40:18.479Z" + "'", str29, "2022-02-11T09:40:18.479Z/2022-02-11T09:40:18.479Z");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572418479L + "'", long37 == 1644572418479L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1644572418479L + "'", long53 == 1644572418479L);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(mutableInterval78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period87);
// flaky:         org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1644572418479L + "'", long88 == 1644572418479L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(mutableInterval91);
// flaky:         org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1644572418479L + "'", long92 == 1644572418479L);
        org.junit.Assert.assertNotNull(dateTime94);
        org.junit.Assert.assertNotNull(dateTime95);
        org.junit.Assert.assertNotNull(mutableInterval96);
    }

    @Test
    public void test03812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03812");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        org.joda.time.Interval interval8 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readablePeriod16, readableInstant17);
        long long19 = mutableInterval18.toDurationMillis();
        boolean boolean20 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        java.lang.String str25 = mutableInterval14.toString();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = mutableInterval28.toPeriod(periodType29);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readablePeriod31, readableInstant32);
        boolean boolean34 = period30.equals((java.lang.Object) readableInstant32);
        mutableInterval14.setPeriodAfterStart((org.joda.time.ReadablePeriod) period30);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = mutableInterval38.toPeriod(periodType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = period40.isSupported(durationFieldType41);
        boolean boolean44 = period40.equals((java.lang.Object) "hi!");
        int int45 = period40.size();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        boolean boolean52 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.Period period53 = mutableInterval51.toPeriod();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.PeriodType periodType57 = null;
        org.joda.time.Period period58 = mutableInterval56.toPeriod(periodType57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = period58.isSupported(durationFieldType59);
        boolean boolean62 = period58.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType64 = period58.getFieldType(0);
        int int65 = period53.get(durationFieldType64);
        int int66 = period40.get(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType68 = period40.getFieldType(0);
        org.joda.time.PeriodType periodType69 = period40.getPeriodType();
        org.joda.time.Period period70 = mutableInterval14.toPeriod(periodType69);
        org.joda.time.Period period71 = interval8.toPeriod(periodType69);
        org.joda.time.PeriodType periodType72 = period71.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572418505L + "'", long5 == 1644572418505L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "2022-02-11T09:40:18.505Z/2022-02-11T09:40:18.505Z" + "'", str25, "2022-02-11T09:40:18.505Z/2022-02-11T09:40:18.505Z");
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType72);
    }

    @Test
    public void test03813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03813");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.MutableInterval mutableInterval4 = mutableInterval2.toMutableInterval();
        long long5 = mutableInterval4.getStartMillis();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        boolean boolean12 = mutableInterval8.overlaps((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        mutableInterval15.setDurationAfterStart(0L);
        boolean boolean19 = mutableInterval15.equals((java.lang.Object) (-1));
        long long20 = mutableInterval15.getEndMillis();
        org.joda.time.DateTime dateTime21 = mutableInterval15.getEnd();
        boolean boolean22 = mutableInterval8.isAfter((org.joda.time.ReadableInstant) dateTime21);
        java.lang.String str23 = mutableInterval8.toString();
        java.lang.String str24 = mutableInterval8.toString();
        long long25 = mutableInterval8.getStartMillis();
        boolean boolean26 = mutableInterval4.isAfter((org.joda.time.ReadableInterval) mutableInterval8);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(mutableInterval4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572418552L + "'", long5 == 1644572418552L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1644572418552L + "'", long20 == 1644572418552L);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "2022-02-11T09:40:18.552Z/2022-02-11T09:40:18.552Z" + "'", str23, "2022-02-11T09:40:18.552Z/2022-02-11T09:40:18.552Z");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "2022-02-11T09:40:18.552Z/2022-02-11T09:40:18.552Z" + "'", str24, "2022-02-11T09:40:18.552Z/2022-02-11T09:40:18.552Z");
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572418552L + "'", long25 == 1644572418552L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test03814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03814");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572181460L, 1644572383507L);
    }

    @Test
    public void test03815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03815");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        mutableInterval6.setInterval(1644572129143L, 1644572133904L);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readablePeriod17, readableInstant18);
        long long20 = mutableInterval19.toDurationMillis();
        boolean boolean21 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        java.lang.String str26 = mutableInterval15.toString();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        mutableInterval45.setDurationAfterStart(0L);
        boolean boolean49 = mutableInterval45.equals((java.lang.Object) (-1));
        long long50 = mutableInterval45.getEndMillis();
        org.joda.time.DateTime dateTime51 = mutableInterval45.getEnd();
        boolean boolean52 = mutableInterval38.isAfter((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean53 = dateTime35.isAfter((org.joda.time.ReadableInstant) dateTime51);
        boolean boolean54 = mutableInterval15.contains((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean55 = mutableInterval6.isBefore((org.joda.time.ReadableInterval) mutableInterval15);
        boolean boolean56 = mutableInterval15.isBeforeNow();
        boolean boolean58 = mutableInterval15.contains(1644572399588L);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "2022-02-11T09:40:18.627Z/2022-02-11T09:40:18.627Z" + "'", str26, "2022-02-11T09:40:18.627Z/2022-02-11T09:40:18.627Z");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572418627L + "'", long34 == 1644572418627L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1644572418627L + "'", long50 == 1644572418627L);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test03816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03816");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        boolean boolean19 = mutableInterval16.contains(readableInstant18);
        boolean boolean20 = mutableInterval10.contains((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = mutableInterval23.toPeriod(periodType24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period25, readableInstant26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readablePeriod35, readableInstant36);
        long long38 = mutableInterval37.toDurationMillis();
        boolean boolean39 = mutableInterval33.isAfter((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        boolean boolean41 = mutableInterval37.contains(readableInstant40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        boolean boolean56 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.Duration duration57 = mutableInterval51.toDuration();
        boolean boolean59 = duration57.equals((java.lang.Object) 'a');
        mutableInterval27.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration57);
        org.joda.time.DateTime dateTime61 = mutableInterval27.getStart();
        mutableInterval16.setStart((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        mutableInterval65.setDurationAfterStart(0L);
        boolean boolean69 = mutableInterval65.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        boolean boolean76 = mutableInterval72.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        org.joda.time.Period period77 = mutableInterval75.toPeriod();
        org.joda.time.Duration duration78 = mutableInterval75.toDuration();
        mutableInterval65.setDurationAfterStart((org.joda.time.ReadableDuration) duration78);
        org.joda.time.Chronology chronology80 = mutableInterval65.getChronology();
        org.joda.time.Duration duration81 = mutableInterval65.toDuration();
        org.joda.time.Duration duration82 = duration81.toDuration();
        mutableInterval16.setDurationAfterStart((org.joda.time.ReadableDuration) duration81);
        mutableInterval16.setStartMillis(1644572295788L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(chronology80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(duration82);
    }

    @Test
    public void test03817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03817");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        long long2 = mutableInterval1.getEndMillis();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        mutableInterval5.setStartMillis(1644572127942L);
        mutableInterval5.setStartMillis(1644572127679L);
        mutableInterval5.setDurationAfterStart(1644572124037L);
        org.joda.time.Period period14 = mutableInterval5.toPeriod();
        org.joda.time.Duration duration15 = mutableInterval5.toDuration();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        boolean boolean32 = mutableInterval30.isBeforeNow();
        org.joda.time.Interval interval33 = mutableInterval30.toInterval();
        org.joda.time.MutableInterval mutableInterval34 = mutableInterval30.toMutableInterval();
        org.joda.time.Duration duration35 = mutableInterval34.toDuration();
        java.lang.String str36 = duration35.toString();
        int int37 = duration15.compareTo((org.joda.time.ReadableDuration) duration35);
        mutableInterval1.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration15);
        java.lang.Object obj39 = mutableInterval1.clone();
        java.lang.String str40 = mutableInterval1.toString();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        mutableInterval45.setDurationAfterStart(0L);
        boolean boolean49 = mutableInterval45.equals((java.lang.Object) (-1));
        mutableInterval45.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval53 = mutableInterval45.copy();
        boolean boolean55 = mutableInterval45.contains(1644572125519L);
        org.joda.time.Chronology chronology56 = mutableInterval45.getChronology();
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(0L, 1644572131452L, chronology56);
        org.joda.time.Chronology chronology58 = mutableInterval57.getChronology();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        boolean boolean67 = mutableInterval63.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Period period68 = mutableInterval66.toPeriod();
        org.joda.time.Chronology chronology69 = mutableInterval66.getChronology();
        org.joda.time.DateTimeField dateTimeField70 = chronology69.monthOfYear();
        org.joda.time.DurationField durationField71 = chronology69.weekyears();
        org.joda.time.DurationField durationField72 = chronology69.centuries();
        org.joda.time.DurationField durationField73 = chronology69.weekyears();
        org.joda.time.DateTimeField dateTimeField74 = chronology69.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField75 = chronology69.dayOfYear();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(1644572145299L, 59204596786604L, chronology69);
        org.joda.time.DateTimeField dateTimeField77 = chronology69.weekyear();
        boolean boolean78 = mutableInterval57.equals((java.lang.Object) dateTimeField77);
        mutableInterval1.setInterval((org.joda.time.ReadableInterval) mutableInterval57);
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1644572134356L + "'", long2 == 1644572134356L);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(mutableInterval34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT0S" + "'", str36, "PT0S");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "1970-01-01T00:00:10.319Z/2022-02-11T09:35:34.356Z");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "1970-01-01T00:00:10.319Z/2022-02-11T09:35:34.356Z");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "1970-01-01T00:00:10.319Z/2022-02-11T09:35:34.356Z");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1970-01-01T00:00:10.319Z/2022-02-11T09:35:34.356Z" + "'", str40, "1970-01-01T00:00:10.319Z/2022-02-11T09:35:34.356Z");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(mutableInterval53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(chronology56);
        org.junit.Assert.assertNotNull(chronology58);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test03818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03818");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:02.626Z/2022-02-11T09:36:02.626Z");
        long long2 = mutableInterval1.getEndMillis();
        org.joda.time.Interval interval3 = mutableInterval1.toInterval();
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((long) 100, 1644572173501L);
        org.joda.time.DateTime dateTime7 = mutableInterval6.getStart();
        mutableInterval1.setStart((org.joda.time.ReadableInstant) dateTime7);
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1644572162626L + "'", long2 == 1644572162626L);
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertNotNull(dateTime7);
    }

    @Test
    public void test03819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03819");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology2 = mutableInterval1.getChronology();
        org.joda.time.DateTimeField dateTimeField3 = chronology2.monthOfYear();
        org.joda.time.DateTimeField dateTimeField4 = chronology2.millisOfDay();
        org.joda.time.DateTimeField dateTimeField5 = chronology2.hourOfHalfday();
        org.joda.time.Chronology chronology6 = chronology2.withUTC();
        org.joda.time.DurationField durationField7 = chronology6.millis();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(chronology2);
        org.junit.Assert.assertNotNull(dateTimeField3);
        org.junit.Assert.assertNotNull(dateTimeField4);
        org.junit.Assert.assertNotNull(dateTimeField5);
        org.junit.Assert.assertNotNull(chronology6);
        org.junit.Assert.assertNotNull(durationField7);
    }

    @Test
    public void test03820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03820");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.DateTime dateTime31 = mutableInterval2.getEnd();
        boolean boolean33 = mutableInterval2.contains(1644572125616L);
        org.joda.time.DateTime dateTime34 = mutableInterval2.getStart();
        boolean boolean35 = mutableInterval2.containsNow();
        boolean boolean37 = mutableInterval2.isBefore(1644572125178L);
        org.joda.time.MutableInterval mutableInterval38 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        mutableInterval41.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant44 = null;
        boolean boolean45 = mutableInterval41.contains(readableInstant44);
        long long46 = mutableInterval41.getEndMillis();
        org.joda.time.DateTime dateTime47 = mutableInterval41.getStart();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.Period period52 = mutableInterval50.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period52, readableInstant53);
        long long55 = mutableInterval54.getStartMillis();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        mutableInterval58.setDurationAfterStart(0L);
        boolean boolean62 = mutableInterval58.equals((java.lang.Object) (-1));
        boolean boolean63 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = mutableInterval66.toPeriod(periodType67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period68, readableInstant69);
        long long71 = mutableInterval70.getStartMillis();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        mutableInterval74.setDurationAfterStart(0L);
        boolean boolean78 = mutableInterval74.equals((java.lang.Object) (-1));
        boolean boolean79 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        boolean boolean80 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        boolean boolean81 = mutableInterval54.containsNow();
        boolean boolean82 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.MutableInterval mutableInterval83 = mutableInterval54.copy();
        boolean boolean84 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval54);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval54.setInterval(1644572240361L, 1644572148624L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(mutableInterval38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572418793L + "'", long46 == 1644572418793L);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(period52);
// flaky:         org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1644572418793L + "'", long55 == 1644572418793L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(period68);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572418793L + "'", long71 == 1644572418793L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(mutableInterval83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test03821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03821");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        org.joda.time.DateTimeField dateTimeField70 = chronology67.yearOfEra();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:18.816Z/2022-02-11T09:40:18.816Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:18.816Z/2022-02-11T09:40:18.816Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:18.816Z/2022-02-11T09:40:18.816Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572418816L + "'", long14 == 1644572418816L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572418816L + "'", long30 == 1644572418816L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
    }

    @Test
    public void test03822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03822");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        boolean boolean33 = mutableInterval6.containsNow();
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readablePeriod34, readableInstant35);
        org.joda.time.Chronology chronology37 = null;
        mutableInterval36.setChronology(chronology37);
        org.joda.time.Chronology chronology39 = mutableInterval36.getChronology();
        boolean boolean40 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.Interval interval41 = mutableInterval6.toInterval();
        mutableInterval6.setStartMillis(1644572170276L);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572418840L + "'", long7 == 1644572418840L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572418840L + "'", long23 == 1644572418840L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(chronology39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval41);
    }

    @Test
    public void test03823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03823");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        boolean boolean42 = mutableInterval28.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean43 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean44 = mutableInterval5.contains((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.Period period52 = mutableInterval50.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period52, readableInstant53);
        boolean boolean55 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        long long70 = mutableInterval65.getEndMillis();
        java.lang.String str71 = mutableInterval65.toString();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        boolean boolean78 = mutableInterval74.overlaps((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        mutableInterval81.setDurationAfterStart(0L);
        boolean boolean85 = mutableInterval81.equals((java.lang.Object) (-1));
        long long86 = mutableInterval81.getEndMillis();
        org.joda.time.DateTime dateTime87 = mutableInterval81.getEnd();
        boolean boolean88 = mutableInterval74.isAfter((org.joda.time.ReadableInstant) dateTime87);
        mutableInterval65.setStart((org.joda.time.ReadableInstant) dateTime87);
        boolean boolean90 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        java.lang.Object obj91 = mutableInterval65.clone();
        boolean boolean92 = mutableInterval5.isBefore((org.joda.time.ReadableInterval) mutableInterval65);
        boolean boolean93 = mutableInterval65.isBeforeNow();
        org.joda.time.MutableInterval mutableInterval94 = mutableInterval65.copy();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:18.864Z/2022-02-11T09:40:18.864Z" + "'", str16, "2022-02-11T09:40:18.864Z/2022-02-11T09:40:18.864Z");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572418864L + "'", long24 == 1644572418864L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572418864L + "'", long40 == 1644572418864L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1644572418864L + "'", long70 == 1644572418864L);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "2022-02-11T09:40:18.864Z/2022-02-11T09:40:18.864Z" + "'", str71, "2022-02-11T09:40:18.864Z/2022-02-11T09:40:18.864Z");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1644572418864L + "'", long86 == 1644572418864L);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj91);
// flaky:         org.junit.Assert.assertEquals(obj91.toString(), "2022-02-11T09:40:18.864Z/2022-02-11T09:40:18.864Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "2022-02-11T09:40:18.864Z/2022-02-11T09:40:18.864Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "2022-02-11T09:40:18.864Z/2022-02-11T09:40:18.864Z");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(mutableInterval94);
    }

    @Test
    public void test03824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03824");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.yearOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField72 = chronology68.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField73 = chronology68.dayOfMonth();
        org.joda.time.DateTimeZone dateTimeZone74 = chronology68.getZone();
        org.joda.time.DateTimeField dateTimeField75 = chronology68.millisOfDay();
        org.joda.time.DurationField durationField76 = chronology68.centuries();
        org.joda.time.DateTimeField dateTimeField77 = chronology68.yearOfCentury();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(1644572370751L, 1644572248030L, chronology68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:18.891Z/2022-02-11T09:40:18.891Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:18.891Z/2022-02-11T09:40:18.891Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:18.891Z/2022-02-11T09:40:18.891Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572418891L + "'", long16 == 1644572418891L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572418891L + "'", long32 == 1644572418891L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeZone74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
    }

    @Test
    public void test03825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03825");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval4 = mutableInterval2.toInterval();
        org.joda.time.MutableInterval mutableInterval5 = interval4.toMutableInterval();
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readablePeriod6, readableInstant7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        boolean boolean16 = mutableInterval8.isAfter((org.joda.time.ReadableInterval) mutableInterval15);
        long long17 = mutableInterval8.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        long long25 = mutableInterval20.getEndMillis();
        org.joda.time.DateTime dateTime26 = mutableInterval20.getEnd();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        mutableInterval36.setDurationAfterStart(0L);
        boolean boolean40 = mutableInterval36.equals((java.lang.Object) (-1));
        long long41 = mutableInterval36.getEndMillis();
        org.joda.time.DateTime dateTime42 = mutableInterval36.getEnd();
        boolean boolean43 = mutableInterval29.isAfter((org.joda.time.ReadableInstant) dateTime42);
        boolean boolean44 = dateTime26.isAfter((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        boolean boolean65 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadablePeriod readablePeriod66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readablePeriod66, readableInstant67);
        long long69 = mutableInterval68.toDurationMillis();
        boolean boolean70 = mutableInterval64.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.contains(readableInstant71);
        boolean boolean73 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.Duration duration74 = mutableInterval68.toDuration();
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = mutableInterval8.equals((java.lang.Object) dateTime42);
        boolean boolean78 = mutableInterval8.contains(1644572131888L);
        boolean boolean80 = mutableInterval8.isBefore(1644572134473L);
        mutableInterval5.setInterval((org.joda.time.ReadableInterval) mutableInterval8);
        org.joda.time.ReadableInstant readableInstant82 = null;
        boolean boolean83 = mutableInterval5.isAfter(readableInstant82);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572418911L + "'", long25 == 1644572418911L);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572418911L + "'", long41 == 1644572418911L);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test03826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03826");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        boolean boolean6 = period4.isSupported(durationFieldType5);
        boolean boolean8 = period4.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType10 = period4.getFieldType(0);
        org.joda.time.Period period11 = period4.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod12 = period11.toMutablePeriod();
        org.joda.time.Period period13 = mutablePeriod12.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod14 = period13.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod15 = period13.toMutablePeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
    }

    @Test
    public void test03827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03827");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        java.lang.Object obj12 = mutableInterval9.clone();
        org.joda.time.DateTime dateTime13 = mutableInterval9.getStart();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getEnd();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        boolean boolean39 = mutableInterval25.isAfter((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean40 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        boolean boolean69 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.Duration duration70 = mutableInterval64.toDuration();
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = mutableInterval9.contains((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean73 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.Period period78 = mutableInterval76.toPeriod(periodType77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period78, readableInstant79);
        boolean boolean81 = dateTime38.equals((java.lang.Object) mutableInterval80);
        org.joda.time.Chronology chronology82 = dateTime38.getChronology();
        org.joda.time.DateTimeField dateTimeField83 = chronology82.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField84 = chronology82.clockhourOfHalfday();
        org.joda.time.DurationField durationField85 = chronology82.hours();
        org.joda.time.DateTimeField dateTimeField86 = chronology82.secondOfMinute();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(obj12);
// flaky:         org.junit.Assert.assertEquals(obj12.toString(), "2022-02-11T09:40:18.942Z/2022-02-11T09:40:18.942Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "2022-02-11T09:40:18.942Z/2022-02-11T09:40:18.942Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "2022-02-11T09:40:18.942Z/2022-02-11T09:40:18.942Z");
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572418942L + "'", long21 == 1644572418942L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572418942L + "'", long37 == 1644572418942L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(chronology82);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(durationField85);
        org.junit.Assert.assertNotNull(dateTimeField86);
    }

    @Test
    public void test03828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03828");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        long long11 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        boolean boolean18 = mutableInterval14.equals((java.lang.Object) (-1));
        long long19 = mutableInterval14.getEndMillis();
        org.joda.time.DateTime dateTime20 = mutableInterval14.getEnd();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        boolean boolean37 = mutableInterval23.isAfter((org.joda.time.ReadableInstant) dateTime36);
        boolean boolean38 = dateTime20.isAfter((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readablePeriod46, readableInstant47);
        long long49 = mutableInterval48.toDurationMillis();
        boolean boolean50 = mutableInterval44.isAfter((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        boolean boolean52 = mutableInterval48.contains(readableInstant51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        boolean boolean59 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadablePeriod readablePeriod60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readablePeriod60, readableInstant61);
        long long63 = mutableInterval62.toDurationMillis();
        boolean boolean64 = mutableInterval58.isAfter((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        boolean boolean66 = mutableInterval62.contains(readableInstant65);
        boolean boolean67 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.Duration duration68 = mutableInterval62.toDuration();
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = mutableInterval2.equals((java.lang.Object) dateTime36);
        mutableInterval2.setDurationBeforeEnd(1644572168130L);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval2.setEndMillis(183925L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1644572418997L + "'", long19 == 1644572418997L);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572418997L + "'", long35 == 1644572418997L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test03829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03829");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.minuteOfDay();
        org.joda.time.DurationField durationField10 = chronology8.hours();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.weekOfWeekyear();
        // The following exception was thrown during execution in test generation
        try {
            long long18 = chronology8.getDateTimeMillis((int) '#', (-1), (int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
    }

    @Test
    public void test03830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03830");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.DateTimeZone dateTimeZone7 = dateTime6.getZone();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = mutableInterval10.toPeriod(periodType11);
        java.lang.Object obj13 = mutableInterval10.clone();
        org.joda.time.DateTime dateTime14 = mutableInterval10.getStart();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval10.contains((org.joda.time.ReadableInstant) dateTime39);
        mutableInterval10.setStartMillis(1644572128269L);
        org.joda.time.DateTime dateTime76 = mutableInterval10.getEnd();
        boolean boolean77 = dateTime6.isEqual((org.joda.time.ReadableInstant) dateTime76);
        org.joda.time.Instant instant78 = dateTime76.toInstant();
        org.joda.time.DateTimeZone dateTimeZone79 = instant78.getZone();
        org.joda.time.DateTimeZone dateTimeZone80 = instant78.getZone();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.ReadableDuration readableDuration82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readableInstant81, readableDuration82);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.ReadableDuration readableDuration85 = null;
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval(readableInstant84, readableDuration85);
        boolean boolean87 = mutableInterval83.overlaps((org.joda.time.ReadableInterval) mutableInterval86);
        org.joda.time.ReadablePeriod readablePeriod88 = null;
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.MutableInterval mutableInterval90 = new org.joda.time.MutableInterval(readablePeriod88, readableInstant89);
        long long91 = mutableInterval90.toDurationMillis();
        boolean boolean92 = mutableInterval86.isAfter((org.joda.time.ReadableInterval) mutableInterval90);
        org.joda.time.ReadableInstant readableInstant93 = null;
        org.joda.time.ReadableDuration readableDuration94 = null;
        org.joda.time.MutableInterval mutableInterval95 = new org.joda.time.MutableInterval(readableInstant93, readableDuration94);
        boolean boolean96 = mutableInterval86.overlaps((org.joda.time.ReadableInterval) mutableInterval95);
        boolean boolean97 = mutableInterval95.isBeforeNow();
        org.joda.time.DateTime dateTime98 = mutableInterval95.getEnd();
        org.joda.time.MutableInterval mutableInterval99 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) instant78, (org.joda.time.ReadableInstant) dateTime98);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:19.029Z/2022-02-11T09:40:19.029Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:19.029Z/2022-02-11T09:40:19.029Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:19.029Z/2022-02-11T09:40:19.029Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertNotNull(dateTimeZone7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals(obj13.toString(), "2022-02-11T09:40:19.029Z/2022-02-11T09:40:19.029Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "2022-02-11T09:40:19.029Z/2022-02-11T09:40:19.029Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "2022-02-11T09:40:19.029Z/2022-02-11T09:40:19.029Z");
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572419029L + "'", long22 == 1644572419029L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572419029L + "'", long38 == 1644572419029L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(instant78);
        org.junit.Assert.assertNotNull(dateTimeZone79);
        org.junit.Assert.assertNotNull(dateTimeZone80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(dateTime98);
    }

    @Test
    public void test03831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03831");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        java.lang.Object obj9 = mutableInterval2.clone();
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval();
        org.joda.time.DateTime dateTime11 = mutableInterval10.getEnd();
        boolean boolean12 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.Period period13 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getEnd();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        boolean boolean39 = mutableInterval25.isAfter((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean40 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime38);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.MutableInterval mutableInterval42 = mutableInterval2.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval43 = mutableInterval42.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.Period period48 = mutableInterval46.toPeriod(periodType47);
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(1644572149850L, 1644572157887L);
        org.joda.time.Duration duration52 = mutableInterval51.toDuration();
        long long53 = mutableInterval51.getEndMillis();
        mutableInterval46.setInterval((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.DateTime dateTime55 = mutableInterval51.getStart();
        boolean boolean56 = mutableInterval42.contains((org.joda.time.ReadableInstant) dateTime55);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572419093L + "'", long7 == 1644572419093L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:19.093Z/2022-02-11T09:40:19.093Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:19.093Z/2022-02-11T09:40:19.093Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:19.093Z/2022-02-11T09:40:19.093Z");
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572419093L + "'", long21 == 1644572419093L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572419093L + "'", long37 == 1644572419093L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(mutableInterval42);
        org.junit.Assert.assertNotNull(mutableInterval43);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1644572157887L + "'", long53 == 1644572157887L);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test03832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03832");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period22, readableInstant23);
        long long25 = mutableInterval24.getStartMillis();
        boolean boolean26 = interval17.isAfter((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.MutableInterval mutableInterval27 = mutableInterval24.copy();
        java.lang.String str28 = mutableInterval27.toString();
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        mutableInterval48.setDurationAfterStart(0L);
        boolean boolean52 = mutableInterval48.equals((java.lang.Object) (-1));
        long long53 = mutableInterval48.getEndMillis();
        org.joda.time.DateTime dateTime54 = mutableInterval48.getEnd();
        boolean boolean55 = mutableInterval41.isAfter((org.joda.time.ReadableInstant) dateTime54);
        boolean boolean56 = dateTime38.isAfter((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        boolean boolean77 = mutableInterval73.overlaps((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.ReadablePeriod readablePeriod78 = null;
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readablePeriod78, readableInstant79);
        long long81 = mutableInterval80.toDurationMillis();
        boolean boolean82 = mutableInterval76.isAfter((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.ReadableInstant readableInstant83 = null;
        boolean boolean84 = mutableInterval80.contains(readableInstant83);
        boolean boolean85 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.Duration duration86 = mutableInterval80.toDuration();
        org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableDuration) duration86);
        java.lang.String str88 = dateTime54.toString();
        org.joda.time.ReadablePeriod readablePeriod89 = null;
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.MutableInterval mutableInterval91 = new org.joda.time.MutableInterval(readablePeriod89, readableInstant90);
        long long92 = mutableInterval91.toDurationMillis();
        org.joda.time.DateTime dateTime93 = mutableInterval91.getStart();
        boolean boolean94 = dateTime54.isBefore((org.joda.time.ReadableInstant) dateTime93);
        mutableInterval29.setEnd((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.PeriodType periodType96 = null;
        org.joda.time.Period period97 = mutableInterval29.toPeriod(periodType96);
        org.joda.time.DateTime dateTime98 = mutableInterval29.getStart();
        mutableInterval27.setStart((org.joda.time.ReadableInstant) dateTime98);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(period22);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572419187L + "'", long25 == 1644572419187L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(mutableInterval27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "2022-02-11T09:40:19.187Z/2022-02-11T09:40:19.187Z" + "'", str28, "2022-02-11T09:40:19.187Z/2022-02-11T09:40:19.187Z");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572419187L + "'", long37 == 1644572419187L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1644572419187L + "'", long53 == 1644572419187L);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(duration86);
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "2022-02-11T09:40:19.187Z" + "'", str88, "2022-02-11T09:40:19.187Z");
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
        org.junit.Assert.assertNotNull(dateTime93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(period97);
        org.junit.Assert.assertNotNull(dateTime98);
    }

    @Test
    public void test03833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03833");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTime dateTime71 = mutableInterval70.getEnd();
        java.lang.String str72 = mutableInterval70.toString();
        org.joda.time.Chronology chronology73 = mutableInterval70.getChronology();
        org.joda.time.DateTimeField dateTimeField74 = chronology73.millisOfDay();
        org.joda.time.DateTimeField dateTimeField75 = chronology73.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.minuteOfHour();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:19.221Z/2022-02-11T09:40:19.221Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:19.221Z/2022-02-11T09:40:19.221Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:19.221Z/2022-02-11T09:40:19.221Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572419221L + "'", long16 == 1644572419221L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572419221L + "'", long32 == 1644572419221L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str72, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
    }

    @Test
    public void test03834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03834");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        boolean boolean28 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadablePeriod readablePeriod36 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readablePeriod36, readableInstant37);
        long long39 = mutableInterval38.toDurationMillis();
        boolean boolean40 = mutableInterval34.isAfter((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        boolean boolean42 = mutableInterval38.contains(readableInstant41);
        boolean boolean43 = mutableInterval9.isBefore((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.MutableInterval mutableInterval44 = mutableInterval38.toMutableInterval();
        org.joda.time.DateTime dateTime45 = mutableInterval44.getStart();
        org.joda.time.Period period46 = mutableInterval44.toPeriod();
        org.joda.time.Chronology chronology47 = mutableInterval44.getChronology();
        org.joda.time.Period period48 = mutableInterval44.toPeriod();
        org.joda.time.Duration duration49 = mutableInterval44.toDuration();
        org.joda.time.Period period50 = duration49.toPeriod();
        java.lang.String str51 = period50.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(mutableInterval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT0S" + "'", str51, "PT0S");
    }

    @Test
    public void test03835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03835");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Interval interval31 = mutableInterval2.toInterval();
        org.joda.time.Chronology chronology32 = mutableInterval2.getChronology();
        org.joda.time.DurationField durationField33 = chronology32.eras();
        org.joda.time.DateTimeField dateTimeField34 = chronology32.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField35 = chronology32.clockhourOfDay();
        org.joda.time.DateTimeZone dateTimeZone36 = chronology32.getZone();
        org.joda.time.DateTimeField dateTimeField37 = chronology32.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField38 = chronology32.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField39 = chronology32.hourOfDay();
        org.joda.time.DateTimeField dateTimeField40 = chronology32.secondOfMinute();
        org.joda.time.DurationField durationField41 = chronology32.eras();
        org.joda.time.DateTimeField dateTimeField42 = chronology32.secondOfDay();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(durationField33);
        org.junit.Assert.assertNotNull(dateTimeField34);
        org.junit.Assert.assertNotNull(dateTimeField35);
        org.junit.Assert.assertNotNull(dateTimeZone36);
        org.junit.Assert.assertNotNull(dateTimeField37);
        org.junit.Assert.assertNotNull(dateTimeField38);
        org.junit.Assert.assertNotNull(dateTimeField39);
        org.junit.Assert.assertNotNull(dateTimeField40);
        org.junit.Assert.assertNotNull(durationField41);
        org.junit.Assert.assertNotNull(dateTimeField42);
    }

    @Test
    public void test03836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03836");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTime dateTime71 = mutableInterval70.getEnd();
        java.lang.String str72 = mutableInterval70.toString();
        org.joda.time.Chronology chronology73 = mutableInterval70.getChronology();
        org.joda.time.DurationField durationField74 = chronology73.minutes();
        org.joda.time.DateTimeField dateTimeField75 = chronology73.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.era();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:19.302Z/2022-02-11T09:40:19.302Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:19.302Z/2022-02-11T09:40:19.302Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:19.302Z/2022-02-11T09:40:19.302Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572419302L + "'", long16 == 1644572419302L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572419302L + "'", long32 == 1644572419302L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str72, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
    }

    @Test
    public void test03837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03837");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        long long16 = mutableInterval10.toDurationMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval10.getEnd();
        long long18 = mutableInterval10.getStartMillis();
        org.joda.time.MutableInterval mutableInterval19 = mutableInterval10.copy();
        org.joda.time.Interval interval20 = mutableInterval19.toInterval();
        mutableInterval19.setDurationAfterStart(1644572387210L);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572419355L + "'", long7 == 1644572419355L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(dateTime17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572419355L + "'", long18 == 1644572419355L);
        org.junit.Assert.assertNotNull(mutableInterval19);
        org.junit.Assert.assertNotNull(interval20);
    }

    @Test
    public void test03838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03838");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        mutableInterval9.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean17 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval9);
        java.lang.Object obj18 = mutableInterval9.clone();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        mutableInterval21.setDurationAfterStart(0L);
        boolean boolean25 = mutableInterval21.equals((java.lang.Object) (-1));
        mutableInterval21.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval29 = mutableInterval21.copy();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        boolean boolean38 = mutableInterval35.contains(readableInstant37);
        boolean boolean39 = mutableInterval29.contains((org.joda.time.ReadableInterval) mutableInterval35);
        boolean boolean41 = mutableInterval35.contains(1644572129419L);
        boolean boolean42 = mutableInterval9.isBefore((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.MutableInterval mutableInterval43 = mutableInterval9.toMutableInterval();
        org.joda.time.Interval interval44 = mutableInterval9.toInterval();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mutableInterval29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mutableInterval43);
        org.junit.Assert.assertNotNull(interval44);
    }

    @Test
    public void test03839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03839");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTime dateTime71 = mutableInterval70.getEnd();
        java.lang.String str72 = mutableInterval70.toString();
        org.joda.time.Chronology chronology73 = mutableInterval70.getChronology();
        org.joda.time.DurationField durationField74 = chronology73.minutes();
        org.joda.time.Chronology chronology75 = chronology73.withUTC();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.secondOfDay();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:19.425Z/2022-02-11T09:40:19.425Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:19.425Z/2022-02-11T09:40:19.425Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:19.425Z/2022-02-11T09:40:19.425Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572419425L + "'", long16 == 1644572419425L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572419425L + "'", long32 == 1644572419425L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str72, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
    }

    @Test
    public void test03840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03840");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField70 = chronology66.weeks();
        org.joda.time.Chronology chronology71 = chronology66.withUTC();
        org.joda.time.DurationField durationField72 = chronology66.days();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.clockhourOfDay();
        org.joda.time.DurationField durationField74 = chronology66.months();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:19.547Z/2022-02-11T09:40:19.547Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:19.547Z/2022-02-11T09:40:19.547Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:19.547Z/2022-02-11T09:40:19.547Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572419547L + "'", long14 == 1644572419547L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572419547L + "'", long30 == 1644572419547L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(durationField74);
    }

    @Test
    public void test03841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03841");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        org.joda.time.Chronology chronology13 = mutableInterval2.getChronology();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readablePeriod35, readableInstant36);
        long long38 = mutableInterval37.toDurationMillis();
        boolean boolean39 = mutableInterval33.isAfter((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        boolean boolean41 = mutableInterval37.contains(readableInstant40);
        boolean boolean42 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.Duration duration43 = mutableInterval37.toDuration();
        boolean boolean44 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.Period period52 = mutableInterval50.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period52, readableInstant53);
        boolean boolean55 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.Period period56 = mutableInterval47.toPeriod();
        boolean boolean57 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.Interval interval58 = mutableInterval2.toInterval();
        java.lang.String str59 = interval58.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(chronology13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z" + "'", str59, "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
    }

    @Test
    public void test03842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03842");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        java.lang.Object obj9 = mutableInterval2.clone();
        org.joda.time.Duration duration10 = mutableInterval2.toDuration();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = mutableInterval13.toPeriod(periodType14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period15, readableInstant16);
        long long18 = mutableInterval17.getStartMillis();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        mutableInterval21.setDurationAfterStart(0L);
        boolean boolean25 = mutableInterval21.equals((java.lang.Object) (-1));
        boolean boolean26 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.Duration duration27 = mutableInterval21.toDuration();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        mutableInterval30.setStartMillis(1644572127942L);
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        mutableInterval30.setDurationAfterStart((org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration27.equals((java.lang.Object) duration65);
        boolean boolean68 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration27);
        long long69 = duration10.getMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572419646L + "'", long7 == 1644572419646L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:19.646Z/2022-02-11T09:40:19.646Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:19.646Z/2022-02-11T09:40:19.646Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:19.646Z/2022-02-11T09:40:19.646Z");
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period15);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572419646L + "'", long18 == 1644572419646L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(duration27);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572419646L + "'", long35 == 1644572419646L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
    }

    @Test
    public void test03843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03843");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.Period period25 = mutableInterval23.toPeriod();
        org.joda.time.Chronology chronology26 = mutableInterval23.getChronology();
        org.joda.time.DateTimeField dateTimeField27 = chronology26.monthOfYear();
        org.joda.time.DurationField durationField28 = chronology26.minutes();
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(1644572137789L, 1644572154868L, chronology26);
        boolean boolean30 = mutableInterval14.isBefore((org.joda.time.ReadableInterval) mutableInterval29);
        mutableInterval29.setDurationAfterStart(1644572152557L);
        boolean boolean33 = mutableInterval29.isAfterNow();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(chronology26);
        org.junit.Assert.assertNotNull(dateTimeField27);
        org.junit.Assert.assertNotNull(durationField28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test03844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03844");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        org.joda.time.DateTimeField dateTimeField70 = chronology67.minuteOfHour();
        org.joda.time.DurationField durationField71 = chronology67.days();
        org.joda.time.ReadablePartial readablePartial72 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long74 = chronology67.set(readablePartial72, 1644572213946L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:19.678Z/2022-02-11T09:40:19.678Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:19.678Z/2022-02-11T09:40:19.678Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:19.678Z/2022-02-11T09:40:19.678Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572419678L + "'", long14 == 1644572419678L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572419678L + "'", long30 == 1644572419678L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
    }

    @Test
    public void test03845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03845");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone72 = chronology70.getZone();
        org.joda.time.Chronology chronology73 = chronology70.withUTC();
        mutableInterval2.setChronology(chronology73);
        org.joda.time.DurationField durationField75 = chronology73.months();
        org.joda.time.DurationField durationField76 = chronology73.millis();
        org.joda.time.Chronology chronology77 = chronology73.withUTC();
        org.joda.time.DateTimeField dateTimeField78 = chronology73.yearOfEra();
        org.joda.time.DateTimeField dateTimeField79 = chronology73.dayOfYear();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:19.711Z/2022-02-11T09:40:19.711Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:19.711Z/2022-02-11T09:40:19.711Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:19.711Z/2022-02-11T09:40:19.711Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572419711L + "'", long18 == 1644572419711L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572419712L + "'", long34 == 1644572419712L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeZone72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
    }

    @Test
    public void test03846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03846");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        boolean boolean19 = mutableInterval16.contains(readableInstant18);
        boolean boolean20 = mutableInterval10.contains((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = mutableInterval26.toPeriod(periodType27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period28, readableInstant29);
        boolean boolean31 = mutableInterval23.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Period period32 = mutableInterval23.toPeriod();
        boolean boolean33 = mutableInterval16.contains((org.joda.time.ReadableInterval) mutableInterval23);
        mutableInterval23.setDurationBeforeEnd(1644572156469L);
        long long36 = mutableInterval23.toDurationMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1644572156469L + "'", long36 == 1644572156469L);
    }

    @Test
    public void test03847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03847");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        mutableInterval2.setEndMillis(1644572128327L);
        org.joda.time.Period period77 = mutableInterval2.toPeriod();
        org.joda.time.Duration duration78 = mutableInterval2.toDuration();
        org.joda.time.Period period79 = mutableInterval2.toPeriod();
        org.joda.time.PeriodType periodType80 = null;
        org.joda.time.Period period81 = mutableInterval2.toPeriod(periodType80);
        int int82 = period81.size();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572419856L + "'", long22 == 1644572419856L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572419856L + "'", long38 == 1644572419856L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 8 + "'", int82 == 8);
    }

    @Test
    public void test03848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03848");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        boolean boolean71 = mutableInterval70.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        boolean boolean78 = mutableInterval74.overlaps((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.Period period79 = mutableInterval77.toPeriod();
        org.joda.time.Chronology chronology80 = mutableInterval77.getChronology();
        org.joda.time.DateTimeField dateTimeField81 = chronology80.monthOfYear();
        org.joda.time.DurationField durationField82 = chronology80.weekyears();
        mutableInterval70.setChronology(chronology80);
        org.joda.time.Period period84 = mutableInterval70.toPeriod();
        int int85 = period84.size();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:19.901Z/2022-02-11T09:40:19.901Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:19.901Z/2022-02-11T09:40:19.901Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:19.901Z/2022-02-11T09:40:19.901Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572419901L + "'", long16 == 1644572419901L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572419901L + "'", long32 == 1644572419901L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(chronology80);
        org.junit.Assert.assertNotNull(dateTimeField81);
        org.junit.Assert.assertNotNull(durationField82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 8 + "'", int85 == 8);
    }

    @Test
    public void test03849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03849");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        mutableInterval9.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean17 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval28 = mutableInterval20.copy();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        boolean boolean37 = mutableInterval34.contains(readableInstant36);
        boolean boolean38 = mutableInterval28.contains((org.joda.time.ReadableInterval) mutableInterval34);
        boolean boolean39 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = mutableInterval34.toPeriod(periodType40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.Period period49 = mutableInterval47.toPeriod();
        org.joda.time.Duration duration50 = mutableInterval47.toDuration();
        long long51 = duration50.getMillis();
        java.lang.String str52 = duration50.toString();
        mutableInterval34.setDurationAfterStart((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.PeriodType periodType57 = null;
        org.joda.time.Period period58 = mutableInterval56.toPeriod(periodType57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period58, readableInstant59);
        long long61 = mutableInterval60.getStartMillis();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        mutableInterval64.setDurationAfterStart(0L);
        boolean boolean68 = mutableInterval64.equals((java.lang.Object) (-1));
        boolean boolean69 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        boolean boolean76 = mutableInterval72.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        org.joda.time.Period period77 = mutableInterval75.toPeriod();
        org.joda.time.Duration duration78 = mutableInterval75.toDuration();
        mutableInterval64.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration78);
        java.lang.Object obj80 = null;
        boolean boolean81 = duration78.equals(obj80);
        int int82 = duration50.compareTo((org.joda.time.ReadableDuration) duration78);
        java.lang.String str83 = duration50.toString();
        org.joda.time.Period period84 = duration50.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType86 = period84.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(mutableInterval28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0S" + "'", str52, "PT0S");
        org.junit.Assert.assertNotNull(period58);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572420011L + "'", long61 == 1644572420011L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT0S" + "'", str83, "PT0S");
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test03850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03850");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        boolean boolean9 = mutableInterval5.isAfter(readableInstant8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        mutableInterval12.setStartMillis(1644572127942L);
        boolean boolean17 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        boolean boolean18 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.Period period26 = mutableInterval24.toPeriod();
        mutableInterval12.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period26);
        java.lang.Object obj28 = mutableInterval12.clone();
        org.joda.time.MutableInterval mutableInterval29 = mutableInterval12.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        mutableInterval32.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period40 = mutableInterval32.toPeriod();
        org.joda.time.MutableInterval mutableInterval41 = mutableInterval32.toMutableInterval();
        boolean boolean42 = mutableInterval29.contains((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.DateTime dateTime43 = mutableInterval29.getEnd();
        org.joda.time.Interval interval44 = mutableInterval29.toInterval();
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.DateTime dateTime46 = interval45.getStart();
        org.joda.time.DateTimeZone dateTimeZone47 = dateTime46.getZone();
        long long48 = dateTime46.getMillis();
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = dateTime46.get(dateTimeFieldType49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals(obj28.toString(), "2022-02-11T09:40:20.032Z/2022-02-11T09:40:20.032Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "2022-02-11T09:40:20.032Z/2022-02-11T09:40:20.032Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "2022-02-11T09:40:20.032Z/2022-02-11T09:40:20.032Z");
        org.junit.Assert.assertNotNull(mutableInterval29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(mutableInterval41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(dateTimeZone47);
// flaky:         org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1644572420032L + "'", long48 == 1644572420032L);
    }

    @Test
    public void test03851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03851");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval1 = new org.joda.time.MutableInterval((java.lang.Object) 1644572222499L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03852");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        long long2 = mutableInterval1.getEndMillis();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        boolean boolean9 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval8);
        org.joda.time.ReadablePeriod readablePeriod10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readablePeriod10, readableInstant11);
        long long13 = mutableInterval12.toDurationMillis();
        boolean boolean14 = mutableInterval8.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval8.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        boolean boolean19 = mutableInterval17.isBeforeNow();
        org.joda.time.Interval interval20 = mutableInterval17.toInterval();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        mutableInterval23.setDurationAfterStart(0L);
        boolean boolean27 = mutableInterval23.equals((java.lang.Object) (-1));
        mutableInterval23.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean31 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.Duration duration32 = mutableInterval17.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration34 = duration32.toDuration();
        mutableInterval1.setDurationAfterStart((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        mutableInterval38.setDurationAfterStart(0L);
        boolean boolean42 = mutableInterval38.equals((java.lang.Object) (-1));
        mutableInterval38.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval46 = mutableInterval38.copy();
        long long47 = mutableInterval38.getEndMillis();
        boolean boolean48 = mutableInterval1.contains((org.joda.time.ReadableInterval) mutableInterval38);
        java.lang.Object obj49 = mutableInterval1.clone();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1644572134356L + "'", long2 == 1644572134356L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(mutableInterval46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
    }

    @Test
    public void test03853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03853");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.weekyears();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField14 = chronology8.clockhourOfHalfday();
        org.joda.time.DurationField durationField15 = chronology8.weeks();
        // The following exception was thrown during execution in test generation
        try {
            long long21 = chronology8.getDateTimeMillis(1644572330688L, (int) 'a', (int) (byte) 0, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 97 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(dateTimeField14);
        org.junit.Assert.assertNotNull(durationField15);
    }

    @Test
    public void test03854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03854");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Interval interval31 = mutableInterval2.toInterval();
        org.joda.time.Chronology chronology32 = mutableInterval2.getChronology();
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval2);
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readablePeriod34, readableInstant35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = mutableInterval39.toPeriod(periodType40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period41, readableInstant42);
        boolean boolean44 = mutableInterval36.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        long long59 = mutableInterval54.getEndMillis();
        java.lang.String str60 = mutableInterval54.toString();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        boolean boolean67 = mutableInterval63.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        mutableInterval70.setDurationAfterStart(0L);
        boolean boolean74 = mutableInterval70.equals((java.lang.Object) (-1));
        long long75 = mutableInterval70.getEndMillis();
        org.joda.time.DateTime dateTime76 = mutableInterval70.getEnd();
        boolean boolean77 = mutableInterval63.isAfter((org.joda.time.ReadableInstant) dateTime76);
        mutableInterval54.setStart((org.joda.time.ReadableInstant) dateTime76);
        boolean boolean79 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.Duration duration80 = mutableInterval54.toDuration();
        boolean boolean82 = mutableInterval54.isAfter(1644572157502L);
        java.lang.Object obj83 = null;
        boolean boolean84 = mutableInterval54.equals(obj83);
        org.joda.time.Chronology chronology85 = mutableInterval54.getChronology();
        boolean boolean86 = mutableInterval33.contains((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.DateTime dateTime87 = mutableInterval33.getStart();
        java.lang.String str88 = dateTime87.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1644572420159L + "'", long59 == 1644572420159L);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "2022-02-11T09:40:20.159Z/2022-02-11T09:40:20.159Z" + "'", str60, "2022-02-11T09:40:20.159Z/2022-02-11T09:40:20.159Z");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572420159L + "'", long75 == 1644572420159L);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(chronology85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(dateTime87);
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "2022-02-11T09:40:20.159Z" + "'", str88, "2022-02-11T09:40:20.159Z");
    }

    @Test
    public void test03855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03855");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        boolean boolean15 = mutableInterval9.isAfter(1644572126418L);
        org.joda.time.MutableInterval mutableInterval16 = mutableInterval9.copy();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        java.lang.Object obj22 = mutableInterval19.clone();
        org.joda.time.DateTime dateTime23 = mutableInterval19.getStart();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        long long47 = mutableInterval42.getEndMillis();
        org.joda.time.DateTime dateTime48 = mutableInterval42.getEnd();
        boolean boolean49 = mutableInterval35.isAfter((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean50 = dateTime32.isAfter((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = mutableInterval19.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology83 = dateTime48.getChronology();
        org.joda.time.Chronology chronology84 = dateTime48.getChronology();
        org.joda.time.DateTimeField dateTimeField85 = chronology84.monthOfYear();
        org.joda.time.DateTimeField dateTimeField86 = chronology84.clockhourOfDay();
        org.joda.time.Chronology chronology87 = chronology84.withUTC();
        boolean boolean88 = mutableInterval9.equals((java.lang.Object) chronology84);
        java.lang.String str89 = chronology84.toString();
        org.joda.time.DurationField durationField90 = chronology84.years();
        org.joda.time.DurationField durationField91 = chronology84.minutes();
        org.joda.time.DateTimeField dateTimeField92 = chronology84.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField93 = chronology84.monthOfYear();
        org.joda.time.DateTimeField dateTimeField94 = chronology84.clockhourOfDay();
        // The following exception was thrown during execution in test generation
        try {
            long long99 = chronology84.getDateTimeMillis(0, (int) (short) 10, (int) (byte) -1, 8);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for dayOfMonth must be in the range [1,31]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutableInterval16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "2022-02-11T09:40:20.186Z/2022-02-11T09:40:20.186Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "2022-02-11T09:40:20.186Z/2022-02-11T09:40:20.186Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "2022-02-11T09:40:20.186Z/2022-02-11T09:40:20.186Z");
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572420186L + "'", long31 == 1644572420186L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572420186L + "'", long47 == 1644572420186L);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(dateTimeField86);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str89, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(durationField90);
        org.junit.Assert.assertNotNull(durationField91);
        org.junit.Assert.assertNotNull(dateTimeField92);
        org.junit.Assert.assertNotNull(dateTimeField93);
        org.junit.Assert.assertNotNull(dateTimeField94);
    }

    @Test
    public void test03856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03856");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        java.lang.Object obj12 = mutableInterval9.clone();
        org.joda.time.DateTime dateTime13 = mutableInterval9.getStart();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getEnd();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        mutableInterval32.setDurationAfterStart(0L);
        boolean boolean36 = mutableInterval32.equals((java.lang.Object) (-1));
        long long37 = mutableInterval32.getEndMillis();
        org.joda.time.DateTime dateTime38 = mutableInterval32.getEnd();
        boolean boolean39 = mutableInterval25.isAfter((org.joda.time.ReadableInstant) dateTime38);
        boolean boolean40 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        boolean boolean69 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.Duration duration70 = mutableInterval64.toDuration();
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = mutableInterval9.contains((org.joda.time.ReadableInstant) dateTime38);
        mutableInterval9.setStartMillis(1644572128269L);
        org.joda.time.DateTime dateTime75 = mutableInterval9.getEnd();
        boolean boolean76 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime75);
        mutableInterval2.setInterval(1644572141702L, 1644572156313L);
        org.joda.time.Chronology chronology80 = mutableInterval2.getChronology();
        org.joda.time.DateTimeZone dateTimeZone81 = chronology80.getZone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(obj12);
// flaky:         org.junit.Assert.assertEquals(obj12.toString(), "2022-02-11T09:40:20.210Z/2022-02-11T09:40:20.210Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "2022-02-11T09:40:20.210Z/2022-02-11T09:40:20.210Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "2022-02-11T09:40:20.210Z/2022-02-11T09:40:20.210Z");
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572420210L + "'", long21 == 1644572420210L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1644572420210L + "'", long37 == 1644572420210L);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(chronology80);
        org.junit.Assert.assertNotNull(dateTimeZone81);
    }

    @Test
    public void test03857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03857");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        boolean boolean42 = mutableInterval28.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean43 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean44 = mutableInterval5.contains((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        org.joda.time.Interval interval49 = mutableInterval47.toInterval();
        mutableInterval5.setInterval((org.joda.time.ReadableInterval) interval49);
        mutableInterval5.setStartMillis(1644572132848L);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        mutableInterval55.setDurationAfterStart(0L);
        mutableInterval55.setStartMillis(1644572127942L);
        mutableInterval55.setStartMillis(1644572127679L);
        mutableInterval55.setDurationAfterStart(1644572124037L);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        mutableInterval66.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.isAfter(readableInstant69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        mutableInterval73.setDurationAfterStart(0L);
        mutableInterval73.setStartMillis(1644572127942L);
        boolean boolean78 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        java.lang.String str79 = mutableInterval66.toString();
        long long80 = mutableInterval66.getStartMillis();
        org.joda.time.DateTime dateTime81 = mutableInterval66.getEnd();
        org.joda.time.Interval interval82 = mutableInterval66.toInterval();
        boolean boolean83 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.DateTime dateTime84 = mutableInterval55.getEnd();
        org.joda.time.Duration duration85 = mutableInterval55.toDuration();
        mutableInterval5.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration85);
        boolean boolean88 = duration85.equals((java.lang.Object) 1644572288201L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:20.336Z/2022-02-11T09:40:20.336Z" + "'", str16, "2022-02-11T09:40:20.336Z/2022-02-11T09:40:20.336Z");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572420336L + "'", long24 == 1644572420336L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572420336L + "'", long40 == 1644572420336L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "2022-02-11T09:40:20.336Z/2022-02-11T09:40:20.336Z" + "'", str79, "2022-02-11T09:40:20.336Z/2022-02-11T09:40:20.336Z");
// flaky:         org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1644572420336L + "'", long80 == 1644572420336L);
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test03858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03858");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Duration duration8 = mutableInterval5.toDuration();
        long long9 = mutableInterval5.getEndMillis();
        java.lang.Object obj10 = mutableInterval5.clone();
        org.joda.time.ReadableInterval readableInterval11 = null;
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval5.setInterval(readableInterval11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Interval must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572420361L + "'", long9 == 1644572420361L);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "2022-02-11T09:40:20.361Z/2022-02-11T09:40:20.361Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "2022-02-11T09:40:20.361Z/2022-02-11T09:40:20.361Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "2022-02-11T09:40:20.361Z/2022-02-11T09:40:20.361Z");
    }

    @Test
    public void test03859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03859");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.year();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.monthOfYear();
        long long74 = chronology66.getDateTimeMillis(1644572130375L, 0, (int) (short) 0, 1, (int) (short) 100);
        org.joda.time.DateTimeField dateTimeField75 = chronology66.weekyear();
        org.joda.time.DurationField durationField76 = chronology66.months();
        org.joda.time.DurationField durationField77 = chronology66.weeks();
        org.joda.time.DateTimeField dateTimeField78 = chronology66.hourOfDay();
        org.joda.time.DateTimeField dateTimeField79 = chronology66.dayOfMonth();
        org.joda.time.DateTimeZone dateTimeZone80 = chronology66.getZone();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:20.374Z/2022-02-11T09:40:20.374Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:20.374Z/2022-02-11T09:40:20.374Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:20.374Z/2022-02-11T09:40:20.374Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572420374L + "'", long14 == 1644572420374L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572420374L + "'", long30 == 1644572420374L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1644537601100L + "'", long74 == 1644537601100L);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeZone80);
    }

    @Test
    public void test03860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03860");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        boolean boolean28 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        boolean boolean29 = mutableInterval9.isAfterNow();
        boolean boolean31 = mutableInterval9.equals((java.lang.Object) 1644572133514L);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        mutableInterval34.setDurationAfterStart(0L);
        boolean boolean38 = mutableInterval34.equals((java.lang.Object) (-1));
        mutableInterval34.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean42 = mutableInterval34.containsNow();
        boolean boolean43 = mutableInterval9.isBefore((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.MutableInterval mutableInterval44 = mutableInterval9.copy();
        boolean boolean46 = mutableInterval9.isAfter(1644572205326L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(mutableInterval44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test03861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03861");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.millisOfSecond();
        org.joda.time.DurationField durationField72 = chronology66.halfdays();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.dayOfYear();
        org.joda.time.DateTimeField dateTimeField75 = chronology66.clockhourOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:20.419Z/2022-02-11T09:40:20.419Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:20.419Z/2022-02-11T09:40:20.419Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:20.419Z/2022-02-11T09:40:20.419Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572420419L + "'", long14 == 1644572420419L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572420419L + "'", long30 == 1644572420419L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03862");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.MutableInterval mutableInterval5 = mutableInterval2.toMutableInterval();
        mutableInterval5.setDurationAfterStart((long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        boolean boolean14 = mutableInterval10.overlaps((org.joda.time.ReadableInterval) mutableInterval13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = mutableInterval17.toPeriod(periodType18);
        java.lang.Object obj20 = mutableInterval17.clone();
        org.joda.time.DateTime dateTime21 = mutableInterval17.getStart();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        mutableInterval24.setDurationAfterStart(0L);
        boolean boolean28 = mutableInterval24.equals((java.lang.Object) (-1));
        long long29 = mutableInterval24.getEndMillis();
        org.joda.time.DateTime dateTime30 = mutableInterval24.getEnd();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        mutableInterval40.setDurationAfterStart(0L);
        boolean boolean44 = mutableInterval40.equals((java.lang.Object) (-1));
        long long45 = mutableInterval40.getEndMillis();
        org.joda.time.DateTime dateTime46 = mutableInterval40.getEnd();
        boolean boolean47 = mutableInterval33.isAfter((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean48 = dateTime30.isAfter((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        boolean boolean69 = mutableInterval65.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readablePeriod70, readableInstant71);
        long long73 = mutableInterval72.toDurationMillis();
        boolean boolean74 = mutableInterval68.isAfter((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        boolean boolean76 = mutableInterval72.contains(readableInstant75);
        boolean boolean77 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval72);
        org.joda.time.Duration duration78 = mutableInterval72.toDuration();
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableDuration) duration78);
        boolean boolean80 = mutableInterval17.contains((org.joda.time.ReadableInstant) dateTime46);
        boolean boolean81 = mutableInterval10.contains((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        org.joda.time.PeriodType periodType85 = null;
        org.joda.time.Period period86 = mutableInterval84.toPeriod(periodType85);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period86, readableInstant87);
        boolean boolean89 = dateTime46.equals((java.lang.Object) mutableInterval88);
        boolean boolean90 = mutableInterval5.isBefore((org.joda.time.ReadableInterval) mutableInterval88);
        org.joda.time.MutableInterval mutableInterval91 = mutableInterval5.toMutableInterval();
        org.joda.time.Interval interval92 = mutableInterval91.toInterval();
        org.joda.time.Duration duration93 = mutableInterval91.toDuration();
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "2022-02-11T09:40:20.471Z/2022-02-11T09:40:20.471Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "2022-02-11T09:40:20.471Z/2022-02-11T09:40:20.471Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "2022-02-11T09:40:20.471Z/2022-02-11T09:40:20.471Z");
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572420471L + "'", long29 == 1644572420471L);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1644572420471L + "'", long45 == 1644572420471L);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(mutableInterval91);
        org.junit.Assert.assertNotNull(interval92);
        org.junit.Assert.assertNotNull(duration93);
    }

    @Test
    public void test03863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03863");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = mutableInterval68.toPeriod(periodType69);
        org.joda.time.MutableInterval mutableInterval71 = mutableInterval68.toMutableInterval();
        boolean boolean72 = mutableInterval2.isBefore((org.joda.time.ReadableInterval) mutableInterval68);
        mutableInterval2.setDurationBeforeEnd(1644572131789L);
        mutableInterval2.setDurationBeforeEnd(1644572136117L);
        org.joda.time.Duration duration77 = mutableInterval2.toDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:20.534Z/2022-02-11T09:40:20.534Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:20.534Z/2022-02-11T09:40:20.534Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:20.534Z/2022-02-11T09:40:20.534Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572420534L + "'", long14 == 1644572420534L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572420534L + "'", long30 == 1644572420534L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(mutableInterval71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(duration77);
    }

    @Test
    public void test03864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03864");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        boolean boolean16 = mutableInterval2.isAfter((org.joda.time.ReadableInstant) dateTime15);
        java.lang.String str17 = mutableInterval2.toString();
        java.lang.String str18 = mutableInterval2.toString();
        long long19 = mutableInterval2.getStartMillis();
        boolean boolean20 = mutableInterval2.containsNow();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572420597L + "'", long14 == 1644572420597L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "2022-02-11T09:40:20.597Z/2022-02-11T09:40:20.597Z" + "'", str17, "2022-02-11T09:40:20.597Z/2022-02-11T09:40:20.597Z");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2022-02-11T09:40:20.597Z/2022-02-11T09:40:20.597Z" + "'", str18, "2022-02-11T09:40:20.597Z/2022-02-11T09:40:20.597Z");
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1644572420597L + "'", long19 == 1644572420597L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test03865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03865");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readablePeriod14, readableInstant15);
        long long17 = mutableInterval16.toDurationMillis();
        boolean boolean18 = mutableInterval12.isAfter((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        boolean boolean20 = mutableInterval16.contains(readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        boolean boolean35 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Duration duration36 = mutableInterval30.toDuration();
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration36);
        org.joda.time.MutableInterval mutableInterval38 = mutableInterval2.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Period period43 = mutableInterval41.toPeriod(periodType42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period43, readableInstant44);
        long long46 = mutableInterval45.getStartMillis();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        mutableInterval49.setDurationAfterStart(0L);
        boolean boolean53 = mutableInterval49.equals((java.lang.Object) (-1));
        boolean boolean54 = mutableInterval45.isAfter((org.joda.time.ReadableInterval) mutableInterval49);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.Period period59 = mutableInterval57.toPeriod(periodType58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period59, readableInstant60);
        long long62 = mutableInterval61.getStartMillis();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        mutableInterval65.setDurationAfterStart(0L);
        boolean boolean69 = mutableInterval65.equals((java.lang.Object) (-1));
        boolean boolean70 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        boolean boolean71 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration72 = mutableInterval61.toDuration();
        mutableInterval38.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration72);
        mutableInterval38.setDurationAfterStart(1644572138269L);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        mutableInterval78.setDurationAfterStart(0L);
        boolean boolean82 = mutableInterval78.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.ReadableDuration readableDuration84 = null;
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval(readableInstant83, readableDuration84);
        mutableInterval85.setDurationAfterStart(0L);
        boolean boolean89 = mutableInterval85.equals((java.lang.Object) (-1));
        mutableInterval85.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean93 = mutableInterval78.contains((org.joda.time.ReadableInterval) mutableInterval85);
        org.joda.time.Interval interval94 = mutableInterval85.toInterval();
        org.joda.time.DateTime dateTime95 = interval94.getStart();
        long long96 = dateTime95.getMillis();
        org.joda.time.DateTimeFieldType dateTimeFieldType97 = null;
        boolean boolean98 = dateTime95.isSupported(dateTimeFieldType97);
        boolean boolean99 = mutableInterval38.contains((org.joda.time.ReadableInstant) dateTime95);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(mutableInterval38);
        org.junit.Assert.assertNotNull(period43);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572420610L + "'", long46 == 1644572420610L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(period59);
// flaky:         org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1644572420610L + "'", long62 == 1644572420610L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(interval94);
        org.junit.Assert.assertNotNull(dateTime95);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + (-1L) + "'", long96 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03866");
        org.joda.time.MutableInterval mutableInterval1 = new org.joda.time.MutableInterval((java.lang.Object) "2022-02-11T09:35:36.713Z/2022-02-11T09:35:36.713Z");
    }

    @Test
    public void test03867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03867");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readablePeriod16, readableInstant17);
        long long19 = mutableInterval18.toDurationMillis();
        boolean boolean20 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readablePeriod28, readableInstant29);
        long long31 = mutableInterval30.toDurationMillis();
        boolean boolean32 = mutableInterval26.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        boolean boolean34 = mutableInterval30.contains(readableInstant33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        boolean boolean41 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readablePeriod42, readableInstant43);
        long long45 = mutableInterval44.toDurationMillis();
        boolean boolean46 = mutableInterval40.isAfter((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        boolean boolean48 = mutableInterval44.contains(readableInstant47);
        boolean boolean49 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval30.isBefore((org.joda.time.ReadableInterval) mutableInterval59);
        boolean boolean65 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = mutableInterval68.toPeriod(periodType69);
        org.joda.time.DurationFieldType durationFieldType71 = null;
        boolean boolean72 = period70.isSupported(durationFieldType71);
        boolean boolean74 = period70.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType76 = period70.getFieldType(0);
        mutableInterval59.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period70);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period70);
        long long79 = mutableInterval2.getEndMillis();
        boolean boolean81 = mutableInterval2.contains(18090293780745L);
        mutableInterval2.setInterval(1644572320515L, 1644572342231L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572420645L + "'", long7 == 1644572420645L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(durationFieldType76);
// flaky:         org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1644572420645L + "'", long79 == 1644572420645L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test03868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03868");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.MutableInterval mutableInterval4 = mutableInterval2.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = mutableInterval7.toPeriod(periodType8);
        java.lang.Object obj10 = mutableInterval7.clone();
        org.joda.time.DateTime dateTime11 = mutableInterval7.getStart();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        boolean boolean18 = mutableInterval14.equals((java.lang.Object) (-1));
        long long19 = mutableInterval14.getEndMillis();
        org.joda.time.DateTime dateTime20 = mutableInterval14.getEnd();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        boolean boolean37 = mutableInterval23.isAfter((org.joda.time.ReadableInstant) dateTime36);
        boolean boolean38 = dateTime20.isAfter((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readablePeriod46, readableInstant47);
        long long49 = mutableInterval48.toDurationMillis();
        boolean boolean50 = mutableInterval44.isAfter((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        boolean boolean52 = mutableInterval48.contains(readableInstant51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        boolean boolean59 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadablePeriod readablePeriod60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readablePeriod60, readableInstant61);
        long long63 = mutableInterval62.toDurationMillis();
        boolean boolean64 = mutableInterval58.isAfter((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        boolean boolean66 = mutableInterval62.contains(readableInstant65);
        boolean boolean67 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.Duration duration68 = mutableInterval62.toDuration();
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = mutableInterval7.contains((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Chronology chronology71 = dateTime36.getChronology();
        org.joda.time.DateTimeField dateTimeField72 = chronology71.year();
        org.joda.time.DateTimeField dateTimeField73 = chronology71.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField74 = chronology71.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField75 = chronology71.hourOfHalfday();
        org.joda.time.DurationField durationField76 = chronology71.hours();
        org.joda.time.DateTimeField dateTimeField77 = chronology71.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField78 = chronology71.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField79 = chronology71.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField80 = chronology71.millisOfSecond();
        org.joda.time.DateTimeZone dateTimeZone81 = chronology71.getZone();
        mutableInterval2.setChronology(chronology71);
        org.joda.time.DateTimeField dateTimeField83 = chronology71.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField84 = chronology71.dayOfYear();
        org.joda.time.DurationField durationField85 = chronology71.weekyears();
        org.joda.time.DateTimeField dateTimeField86 = chronology71.dayOfWeek();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(mutableInterval4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "2022-02-11T09:40:20.686Z/2022-02-11T09:40:20.686Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "2022-02-11T09:40:20.686Z/2022-02-11T09:40:20.686Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "2022-02-11T09:40:20.686Z/2022-02-11T09:40:20.686Z");
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1644572420686L + "'", long19 == 1644572420686L);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572420686L + "'", long35 == 1644572420686L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(chronology71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTimeZone81);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(durationField85);
        org.junit.Assert.assertNotNull(dateTimeField86);
    }

    @Test
    public void test03869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03869");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfYear();
        org.joda.time.DateTimeField dateTimeField72 = chronology68.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField73 = chronology68.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField75 = chronology68.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField76 = chronology68.millisOfDay();
        org.joda.time.ReadablePartial readablePartial77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = chronology68.get(readablePartial77, 1644572126548L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:20.770Z/2022-02-11T09:40:20.770Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:20.770Z/2022-02-11T09:40:20.770Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:20.770Z/2022-02-11T09:40:20.770Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572420770L + "'", long16 == 1644572420770L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572420770L + "'", long32 == 1644572420770L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
    }

    @Test
    public void test03870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03870");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean28 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.Period period29 = mutableInterval20.toPeriod();
        org.joda.time.Chronology chronology30 = mutableInterval20.getChronology();
        org.joda.time.DateTimeField dateTimeField31 = chronology30.era();
        org.joda.time.DurationField durationField32 = chronology30.months();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(chronology30);
        org.junit.Assert.assertNotNull(dateTimeField31);
        org.junit.Assert.assertNotNull(durationField32);
    }

    @Test
    public void test03871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03871");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Period period11 = mutableInterval2.toPeriod();
        org.joda.time.Chronology chronology12 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField13 = chronology12.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField14 = chronology12.monthOfYear();
        org.joda.time.DateTimeField dateTimeField15 = chronology12.secondOfMinute();
        org.joda.time.DurationField durationField16 = chronology12.seconds();
        org.joda.time.DateTimeField dateTimeField17 = chronology12.minuteOfDay();
        // The following exception was thrown during execution in test generation
        try {
            long long25 = chronology12.getDateTimeMillis(0, (int) (short) 1, 100, (-1), (int) (byte) 1, (int) (short) 1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(dateTimeField14);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertNotNull(dateTimeField17);
    }

    @Test
    public void test03872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03872");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Duration duration8 = mutableInterval5.toDuration();
        long long9 = mutableInterval5.getEndMillis();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readablePeriod17, readableInstant18);
        long long20 = mutableInterval19.toDurationMillis();
        boolean boolean21 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        boolean boolean26 = mutableInterval24.isBeforeNow();
        org.joda.time.Interval interval27 = mutableInterval24.toInterval();
        org.joda.time.MutableInterval mutableInterval28 = mutableInterval24.toMutableInterval();
        org.joda.time.Duration duration29 = mutableInterval28.toDuration();
        java.lang.String str30 = duration29.toString();
        mutableInterval5.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        boolean boolean38 = mutableInterval34.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.Period period39 = mutableInterval37.toPeriod();
        org.joda.time.Duration duration40 = mutableInterval37.toDuration();
        long long41 = mutableInterval37.getEndMillis();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        boolean boolean58 = mutableInterval56.isBeforeNow();
        org.joda.time.Interval interval59 = mutableInterval56.toInterval();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        mutableInterval62.setDurationAfterStart(0L);
        boolean boolean66 = mutableInterval62.equals((java.lang.Object) (-1));
        mutableInterval62.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean70 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        mutableInterval73.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant76 = null;
        boolean boolean77 = mutableInterval73.contains(readableInstant76);
        long long78 = mutableInterval73.getEndMillis();
        boolean boolean79 = mutableInterval56.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        boolean boolean80 = mutableInterval37.contains((org.joda.time.ReadableInterval) mutableInterval73);
        mutableInterval73.setStartMillis(1644572127214L);
        long long83 = mutableInterval73.toDurationMillis();
        boolean boolean84 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval73);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572420862L + "'", long9 == 1644572420862L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(mutableInterval28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT0S" + "'", str30, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572420862L + "'", long41 == 1644572420862L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1644572420862L + "'", long78 == 1644572420862L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long83 + "' != '" + 293648L + "'", long83 == 293648L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test03873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03873");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        org.joda.time.Chronology chronology13 = mutableInterval2.getChronology();
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval();
        boolean boolean15 = mutableInterval14.isAfterNow();
        boolean boolean16 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Duration duration17 = mutableInterval14.toDuration();
        org.joda.time.DateTime dateTime18 = mutableInterval14.getEnd();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = mutableInterval21.toPeriod(periodType22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period23, readableInstant24);
        long long26 = mutableInterval25.getStartMillis();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readablePeriod34, readableInstant35);
        long long37 = mutableInterval36.toDurationMillis();
        boolean boolean38 = mutableInterval32.isAfter((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        boolean boolean40 = mutableInterval36.contains(readableInstant39);
        long long41 = mutableInterval36.getEndMillis();
        boolean boolean42 = mutableInterval25.isAfter((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.Period period47 = mutableInterval45.toPeriod(periodType46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period47, readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableDuration readableDuration68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readableInstant67, readableDuration68);
        boolean boolean70 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.ReadablePeriod readablePeriod71 = null;
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readablePeriod71, readableInstant72);
        long long74 = mutableInterval73.toDurationMillis();
        boolean boolean75 = mutableInterval69.isAfter((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        boolean boolean77 = mutableInterval73.contains(readableInstant76);
        boolean boolean78 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.Duration duration79 = mutableInterval73.toDuration();
        boolean boolean81 = duration79.equals((java.lang.Object) 'a');
        mutableInterval49.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration79);
        org.joda.time.DateTime dateTime83 = mutableInterval49.getStart();
        boolean boolean84 = mutableInterval25.isBefore((org.joda.time.ReadableInstant) dateTime83);
        org.joda.time.Instant instant85 = dateTime83.toInstant();
        org.joda.time.Chronology chronology86 = instant85.getChronology();
        boolean boolean87 = dateTime18.isBefore((org.joda.time.ReadableInstant) instant85);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(chronology13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(dateTime18);
        org.junit.Assert.assertNotNull(period23);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572420899L + "'", long26 == 1644572420899L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572420899L + "'", long41 == 1644572420899L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(dateTime83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(instant85);
        org.junit.Assert.assertNotNull(chronology86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test03874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03874");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology70);
        org.joda.time.DateTime dateTime73 = mutableInterval72.getEnd();
        java.lang.String str74 = mutableInterval72.toString();
        org.joda.time.Chronology chronology75 = mutableInterval72.getChronology();
        org.joda.time.DurationField durationField76 = chronology75.minutes();
        org.joda.time.DurationField durationField77 = chronology75.millis();
        org.joda.time.DateTimeField dateTimeField78 = chronology75.yearOfEra();
        org.joda.time.DateTimeField dateTimeField79 = chronology75.weekyear();
        org.joda.time.DurationField durationField80 = chronology75.hours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(1644572335270L, 1644572290446L, chronology75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:20.991Z/2022-02-11T09:40:20.991Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:20.991Z/2022-02-11T09:40:20.991Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:20.991Z/2022-02-11T09:40:20.991Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572420991L + "'", long18 == 1644572420991L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572420991L + "'", long34 == 1644572420991L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str74, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(durationField80);
    }

    @Test
    public void test03875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03875");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        boolean boolean9 = mutableInterval5.isAfter(readableInstant8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        mutableInterval12.setStartMillis(1644572127942L);
        boolean boolean17 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        boolean boolean18 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.Period period26 = mutableInterval24.toPeriod();
        mutableInterval12.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period26);
        java.lang.Object obj28 = mutableInterval12.clone();
        org.joda.time.MutableInterval mutableInterval29 = mutableInterval12.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval30 = mutableInterval29.toMutableInterval();
        org.joda.time.DateTime dateTime31 = mutableInterval29.getStart();
        mutableInterval29.setDurationBeforeEnd(1644572385258L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals(obj28.toString(), "2022-02-11T09:40:21.060Z/2022-02-11T09:40:21.060Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "2022-02-11T09:40:21.060Z/2022-02-11T09:40:21.060Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "2022-02-11T09:40:21.060Z/2022-02-11T09:40:21.060Z");
        org.junit.Assert.assertNotNull(mutableInterval29);
        org.junit.Assert.assertNotNull(mutableInterval30);
        org.junit.Assert.assertNotNull(dateTime31);
    }

    @Test
    public void test03876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03876");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        java.lang.String str3 = mutableInterval2.toString();
        org.joda.time.MutableInterval mutableInterval4 = mutableInterval2.toMutableInterval();
        org.joda.time.Interval interval5 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        long long11 = mutableInterval8.getEndMillis();
        boolean boolean13 = mutableInterval8.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval14 = mutableInterval8.copy();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        boolean boolean24 = mutableInterval20.isAfter(readableInstant23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        mutableInterval27.setStartMillis(1644572127942L);
        boolean boolean32 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        boolean boolean33 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.Period period41 = mutableInterval39.toPeriod();
        mutableInterval27.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period41);
        boolean boolean43 = mutableInterval8.isAfter((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.DateTime dateTime44 = mutableInterval27.getEnd();
        boolean boolean45 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.Chronology chronology46 = mutableInterval2.getChronology();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.Period period51 = mutableInterval49.toPeriod(periodType50);
        long long52 = mutableInterval49.getEndMillis();
        boolean boolean54 = mutableInterval49.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval55 = mutableInterval49.copy();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        mutableInterval61.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.isAfter(readableInstant64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        mutableInterval68.setDurationAfterStart(0L);
        mutableInterval68.setStartMillis(1644572127942L);
        boolean boolean73 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        boolean boolean74 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        boolean boolean81 = mutableInterval77.overlaps((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.Period period82 = mutableInterval80.toPeriod();
        mutableInterval68.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period82);
        boolean boolean84 = mutableInterval49.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        long long85 = mutableInterval68.getStartMillis();
        long long86 = mutableInterval68.getStartMillis();
        java.lang.String str87 = mutableInterval68.toString();
        org.joda.time.Duration duration88 = mutableInterval68.toDuration();
        mutableInterval2.setDurationAfterStart((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Period period90 = mutableInterval2.toPeriod();
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "2022-02-11T09:40:21.073Z/2022-02-11T09:40:21.073Z" + "'", str3, "2022-02-11T09:40:21.073Z/2022-02-11T09:40:21.073Z");
        org.junit.Assert.assertNotNull(mutableInterval4);
        org.junit.Assert.assertNotNull(interval5);
        org.junit.Assert.assertNotNull(period10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1644572421073L + "'", long11 == 1644572421073L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mutableInterval14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(chronology46);
        org.junit.Assert.assertNotNull(period51);
// flaky:         org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1644572421073L + "'", long52 == 1644572421073L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(mutableInterval55);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1644572421073L + "'", long85 == 1644572421073L);
// flaky:         org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1644572421073L + "'", long86 == 1644572421073L);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "2022-02-11T09:40:21.073Z/2022-02-11T09:40:21.073Z" + "'", str87, "2022-02-11T09:40:21.073Z/2022-02-11T09:40:21.073Z");
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(period90);
    }

    @Test
    public void test03877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03877");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = mutableInterval10.toPeriod(periodType11);
        java.lang.Object obj13 = mutableInterval10.clone();
        org.joda.time.DateTime dateTime14 = mutableInterval10.getStart();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval10.contains((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Chronology chronology74 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField75 = chronology74.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology74);
        org.joda.time.DateTime dateTime77 = mutableInterval76.getEnd();
        java.lang.String str78 = mutableInterval76.toString();
        org.joda.time.Chronology chronology79 = mutableInterval76.getChronology();
        boolean boolean80 = mutableInterval2.isBefore((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.DateTime dateTime81 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        org.joda.time.PeriodType periodType85 = null;
        org.joda.time.Period period86 = mutableInterval84.toPeriod(periodType85);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period86, readableInstant87);
        boolean boolean89 = mutableInterval88.containsNow();
        mutableInterval88.setDurationAfterStart(1644572155550L);
        boolean boolean92 = dateTime81.equals((java.lang.Object) mutableInterval88);
        org.joda.time.Duration duration93 = mutableInterval88.toDuration();
        long long94 = duration93.getMillis();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572421099L + "'", long5 == 1644572421099L);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals(obj13.toString(), "2022-02-11T09:40:21.099Z/2022-02-11T09:40:21.099Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "2022-02-11T09:40:21.099Z/2022-02-11T09:40:21.099Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "2022-02-11T09:40:21.099Z/2022-02-11T09:40:21.099Z");
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572421099L + "'", long22 == 1644572421099L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572421099L + "'", long38 == 1644572421099L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(chronology74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str78, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572155550L + "'", long94 == 1644572155550L);
    }

    @Test
    public void test03878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03878");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.MutableInterval mutableInterval18 = mutableInterval14.toMutableInterval();
        org.joda.time.Duration duration19 = mutableInterval18.toDuration();
        org.joda.time.MutableInterval mutableInterval20 = mutableInterval18.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        mutableInterval23.setDurationAfterStart(0L);
        boolean boolean27 = mutableInterval23.equals((java.lang.Object) (-1));
        long long28 = mutableInterval23.getEndMillis();
        org.joda.time.DateTime dateTime29 = mutableInterval23.getEnd();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        boolean boolean43 = mutableInterval39.equals((java.lang.Object) (-1));
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getEnd();
        boolean boolean46 = mutableInterval32.isAfter((org.joda.time.ReadableInstant) dateTime45);
        boolean boolean47 = dateTime29.isAfter((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        boolean boolean68 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadablePeriod readablePeriod69 = null;
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readablePeriod69, readableInstant70);
        long long72 = mutableInterval71.toDurationMillis();
        boolean boolean73 = mutableInterval67.isAfter((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        boolean boolean75 = mutableInterval71.contains(readableInstant74);
        boolean boolean76 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval71);
        org.joda.time.Duration duration77 = mutableInterval71.toDuration();
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableDuration) duration77);
        boolean boolean79 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        boolean boolean80 = mutableInterval20.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.ReadableDuration readableDuration82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readableInstant81, readableDuration82);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.ReadableDuration readableDuration85 = null;
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval(readableInstant84, readableDuration85);
        boolean boolean87 = mutableInterval83.overlaps((org.joda.time.ReadableInterval) mutableInterval86);
        org.joda.time.Period period88 = mutableInterval86.toPeriod();
        org.joda.time.Chronology chronology89 = mutableInterval86.getChronology();
        org.joda.time.MutableInterval mutableInterval90 = mutableInterval86.toMutableInterval();
        mutableInterval20.setInterval((org.joda.time.ReadableInterval) mutableInterval86);
        java.lang.String str92 = mutableInterval86.toString();
        long long93 = mutableInterval86.toDurationMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(mutableInterval18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(mutableInterval20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1644572421239L + "'", long28 == 1644572421239L);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572421239L + "'", long44 == 1644572421239L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(chronology89);
        org.junit.Assert.assertNotNull(mutableInterval90);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "2022-02-11T09:40:21.239Z/2022-02-11T09:40:21.239Z" + "'", str92, "2022-02-11T09:40:21.239Z/2022-02-11T09:40:21.239Z");
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test03879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03879");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.weekyears();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.secondOfMinute();
        org.joda.time.Chronology chronology14 = chronology8.withUTC();
        org.joda.time.DateTimeField dateTimeField15 = chronology8.yearOfEra();
        org.joda.time.DateTimeField dateTimeField16 = chronology8.minuteOfDay();
        org.joda.time.ReadablePartial readablePartial17 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long19 = chronology8.set(readablePartial17, 1644572316893L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(chronology14);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertNotNull(dateTimeField16);
    }

    @Test
    public void test03880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03880");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        mutableInterval5.setStartMillis(1644572131453L);
        long long10 = mutableInterval5.toDurationMillis();
        org.joda.time.MutableInterval mutableInterval11 = mutableInterval5.copy();
        boolean boolean12 = mutableInterval11.isAfterNow();
        java.lang.Object obj13 = mutableInterval11.clone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 289927L + "'", long10 == 289927L);
        org.junit.Assert.assertNotNull(mutableInterval11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals(obj13.toString(), "2022-02-11T09:35:31.453Z/2022-02-11T09:40:21.380Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "2022-02-11T09:35:31.453Z/2022-02-11T09:40:21.380Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "2022-02-11T09:35:31.453Z/2022-02-11T09:40:21.380Z");
    }

    @Test
    public void test03881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03881");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone68 = chronology66.getZone();
        org.joda.time.Chronology chronology69 = chronology66.withUTC();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.era();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.millisOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:21.452Z/2022-02-11T09:40:21.452Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:21.452Z/2022-02-11T09:40:21.452Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:21.452Z/2022-02-11T09:40:21.452Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572421452L + "'", long14 == 1644572421452L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572421452L + "'", long30 == 1644572421452L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeZone68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
    }

    @Test
    public void test03882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03882");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        boolean boolean28 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        boolean boolean29 = mutableInterval9.isAfterNow();
        boolean boolean31 = mutableInterval9.isBefore(1644572140135L);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval9.setInterval(1644572254916L, 1644572217289L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03883");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology2 = mutableInterval1.getChronology();
        org.joda.time.DateTimeField dateTimeField3 = chronology2.monthOfYear();
        org.joda.time.DateTimeField dateTimeField4 = chronology2.millisOfDay();
        org.joda.time.DateTimeField dateTimeField5 = chronology2.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField6 = chronology2.year();
        org.joda.time.DurationField durationField7 = chronology2.weekyears();
        // The following exception was thrown during execution in test generation
        try {
            long long13 = chronology2.getDateTimeMillis(1644572308632L, 8, (int) (byte) 1, (int) (short) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for secondOfMinute must be in the range [0,59]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertNotNull(chronology2);
        org.junit.Assert.assertNotNull(dateTimeField3);
        org.junit.Assert.assertNotNull(dateTimeField4);
        org.junit.Assert.assertNotNull(dateTimeField5);
        org.junit.Assert.assertNotNull(dateTimeField6);
        org.junit.Assert.assertNotNull(durationField7);
    }

    @Test
    public void test03884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03884");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        mutableInterval5.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        boolean boolean9 = mutableInterval5.isAfter(readableInstant8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        mutableInterval12.setStartMillis(1644572127942L);
        boolean boolean17 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        boolean boolean18 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.Period period26 = mutableInterval24.toPeriod();
        mutableInterval12.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period26);
        java.lang.Object obj28 = mutableInterval12.clone();
        org.joda.time.MutableInterval mutableInterval29 = mutableInterval12.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = mutableInterval32.toPeriod(periodType33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = period34.isSupported(durationFieldType35);
        boolean boolean38 = period34.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType40 = period34.getFieldType(0);
        org.joda.time.Period period41 = period34.toPeriod();
        int int42 = period41.size();
        int int43 = period41.size();
        org.joda.time.PeriodType periodType44 = period41.getPeriodType();
        mutableInterval12.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period41);
        mutableInterval12.setStartMillis(1644572220053L);
        boolean boolean48 = mutableInterval12.containsNow();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals(obj28.toString(), "2022-02-11T09:40:21.534Z/2022-02-11T09:40:21.534Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "2022-02-11T09:40:21.534Z/2022-02-11T09:40:21.534Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "2022-02-11T09:40:21.534Z/2022-02-11T09:40:21.534Z");
        org.junit.Assert.assertNotNull(mutableInterval29);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test03885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03885");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        org.joda.time.Interval interval6 = mutableInterval2.toInterval();
        long long7 = interval6.getEndMillis();
        org.joda.time.ReadablePeriod readablePeriod8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readablePeriod8, readableInstant9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = mutableInterval13.toPeriod(periodType14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period15, readableInstant16);
        boolean boolean18 = mutableInterval10.isAfter((org.joda.time.ReadableInterval) mutableInterval17);
        boolean boolean19 = interval6.contains((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = interval6.toPeriod(periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        boolean boolean28 = mutableInterval24.overlaps((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = mutableInterval31.toPeriod(periodType32);
        org.joda.time.MutableInterval mutableInterval34 = mutableInterval31.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        mutableInterval37.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant40 = null;
        boolean boolean41 = mutableInterval37.contains(readableInstant40);
        long long42 = mutableInterval37.getEndMillis();
        org.joda.time.DateTime dateTime43 = mutableInterval37.getStart();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        mutableInterval46.setDurationAfterStart(0L);
        boolean boolean50 = mutableInterval46.equals((java.lang.Object) (-1));
        long long51 = mutableInterval46.getEndMillis();
        org.joda.time.DateTime dateTime52 = mutableInterval46.getEnd();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        boolean boolean59 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        mutableInterval62.setDurationAfterStart(0L);
        boolean boolean66 = mutableInterval62.equals((java.lang.Object) (-1));
        long long67 = mutableInterval62.getEndMillis();
        org.joda.time.DateTime dateTime68 = mutableInterval62.getEnd();
        boolean boolean69 = mutableInterval55.isAfter((org.joda.time.ReadableInstant) dateTime68);
        boolean boolean70 = dateTime52.isAfter((org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.Instant instant72 = dateTime68.toInstant();
        boolean boolean73 = mutableInterval31.contains((org.joda.time.ReadableInstant) instant72);
        boolean boolean74 = mutableInterval24.isAfter((org.joda.time.ReadableInstant) instant72);
        java.lang.String str75 = instant72.toString();
        boolean boolean76 = interval6.isAfter((org.joda.time.ReadableInstant) instant72);
        java.lang.String str77 = instant72.toString();
        long long78 = instant72.getMillis();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572421573L + "'", long5 == 1644572421573L);
        org.junit.Assert.assertNotNull(interval6);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572421573L + "'", long7 == 1644572421573L);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(mutableInterval34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1644572421573L + "'", long42 == 1644572421573L);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572421573L + "'", long51 == 1644572421573L);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1644572421573L + "'", long67 == 1644572421573L);
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(instant72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "2022-02-11T09:40:21.573Z" + "'", str75, "2022-02-11T09:40:21.573Z");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "2022-02-11T09:40:21.573Z" + "'", str77, "2022-02-11T09:40:21.573Z");
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1644572421573L + "'", long78 == 1644572421573L);
    }

    @Test
    public void test03886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03886");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        boolean boolean6 = period4.isSupported(durationFieldType5);
        boolean boolean8 = period4.equals((java.lang.Object) "hi!");
        int int9 = period4.size();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.Period period17 = mutableInterval15.toPeriod();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = period22.isSupported(durationFieldType23);
        boolean boolean26 = period22.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType28 = period22.getFieldType(0);
        int int29 = period17.get(durationFieldType28);
        int int30 = period4.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType32 = period4.getFieldType(0);
        java.lang.String str33 = period4.toString();
        org.joda.time.Period period34 = period4.toPeriod();
        org.joda.time.Period period35 = period34.toPeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT0S" + "'", str33, "PT0S");
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test03887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03887");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.hours();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.secondOfDay();
        org.joda.time.DateTimeField dateTimeField70 = chronology67.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField71 = chronology67.secondOfDay();
        long long75 = chronology67.add(1644572205559L, 0L, (int) (short) 10);
        org.joda.time.DateTimeField dateTimeField76 = chronology67.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField77 = chronology67.secondOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:21.607Z/2022-02-11T09:40:21.607Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:21.607Z/2022-02-11T09:40:21.607Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:21.607Z/2022-02-11T09:40:21.607Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572421607L + "'", long14 == 1644572421607L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572421607L + "'", long30 == 1644572421607L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572205559L + "'", long75 == 1644572205559L);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
    }

    @Test
    public void test03888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03888");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572135915L, 1644572166466L);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.Period period14 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology15 = mutableInterval5.getChronology();
        org.joda.time.Interval interval16 = mutableInterval5.toInterval();
        mutableInterval5.setInterval(1644572127359L, 1644572134896L);
        org.joda.time.MutableInterval mutableInterval20 = mutableInterval5.toMutableInterval();
        org.joda.time.DateTime dateTime21 = mutableInterval5.getStart();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = mutableInterval24.toPeriod(periodType25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = period26.isSupported(durationFieldType27);
        boolean boolean30 = period26.equals((java.lang.Object) "hi!");
        int int31 = period26.size();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        boolean boolean38 = mutableInterval34.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.Period period39 = mutableInterval37.toPeriod();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.Period period44 = mutableInterval42.toPeriod(periodType43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = period44.isSupported(durationFieldType45);
        boolean boolean48 = period44.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType50 = period44.getFieldType(0);
        int int51 = period39.get(durationFieldType50);
        int int52 = period26.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType54 = period26.getFieldType(0);
        org.joda.time.PeriodType periodType55 = period26.getPeriodType();
        org.joda.time.Period period56 = mutableInterval5.toPeriod(periodType55);
        org.joda.time.Period period57 = mutableInterval2.toPeriod(periodType55);
        int int58 = period57.size();
        int int59 = period57.size();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(chronology15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(mutableInterval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 8 + "'", int58 == 8);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
    }

    @Test
    public void test03889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03889");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        boolean boolean25 = mutableInterval21.contains(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        long long36 = mutableInterval35.toDurationMillis();
        boolean boolean37 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.contains(readableInstant38);
        boolean boolean40 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        boolean boolean55 = mutableInterval21.isBefore((org.joda.time.ReadableInterval) mutableInterval50);
        boolean boolean56 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = mutableInterval59.toPeriod(periodType60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        boolean boolean63 = period61.isSupported(durationFieldType62);
        boolean boolean65 = period61.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType67 = period61.getFieldType(0);
        mutableInterval50.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period61);
        org.joda.time.MutablePeriod mutablePeriod69 = period61.toMutablePeriod();
        org.joda.time.PeriodType periodType70 = mutablePeriod69.getPeriodType();
        org.joda.time.PeriodType periodType71 = mutablePeriod69.getPeriodType();
        org.joda.time.PeriodType periodType72 = mutablePeriod69.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int74 = mutablePeriod69.getValue(8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
    }

    @Test
    public void test03890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03890");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        long long2 = mutableInterval1.getEndMillis();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        boolean boolean9 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval8);
        org.joda.time.ReadablePeriod readablePeriod10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readablePeriod10, readableInstant11);
        long long13 = mutableInterval12.toDurationMillis();
        boolean boolean14 = mutableInterval8.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval8.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        boolean boolean19 = mutableInterval17.isBeforeNow();
        org.joda.time.Interval interval20 = mutableInterval17.toInterval();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        mutableInterval23.setDurationAfterStart(0L);
        boolean boolean27 = mutableInterval23.equals((java.lang.Object) (-1));
        mutableInterval23.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean31 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.Duration duration32 = mutableInterval17.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration34 = duration32.toDuration();
        mutableInterval1.setDurationAfterStart((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period36 = mutableInterval1.toPeriod();
        org.joda.time.Period period37 = mutableInterval1.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int39 = period37.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1644572134356L + "'", long2 == 1644572134356L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test03891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03891");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572344944L, 1644572324162L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03892");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.Period period14 = mutableInterval12.toPeriod();
        org.joda.time.Duration duration15 = mutableInterval12.toDuration();
        mutableInterval2.setDurationAfterStart((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Chronology chronology17 = mutableInterval2.getChronology();
        org.joda.time.DurationField durationField18 = chronology17.millis();
        org.joda.time.DateTimeField dateTimeField19 = chronology17.hourOfDay();
        org.joda.time.DurationField durationField20 = chronology17.months();
        org.joda.time.DateTimeField dateTimeField21 = chronology17.hourOfDay();
        org.joda.time.DateTimeField dateTimeField22 = chronology17.halfdayOfDay();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertNotNull(durationField18);
        org.junit.Assert.assertNotNull(dateTimeField19);
        org.junit.Assert.assertNotNull(durationField20);
        org.junit.Assert.assertNotNull(dateTimeField21);
        org.junit.Assert.assertNotNull(dateTimeField22);
    }

    @Test
    public void test03893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03893");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readablePeriod9, readableInstant10);
        long long12 = mutableInterval11.toDurationMillis();
        boolean boolean13 = mutableInterval7.isAfter((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        boolean boolean15 = mutableInterval11.contains(readableInstant14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = mutableInterval25.contains(readableInstant28);
        boolean boolean30 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        long long31 = mutableInterval25.getStartMillis();
        org.joda.time.Chronology chronology32 = mutableInterval25.getChronology();
        org.joda.time.DateTimeField dateTimeField33 = chronology32.millisOfDay();
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(1644572134186L, 1644572156655L, chronology32);
        boolean boolean35 = mutableInterval34.containsNow();
        org.joda.time.DateTime dateTime36 = mutableInterval34.getEnd();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        boolean boolean43 = mutableInterval39.equals((java.lang.Object) (-1));
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getEnd();
        mutableInterval39.setInterval(1644572126318L, 1644572134016L);
        org.joda.time.Interval interval49 = mutableInterval39.toInterval();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.Period period57 = mutableInterval55.toPeriod();
        org.joda.time.Duration duration58 = mutableInterval55.toDuration();
        long long59 = duration58.getMillis();
        mutableInterval39.setDurationAfterStart((org.joda.time.ReadableDuration) duration58);
        long long61 = mutableInterval39.getEndMillis();
        boolean boolean62 = mutableInterval39.isBeforeNow();
        org.joda.time.Period period63 = mutableInterval39.toPeriod();
        boolean boolean64 = mutableInterval34.isBefore((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.Period period65 = mutableInterval34.toPeriod();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572422048L + "'", long31 == 1644572422048L);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(dateTimeField33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572422048L + "'", long44 == 1644572422048L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572126318L + "'", long61 == 1644572126318L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(period65);
    }

    @Test
    public void test03894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03894");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.DateTime dateTime16 = mutableInterval6.getEnd();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        boolean boolean42 = mutableInterval28.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean43 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.DateTimeZone dateTimeZone44 = dateTime25.getZone();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        mutableInterval47.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        long long52 = mutableInterval47.getEndMillis();
        org.joda.time.DateTime dateTime53 = mutableInterval47.getStart();
        boolean boolean54 = dateTime25.isEqual((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Chronology chronology56 = mutableInterval55.getChronology();
        org.joda.time.MutableInterval mutableInterval57 = mutableInterval55.toMutableInterval();
        java.lang.Class<?> wildcardClass58 = mutableInterval57.getClass();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572422194L + "'", long7 == 1644572422194L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572422194L + "'", long24 == 1644572422194L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572422194L + "'", long40 == 1644572422194L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(dateTimeZone44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1644572422194L + "'", long52 == 1644572422194L);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(chronology56);
        org.junit.Assert.assertNotNull(mutableInterval57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test03895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03895");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        long long8 = mutableInterval2.getStartMillis();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        long long16 = mutableInterval15.getStartMillis();
        org.joda.time.Period period17 = mutableInterval15.toPeriod();
        java.lang.String str18 = mutableInterval15.toString();
        boolean boolean19 = mutableInterval15.isAfterNow();
        boolean boolean20 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean28 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.Duration duration29 = mutableInterval15.toDuration();
        org.joda.time.MutableInterval mutableInterval30 = mutableInterval15.toMutableInterval();
        mutableInterval30.setStartMillis(1644572365439L);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572422217L + "'", long5 == 1644572422217L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572422217L + "'", long8 == 1644572422217L);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572422217L + "'", long16 == 1644572422217L);
        org.junit.Assert.assertNotNull(period17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2022-02-11T09:40:22.217Z/2022-02-11T09:40:22.217Z" + "'", str18, "2022-02-11T09:40:22.217Z/2022-02-11T09:40:22.217Z");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(mutableInterval30);
    }

    @Test
    public void test03896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03896");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        long long14 = mutableInterval9.getEndMillis();
        long long15 = mutableInterval9.getStartMillis();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = mutableInterval34.toPeriod(periodType35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period36, readableInstant37);
        long long39 = mutableInterval38.getStartMillis();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        boolean boolean47 = mutableInterval38.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        boolean boolean48 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        mutableInterval54.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.isAfter(readableInstant57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        boolean boolean65 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadablePeriod readablePeriod66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readablePeriod66, readableInstant67);
        long long69 = mutableInterval68.toDurationMillis();
        boolean boolean70 = mutableInterval64.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.contains(readableInstant71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        boolean boolean79 = mutableInterval75.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.ReadablePeriod readablePeriod80 = null;
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.MutableInterval mutableInterval82 = new org.joda.time.MutableInterval(readablePeriod80, readableInstant81);
        long long83 = mutableInterval82.toDurationMillis();
        boolean boolean84 = mutableInterval78.isAfter((org.joda.time.ReadableInterval) mutableInterval82);
        org.joda.time.ReadableInstant readableInstant85 = null;
        boolean boolean86 = mutableInterval82.contains(readableInstant85);
        boolean boolean87 = mutableInterval68.overlaps((org.joda.time.ReadableInterval) mutableInterval82);
        org.joda.time.Duration duration88 = mutableInterval82.toDuration();
        mutableInterval54.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration88);
        mutableInterval51.setDurationAfterStart((org.joda.time.ReadableDuration) duration88);
        mutableInterval38.setDurationAfterStart((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Chronology chronology92 = mutableInterval38.getChronology();
        org.joda.time.DateTimeField dateTimeField93 = chronology92.monthOfYear();
        mutableInterval9.setChronology(chronology92);
        org.joda.time.Duration duration95 = mutableInterval9.toDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572422289L + "'", long14 == 1644572422289L);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1644572422289L + "'", long15 == 1644572422289L);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572422289L + "'", long23 == 1644572422289L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period36);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1644572422289L + "'", long39 == 1644572422289L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(chronology92);
        org.junit.Assert.assertNotNull(dateTimeField93);
        org.junit.Assert.assertNotNull(duration95);
    }

    @Test
    public void test03897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03897");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readablePeriod9, readableInstant10);
        long long12 = mutableInterval11.toDurationMillis();
        boolean boolean13 = mutableInterval7.isAfter((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        boolean boolean15 = mutableInterval11.contains(readableInstant14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = mutableInterval25.contains(readableInstant28);
        boolean boolean30 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        long long31 = mutableInterval25.getStartMillis();
        org.joda.time.Chronology chronology32 = mutableInterval25.getChronology();
        org.joda.time.DateTimeField dateTimeField33 = chronology32.millisOfDay();
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(1644572134186L, 1644572156655L, chronology32);
        org.joda.time.DurationField durationField35 = chronology32.centuries();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572422358L + "'", long31 == 1644572422358L);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(dateTimeField33);
        org.junit.Assert.assertNotNull(durationField35);
    }

    @Test
    public void test03898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03898");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        boolean boolean28 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.Duration duration29 = mutableInterval23.toDuration();
        boolean boolean31 = duration29.equals((java.lang.Object) 'a');
        long long32 = duration29.getMillis();
        long long33 = duration29.getMillis();
        org.joda.time.Period period34 = duration29.toPeriod();
        org.joda.time.Duration duration35 = duration29.toDuration();
        org.joda.time.ReadableDuration readableDuration36 = null;
        boolean boolean37 = duration35.isEqual(readableDuration36);
        org.joda.time.Duration duration38 = duration35.toDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(duration38);
    }

    @Test
    public void test03899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03899");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        org.joda.time.Chronology chronology13 = mutableInterval2.getChronology();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readablePeriod35, readableInstant36);
        long long38 = mutableInterval37.toDurationMillis();
        boolean boolean39 = mutableInterval33.isAfter((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        boolean boolean41 = mutableInterval37.contains(readableInstant40);
        boolean boolean42 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.Duration duration43 = mutableInterval37.toDuration();
        boolean boolean44 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.MutableInterval mutableInterval46 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology47 = mutableInterval46.getChronology();
        boolean boolean48 = mutableInterval2.isBefore((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        boolean boolean64 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval63);
        java.lang.String str65 = mutableInterval54.toString();
        boolean boolean66 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readablePeriod67, readableInstant68);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableDuration readableDuration71 = null;
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(readableInstant70, readableDuration71);
        org.joda.time.PeriodType periodType73 = null;
        org.joda.time.Period period74 = mutableInterval72.toPeriod(periodType73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period74, readableInstant75);
        boolean boolean77 = mutableInterval69.isAfter((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.Period period78 = mutableInterval69.toPeriod();
        org.joda.time.Chronology chronology79 = mutableInterval69.getChronology();
        org.joda.time.Interval interval80 = mutableInterval69.toInterval();
        mutableInterval69.setInterval(1644572127359L, 1644572134896L);
        org.joda.time.MutableInterval mutableInterval84 = mutableInterval69.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.ReadableDuration readableDuration86 = null;
        org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval(readableInstant85, readableDuration86);
        mutableInterval87.setDurationAfterStart(0L);
        org.joda.time.MutableInterval mutableInterval90 = mutableInterval87.toMutableInterval();
        mutableInterval69.setInterval((org.joda.time.ReadableInterval) mutableInterval87);
        boolean boolean92 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval87);
        mutableInterval54.setStartMillis(1644572246591L);
        mutableInterval54.setDurationAfterStart(1644572176663L);
        org.joda.time.DateTime dateTime97 = mutableInterval54.getStart();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(chronology13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(mutableInterval46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "2022-02-11T09:40:22.463Z/2022-02-11T09:40:22.463Z" + "'", str65, "2022-02-11T09:40:22.463Z/2022-02-11T09:40:22.463Z");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(mutableInterval84);
        org.junit.Assert.assertNotNull(mutableInterval90);
// flaky:         org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(dateTime97);
    }

    @Test
    public void test03900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03900");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.Chronology chronology67 = dateTime31.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.weekyears();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.weekyear();
        java.lang.String str70 = chronology67.toString();
        org.joda.time.DateTimeField dateTimeField71 = chronology67.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField72 = chronology67.weekyearOfCentury();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:22.489Z/2022-02-11T09:40:22.489Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:22.489Z/2022-02-11T09:40:22.489Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:22.489Z/2022-02-11T09:40:22.489Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572422489L + "'", long14 == 1644572422489L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572422489L + "'", long30 == 1644572422489L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(durationField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str70, "ISOChronology[Etc/UTC]");
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
    }

    @Test
    public void test03901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03901");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        long long14 = mutableInterval9.getEndMillis();
        java.lang.String str15 = mutableInterval9.toString();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        mutableInterval9.setStart((org.joda.time.ReadableInstant) dateTime31);
        long long34 = dateTime31.getMillis();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        boolean boolean41 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readablePeriod42, readableInstant43);
        long long45 = mutableInterval44.toDurationMillis();
        boolean boolean46 = mutableInterval40.isAfter((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        boolean boolean48 = mutableInterval44.contains(readableInstant47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readablePeriod56, readableInstant57);
        long long59 = mutableInterval58.toDurationMillis();
        boolean boolean60 = mutableInterval54.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        boolean boolean62 = mutableInterval58.contains(readableInstant61);
        boolean boolean63 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.Duration duration64 = mutableInterval58.toDuration();
        boolean boolean66 = duration64.equals((java.lang.Object) 'a');
        long long67 = duration64.getMillis();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        boolean boolean74 = mutableInterval70.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.ReadablePeriod readablePeriod75 = null;
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readablePeriod75, readableInstant76);
        long long78 = mutableInterval77.toDurationMillis();
        boolean boolean79 = mutableInterval73.isAfter((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.ReadableDuration readableDuration81 = null;
        org.joda.time.MutableInterval mutableInterval82 = new org.joda.time.MutableInterval(readableInstant80, readableDuration81);
        boolean boolean83 = mutableInterval73.overlaps((org.joda.time.ReadableInterval) mutableInterval82);
        boolean boolean84 = mutableInterval82.isBeforeNow();
        org.joda.time.Interval interval85 = mutableInterval82.toInterval();
        org.joda.time.MutableInterval mutableInterval86 = mutableInterval82.toMutableInterval();
        org.joda.time.Duration duration87 = mutableInterval86.toDuration();
        int int88 = duration64.compareTo((org.joda.time.ReadableDuration) duration87);
        boolean boolean89 = dateTime31.equals((java.lang.Object) duration64);
        org.joda.time.Period period90 = duration64.toPeriod();
        long long91 = duration64.getMillis();
        org.joda.time.Period period92 = duration64.toPeriod();
        long long93 = duration64.getMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572422612L + "'", long14 == 1644572422612L);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "2022-02-11T09:40:22.612Z/2022-02-11T09:40:22.612Z" + "'", str15, "2022-02-11T09:40:22.612Z/2022-02-11T09:40:22.612Z");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572422612L + "'", long30 == 1644572422612L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572422612L + "'", long34 == 1644572422612L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(mutableInterval86);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test03902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03902");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.Period period8 = mutableInterval6.toPeriod();
        java.lang.String str9 = mutableInterval6.toString();
        boolean boolean10 = mutableInterval6.isAfterNow();
        org.joda.time.DateTime dateTime11 = mutableInterval6.getEnd();
        long long12 = dateTime11.getMillis();
        java.lang.String str13 = dateTime11.toString();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        org.joda.time.MutableInterval mutableInterval19 = mutableInterval16.toMutableInterval();
        org.joda.time.Chronology chronology20 = mutableInterval16.getChronology();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = mutableInterval23.toPeriod(periodType24);
        long long26 = mutableInterval23.getEndMillis();
        boolean boolean28 = mutableInterval23.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval29 = mutableInterval23.copy();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.isAfter(readableInstant38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        mutableInterval42.setStartMillis(1644572127942L);
        boolean boolean47 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        boolean boolean48 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        boolean boolean55 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.Period period56 = mutableInterval54.toPeriod();
        mutableInterval42.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period56);
        boolean boolean58 = mutableInterval23.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.DateTime dateTime59 = mutableInterval42.getEnd();
        mutableInterval16.setStart((org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Chronology chronology61 = dateTime59.getChronology();
        boolean boolean62 = dateTime11.isBefore((org.joda.time.ReadableInstant) dateTime59);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572422905L + "'", long7 == 1644572422905L);
        org.junit.Assert.assertNotNull(period8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "2022-02-11T09:40:22.905Z/2022-02-11T09:40:22.905Z" + "'", str9, "2022-02-11T09:40:22.905Z/2022-02-11T09:40:22.905Z");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(dateTime11);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1644572422905L + "'", long12 == 1644572422905L);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "2022-02-11T09:40:22.905Z" + "'", str13, "2022-02-11T09:40:22.905Z");
        org.junit.Assert.assertNotNull(mutableInterval19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(period25);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572422905L + "'", long26 == 1644572422905L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(mutableInterval29);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(chronology61);
// flaky:         org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test03903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03903");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        boolean boolean19 = mutableInterval16.contains(readableInstant18);
        boolean boolean20 = mutableInterval10.contains((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = mutableInterval26.toPeriod(periodType27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period28, readableInstant29);
        boolean boolean31 = mutableInterval23.isAfter((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.Period period32 = mutableInterval23.toPeriod();
        boolean boolean33 = mutableInterval16.contains((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        boolean boolean50 = mutableInterval48.isBeforeNow();
        org.joda.time.Interval interval51 = mutableInterval48.toInterval();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = mutableInterval54.toPeriod(periodType55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period56, readableInstant57);
        long long59 = mutableInterval58.getStartMillis();
        boolean boolean60 = interval51.isAfter((org.joda.time.ReadableInterval) mutableInterval58);
        mutableInterval16.setInterval((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readableInstant66, readableDuration67);
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = mutableInterval68.toPeriod(periodType69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        boolean boolean77 = mutableInterval73.overlaps((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.Period period78 = mutableInterval76.toPeriod();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        org.joda.time.PeriodType periodType82 = null;
        org.joda.time.Period period83 = mutableInterval81.toPeriod(periodType82);
        org.joda.time.DurationFieldType durationFieldType84 = null;
        boolean boolean85 = period83.isSupported(durationFieldType84);
        boolean boolean87 = period83.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType89 = period83.getFieldType(0);
        int int90 = period78.get(durationFieldType89);
        int int91 = period70.get(durationFieldType89);
        mutableInterval64.setPeriodAfterStart((org.joda.time.ReadablePeriod) period70);
        org.joda.time.DateTime dateTime93 = mutableInterval64.getEnd();
        boolean boolean95 = mutableInterval64.contains(1644572125616L);
        org.joda.time.DateTime dateTime96 = mutableInterval64.getStart();
        boolean boolean97 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        boolean boolean99 = mutableInterval16.equals((java.lang.Object) 1644572367407L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(period56);
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1644572422977L + "'", long59 == 1644572422977L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(dateTime93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(dateTime96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03904");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Interval interval31 = mutableInterval2.toInterval();
        org.joda.time.Chronology chronology32 = mutableInterval2.getChronology();
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval2);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        mutableInterval36.setDurationAfterStart(0L);
        mutableInterval36.setStartMillis(1644572127942L);
        mutableInterval36.setStartMillis(1644572127679L);
        mutableInterval36.setDurationAfterStart(1644572124037L);
        org.joda.time.Period period45 = mutableInterval36.toPeriod();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.Period period50 = mutableInterval48.toPeriod(periodType49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        boolean boolean52 = period50.isSupported(durationFieldType51);
        boolean boolean54 = period50.equals((java.lang.Object) "hi!");
        int int55 = period50.size();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Period period63 = mutableInterval61.toPeriod();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = mutableInterval66.toPeriod(periodType67);
        org.joda.time.DurationFieldType durationFieldType69 = null;
        boolean boolean70 = period68.isSupported(durationFieldType69);
        boolean boolean72 = period68.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType74 = period68.getFieldType(0);
        int int75 = period63.get(durationFieldType74);
        int int76 = period50.get(durationFieldType74);
        boolean boolean77 = period45.isSupported(durationFieldType74);
        int int78 = period45.size();
        org.joda.time.PeriodType periodType79 = period45.getPeriodType();
        org.joda.time.Period period80 = mutableInterval2.toPeriod(periodType79);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 8 + "'", int78 == 8);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test03905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03905");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.halfdayOfDay();
        org.joda.time.DurationField durationField73 = chronology66.days();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.secondOfDay();
        org.joda.time.DurationField durationField75 = chronology66.weekyears();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:23.041Z/2022-02-11T09:40:23.041Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:23.041Z/2022-02-11T09:40:23.041Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:23.041Z/2022-02-11T09:40:23.041Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572423041L + "'", long14 == 1644572423041L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572423041L + "'", long30 == 1644572423041L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(durationField75);
    }

    @Test
    public void test03906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03906");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.millisOfSecond();
        org.joda.time.DurationField durationField72 = chronology66.halfdays();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.centuryOfEra();
        org.joda.time.DurationField durationField74 = chronology66.seconds();
        java.lang.String str75 = chronology66.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:23.068Z/2022-02-11T09:40:23.068Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:23.068Z/2022-02-11T09:40:23.068Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:23.068Z/2022-02-11T09:40:23.068Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572423068L + "'", long14 == 1644572423068L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572423068L + "'", long30 == 1644572423068L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str75, "ISOChronology[Etc/UTC]");
    }

    @Test
    public void test03907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03907");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        mutableInterval38.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant41 = null;
        boolean boolean42 = mutableInterval38.isAfter(readableInstant41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        mutableInterval38.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration72);
        mutableInterval35.setDurationAfterStart((org.joda.time.ReadableDuration) duration72);
        mutableInterval22.setDurationAfterStart((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Chronology chronology76 = mutableInterval22.getChronology();
        org.joda.time.DateTimeField dateTimeField77 = chronology76.monthOfYear();
        org.joda.time.DurationField durationField78 = chronology76.seconds();
        org.joda.time.DateTimeField dateTimeField79 = chronology76.monthOfYear();
        long long83 = chronology76.add(1644572178022L, 1644572182975L, (int) (short) 10);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572423141L + "'", long7 == 1644572423141L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572423141L + "'", long23 == 1644572423141L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(chronology76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 18090294007772L + "'", long83 == 18090294007772L);
    }

    @Test
    public void test03908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03908");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.Interval interval6 = mutableInterval2.toInterval();
        org.joda.time.Chronology chronology7 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField8 = chronology7.era();
        org.joda.time.DateTimeField dateTimeField9 = chronology7.secondOfDay();
        org.joda.time.DurationField durationField10 = chronology7.years();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:23.162Z/2022-02-11T09:40:23.162Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:23.162Z/2022-02-11T09:40:23.162Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:23.162Z/2022-02-11T09:40:23.162Z");
        org.junit.Assert.assertNotNull(interval6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(dateTimeField8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
    }

    @Test
    public void test03909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03909");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.yearOfEra();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfMonth();
        org.joda.time.DurationField durationField70 = chronology66.weeks();
        org.joda.time.DurationField durationField71 = chronology66.centuries();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:23.175Z/2022-02-11T09:40:23.175Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:23.175Z/2022-02-11T09:40:23.175Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:23.175Z/2022-02-11T09:40:23.175Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572423176L + "'", long14 == 1644572423176L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572423176L + "'", long30 == 1644572423176L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(durationField71);
    }

    @Test
    public void test03910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03910");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Duration duration8 = mutableInterval5.toDuration();
        long long9 = mutableInterval5.getEndMillis();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readablePeriod17, readableInstant18);
        long long20 = mutableInterval19.toDurationMillis();
        boolean boolean21 = mutableInterval15.isAfter((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableDuration readableDuration23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readableInstant22, readableDuration23);
        boolean boolean25 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval24);
        boolean boolean26 = mutableInterval24.isBeforeNow();
        org.joda.time.Interval interval27 = mutableInterval24.toInterval();
        org.joda.time.MutableInterval mutableInterval28 = mutableInterval24.toMutableInterval();
        long long29 = mutableInterval28.getStartMillis();
        org.joda.time.ReadablePeriod readablePeriod30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readablePeriod30, readableInstant31);
        long long33 = mutableInterval32.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = mutableInterval36.toPeriod(periodType37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.Period period46 = mutableInterval44.toPeriod();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.Period period51 = mutableInterval49.toPeriod(periodType50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        boolean boolean53 = period51.isSupported(durationFieldType52);
        boolean boolean55 = period51.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType57 = period51.getFieldType(0);
        int int58 = period46.get(durationFieldType57);
        int int59 = period38.get(durationFieldType57);
        mutableInterval32.setPeriodAfterStart((org.joda.time.ReadablePeriod) period38);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        mutableInterval63.setDurationAfterStart(0L);
        boolean boolean67 = mutableInterval63.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        boolean boolean74 = mutableInterval70.overlaps((org.joda.time.ReadableInterval) mutableInterval73);
        org.joda.time.Period period75 = mutableInterval73.toPeriod();
        org.joda.time.Duration duration76 = mutableInterval73.toDuration();
        mutableInterval63.setDurationAfterStart((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Chronology chronology78 = mutableInterval63.getChronology();
        java.lang.String str79 = mutableInterval63.toString();
        boolean boolean80 = mutableInterval32.contains((org.joda.time.ReadableInterval) mutableInterval63);
        mutableInterval28.setInterval((org.joda.time.ReadableInterval) mutableInterval63);
        boolean boolean82 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.Period period83 = mutableInterval63.toPeriod();
        org.joda.time.Period period84 = period83.toPeriod();
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.ReadableDuration readableDuration86 = null;
        org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval(readableInstant85, readableDuration86);
        org.joda.time.PeriodType periodType88 = null;
        org.joda.time.Period period89 = mutableInterval87.toPeriod(periodType88);
        org.joda.time.DurationFieldType durationFieldType90 = null;
        boolean boolean91 = period89.isSupported(durationFieldType90);
        boolean boolean93 = period89.equals((java.lang.Object) "hi!");
        boolean boolean95 = period89.equals((java.lang.Object) 1644572141074L);
        java.lang.String str96 = period89.toString();
        org.joda.time.DurationFieldType durationFieldType98 = period89.getFieldType(0);
        boolean boolean99 = period84.isSupported(durationFieldType98);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572423205L + "'", long9 == 1644572423205L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(mutableInterval28);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572423206L + "'", long29 == 1644572423206L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(chronology78);
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "2022-02-11T09:40:23.206Z/2022-02-11T09:40:23.206Z" + "'", str79, "2022-02-11T09:40:23.206Z/2022-02-11T09:40:23.206Z");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "PT0S" + "'", str96, "PT0S");
        org.junit.Assert.assertNotNull(durationFieldType98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test03911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03911");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        mutableInterval9.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean17 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Interval interval18 = mutableInterval9.toInterval();
        org.joda.time.DateTime dateTime19 = interval18.getStart();
        long long20 = dateTime19.getMillis();
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = null;
        boolean boolean22 = dateTime19.isSupported(dateTimeFieldType21);
        java.lang.String str23 = dateTime19.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1969-12-31T23:59:59.999Z" + "'", str23, "1969-12-31T23:59:59.999Z");
    }

    @Test
    public void test03912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03912");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval8 = mutableInterval2.copy();
        boolean boolean10 = mutableInterval2.isAfter(1644572138018L);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = mutableInterval13.toPeriod(periodType14);
        java.lang.Object obj16 = mutableInterval13.clone();
        org.joda.time.DateTime dateTime17 = mutableInterval13.getStart();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        long long25 = mutableInterval20.getEndMillis();
        org.joda.time.DateTime dateTime26 = mutableInterval20.getEnd();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        mutableInterval36.setDurationAfterStart(0L);
        boolean boolean40 = mutableInterval36.equals((java.lang.Object) (-1));
        long long41 = mutableInterval36.getEndMillis();
        org.joda.time.DateTime dateTime42 = mutableInterval36.getEnd();
        boolean boolean43 = mutableInterval29.isAfter((org.joda.time.ReadableInstant) dateTime42);
        boolean boolean44 = dateTime26.isAfter((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        boolean boolean51 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readablePeriod52, readableInstant53);
        long long55 = mutableInterval54.toDurationMillis();
        boolean boolean56 = mutableInterval50.isAfter((org.joda.time.ReadableInterval) mutableInterval54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        boolean boolean58 = mutableInterval54.contains(readableInstant57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        boolean boolean65 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadablePeriod readablePeriod66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readablePeriod66, readableInstant67);
        long long69 = mutableInterval68.toDurationMillis();
        boolean boolean70 = mutableInterval64.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.contains(readableInstant71);
        boolean boolean73 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.Duration duration74 = mutableInterval68.toDuration();
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = mutableInterval13.contains((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.Chronology chronology77 = dateTime42.getChronology();
        org.joda.time.DateTimeField dateTimeField78 = chronology77.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField79 = chronology77.yearOfEra();
        org.joda.time.DateTimeField dateTimeField80 = chronology77.dayOfMonth();
        org.joda.time.DurationField durationField81 = chronology77.weeks();
        org.joda.time.Chronology chronology82 = chronology77.withUTC();
        org.joda.time.DateTimeField dateTimeField83 = chronology77.weekyearOfCentury();
        mutableInterval2.setChronology(chronology77);
        boolean boolean86 = mutableInterval2.isAfter(9783L);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572423255L + "'", long5 == 1644572423255L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mutableInterval8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals(obj16.toString(), "2022-02-11T09:40:23.255Z/2022-02-11T09:40:23.255Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "2022-02-11T09:40:23.255Z/2022-02-11T09:40:23.255Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "2022-02-11T09:40:23.255Z/2022-02-11T09:40:23.255Z");
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572423255L + "'", long25 == 1644572423255L);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572423255L + "'", long41 == 1644572423255L);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(durationField81);
        org.junit.Assert.assertNotNull(chronology82);
        org.junit.Assert.assertNotNull(dateTimeField83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test03913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03913");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572250146L, 1644572133452L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03914");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean28 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.Period period29 = mutableInterval20.toPeriod();
        org.joda.time.Chronology chronology30 = mutableInterval20.getChronology();
        org.joda.time.Interval interval31 = mutableInterval20.toInterval();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(chronology30);
        org.junit.Assert.assertNotNull(interval31);
    }

    @Test
    public void test03915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03915");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DurationField durationField67 = chronology66.months();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.era();
        long long72 = chronology66.add(1644572194911L, 1644572264150L, (-1));
        org.joda.time.DateTimeField dateTimeField73 = chronology66.weekyearOfCentury();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:23.302Z/2022-02-11T09:40:23.302Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:23.302Z/2022-02-11T09:40:23.302Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:23.302Z/2022-02-11T09:40:23.302Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572423302L + "'", long14 == 1644572423302L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572423302L + "'", long30 == 1644572423302L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(durationField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-69239L) + "'", long72 == (-69239L));
        org.junit.Assert.assertNotNull(dateTimeField73);
    }

    @Test
    public void test03916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03916");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        mutableInterval5.setDurationAfterStart(1644572138042L);
        boolean boolean19 = mutableInterval5.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.Period period27 = mutableInterval25.toPeriod();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = mutableInterval30.toPeriod(periodType31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = period32.isSupported(durationFieldType33);
        boolean boolean36 = period32.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType38 = period32.getFieldType(0);
        int int39 = period27.get(durationFieldType38);
        mutableInterval5.setPeriodAfterStart((org.joda.time.ReadablePeriod) period27);
        org.joda.time.MutableInterval mutableInterval41 = mutableInterval5.toMutableInterval();
        org.joda.time.Chronology chronology42 = mutableInterval41.getChronology();
        org.joda.time.DurationField durationField43 = chronology42.weeks();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:23.487Z/2022-02-11T09:40:23.487Z" + "'", str16, "2022-02-11T09:40:23.487Z/2022-02-11T09:40:23.487Z");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(mutableInterval41);
        org.junit.Assert.assertNotNull(chronology42);
        org.junit.Assert.assertNotNull(durationField43);
    }

    @Test
    public void test03917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03917");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        long long11 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime12 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = mutableInterval15.toPeriod(periodType16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = period17.isSupported(durationFieldType18);
        boolean boolean21 = period17.equals((java.lang.Object) "hi!");
        int int22 = period17.size();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.Period period30 = mutableInterval28.toPeriod();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = mutableInterval33.toPeriod(periodType34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = period35.isSupported(durationFieldType36);
        boolean boolean39 = period35.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType41 = period35.getFieldType(0);
        int int42 = period30.get(durationFieldType41);
        int int43 = period17.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType45 = period17.getFieldType(0);
        java.lang.String str46 = period17.toString();
        int int47 = period17.size();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        mutableInterval50.setDurationAfterStart(0L);
        boolean boolean54 = mutableInterval50.equals((java.lang.Object) (-1));
        long long55 = mutableInterval50.getEndMillis();
        org.joda.time.DateTime dateTime56 = mutableInterval50.getEnd();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        mutableInterval66.setDurationAfterStart(0L);
        boolean boolean70 = mutableInterval66.equals((java.lang.Object) (-1));
        long long71 = mutableInterval66.getEndMillis();
        org.joda.time.DateTime dateTime72 = mutableInterval66.getEnd();
        boolean boolean73 = mutableInterval59.isAfter((org.joda.time.ReadableInstant) dateTime72);
        boolean boolean74 = dateTime56.isAfter((org.joda.time.ReadableInstant) dateTime72);
        boolean boolean75 = period17.equals((java.lang.Object) boolean74);
        org.joda.time.PeriodType periodType76 = period17.getPeriodType();
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period17);
        mutableInterval2.setStartMillis(1644572187818L);
        mutableInterval2.setEndMillis(1644572208455L);
        boolean boolean83 = mutableInterval2.contains(1644572271713L);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1644572423555L + "'", long11 == 1644572423555L);
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT0S" + "'", str46, "PT0S");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1644572423555L + "'", long55 == 1644572423555L);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572423555L + "'", long71 == 1644572423555L);
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test03918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03918");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572357752L, 1644572194437L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03919");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        mutableInterval2.setStartMillis(1644572128269L);
        org.joda.time.DateTime dateTime68 = mutableInterval2.getEnd();
        long long69 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval70 = mutableInterval2.toInterval();
        org.joda.time.MutableInterval mutableInterval71 = mutableInterval2.copy();
        java.lang.Class<?> wildcardClass72 = mutableInterval71.getClass();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:23.586Z/2022-02-11T09:40:23.586Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:23.586Z/2022-02-11T09:40:23.586Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:23.586Z/2022-02-11T09:40:23.586Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572423586L + "'", long14 == 1644572423586L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572423586L + "'", long30 == 1644572423586L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(dateTime68);
// flaky:         org.junit.Assert.assertTrue("'" + long69 + "' != '" + 295317L + "'", long69 == 295317L);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(mutableInterval71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test03920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03920");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField12 = chronology8.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = chronology8.yearOfEra();
        org.joda.time.DurationField durationField14 = chronology8.halfdays();
        org.joda.time.DateTimeField dateTimeField15 = chronology8.era();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(dateTimeField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(durationField14);
        org.junit.Assert.assertNotNull(dateTimeField15);
    }

    @Test
    public void test03921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03921");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.secondOfDay();
        org.joda.time.DurationField durationField72 = chronology66.hours();
        long long76 = chronology66.add((long) '4', 1644572130448L, (int) (short) 100);
        org.joda.time.DateTimeField dateTimeField77 = chronology66.secondOfMinute();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:23.628Z/2022-02-11T09:40:23.628Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:23.628Z/2022-02-11T09:40:23.628Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:23.628Z/2022-02-11T09:40:23.628Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572423628L + "'", long14 == 1644572423628L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572423628L + "'", long30 == 1644572423628L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 164457213044852L + "'", long76 == 164457213044852L);
        org.junit.Assert.assertNotNull(dateTimeField77);
    }

    @Test
    public void test03922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03922");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.DateTime dateTime16 = mutableInterval6.getEnd();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        mutableInterval35.setDurationAfterStart(0L);
        boolean boolean39 = mutableInterval35.equals((java.lang.Object) (-1));
        long long40 = mutableInterval35.getEndMillis();
        org.joda.time.DateTime dateTime41 = mutableInterval35.getEnd();
        boolean boolean42 = mutableInterval28.isAfter((org.joda.time.ReadableInstant) dateTime41);
        boolean boolean43 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.DateTimeZone dateTimeZone44 = dateTime25.getZone();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        mutableInterval47.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        long long52 = mutableInterval47.getEndMillis();
        org.joda.time.DateTime dateTime53 = mutableInterval47.getStart();
        boolean boolean54 = dateTime25.isEqual((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        boolean boolean72 = mutableInterval70.isBeforeNow();
        org.joda.time.Interval interval73 = mutableInterval70.toInterval();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.Period period78 = mutableInterval76.toPeriod(periodType77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period78, readableInstant79);
        long long81 = mutableInterval80.getStartMillis();
        boolean boolean82 = interval73.isAfter((org.joda.time.ReadableInterval) mutableInterval80);
        mutableInterval80.setInterval(1644572140816L, 1644572143014L);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.ReadableDuration readableDuration87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval(readableInstant86, readableDuration87);
        org.joda.time.PeriodType periodType89 = null;
        org.joda.time.Period period90 = mutableInterval88.toPeriod(periodType89);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.MutableInterval mutableInterval92 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period90, readableInstant91);
        int int93 = period90.size();
        mutableInterval80.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period90);
        org.joda.time.MutableInterval mutableInterval95 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadablePeriod) period90);
        mutableInterval95.setStartMillis(1644572351369L);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572423656L + "'", long7 == 1644572423656L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572423656L + "'", long24 == 1644572423656L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572423656L + "'", long40 == 1644572423656L);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(dateTimeZone44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1644572423656L + "'", long52 == 1644572423656L);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(period78);
// flaky:         org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1644572423656L + "'", long81 == 1644572423656L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 8 + "'", int93 == 8);
    }

    @Test
    public void test03923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03923");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval14);
        org.joda.time.ReadableDuration readableDuration17 = null;
        mutableInterval14.setDurationAfterStart(readableDuration17);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03924");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.DateTime dateTime31 = mutableInterval2.getEnd();
        boolean boolean32 = mutableInterval2.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readablePeriod40, readableInstant41);
        long long43 = mutableInterval42.toDurationMillis();
        boolean boolean44 = mutableInterval38.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        boolean boolean46 = mutableInterval42.contains(readableInstant45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        boolean boolean53 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadablePeriod readablePeriod54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readablePeriod54, readableInstant55);
        long long57 = mutableInterval56.toDurationMillis();
        boolean boolean58 = mutableInterval52.isAfter((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        boolean boolean60 = mutableInterval56.contains(readableInstant59);
        boolean boolean61 = mutableInterval42.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        boolean boolean62 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        boolean boolean63 = mutableInterval42.isAfterNow();
        boolean boolean65 = mutableInterval42.isBefore(1644572307518L);
        boolean boolean66 = mutableInterval42.isAfterNow();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test03925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03925");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.yearOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfMonth();
        org.joda.time.DurationField durationField72 = chronology68.weeks();
        org.joda.time.Chronology chronology73 = chronology68.withUTC();
        org.joda.time.DurationField durationField74 = chronology68.days();
        org.joda.time.DateTimeField dateTimeField75 = chronology68.hourOfHalfday();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(1644572129943L, 1644572134508L, chronology68);
        org.joda.time.DateTimeField dateTimeField77 = chronology68.dayOfWeek();
        org.joda.time.DurationField durationField78 = chronology68.weeks();
        org.joda.time.DateTimeField dateTimeField79 = chronology68.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField80 = chronology68.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField81 = chronology68.dayOfYear();
        // The following exception was thrown during execution in test generation
        try {
            long long87 = chronology68.getDateTimeMillis(1644572343226L, (int) '#', (int) (short) 1, (int) (short) 0, 8);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 35 for hourOfDay must be in the range [0,23]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:23.723Z/2022-02-11T09:40:23.723Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:23.723Z/2022-02-11T09:40:23.723Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:23.723Z/2022-02-11T09:40:23.723Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572423723L + "'", long16 == 1644572423723L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572423723L + "'", long32 == 1644572423723L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTimeField81);
    }

    @Test
    public void test03926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03926");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readablePeriod9, readableInstant10);
        long long12 = mutableInterval11.toDurationMillis();
        boolean boolean13 = mutableInterval7.isAfter((org.joda.time.ReadableInterval) mutableInterval11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        boolean boolean15 = mutableInterval11.contains(readableInstant14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = mutableInterval25.contains(readableInstant28);
        boolean boolean30 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        long long31 = mutableInterval25.getStartMillis();
        org.joda.time.Chronology chronology32 = mutableInterval25.getChronology();
        org.joda.time.DateTimeField dateTimeField33 = chronology32.millisOfDay();
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(1644572134186L, 1644572156655L, chronology32);
        org.joda.time.DurationField durationField35 = chronology32.eras();
        org.joda.time.DateTimeField dateTimeField36 = chronology32.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField37 = chronology32.secondOfMinute();
        org.joda.time.ReadablePartial readablePartial38 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long40 = chronology32.set(readablePartial38, 1644572400505L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572423749L + "'", long31 == 1644572423749L);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(dateTimeField33);
        org.junit.Assert.assertNotNull(durationField35);
        org.junit.Assert.assertNotNull(dateTimeField36);
        org.junit.Assert.assertNotNull(dateTimeField37);
    }

    @Test
    public void test03927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03927");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.MutableInterval mutableInterval18 = mutableInterval14.toMutableInterval();
        org.joda.time.Duration duration19 = mutableInterval18.toDuration();
        org.joda.time.Chronology chronology20 = mutableInterval18.getChronology();
        org.joda.time.DurationField durationField21 = chronology20.minutes();
        org.joda.time.DurationField durationField22 = chronology20.millis();
        org.joda.time.DurationField durationField23 = chronology20.centuries();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = mutableInterval26.toPeriod(periodType27);
        java.lang.Object obj29 = mutableInterval26.clone();
        org.joda.time.DateTime dateTime30 = mutableInterval26.getStart();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        boolean boolean46 = mutableInterval42.overlaps((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        mutableInterval49.setDurationAfterStart(0L);
        boolean boolean53 = mutableInterval49.equals((java.lang.Object) (-1));
        long long54 = mutableInterval49.getEndMillis();
        org.joda.time.DateTime dateTime55 = mutableInterval49.getEnd();
        boolean boolean56 = mutableInterval42.isAfter((org.joda.time.ReadableInstant) dateTime55);
        boolean boolean57 = dateTime39.isAfter((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        boolean boolean64 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval63);
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readablePeriod65, readableInstant66);
        long long68 = mutableInterval67.toDurationMillis();
        boolean boolean69 = mutableInterval63.isAfter((org.joda.time.ReadableInterval) mutableInterval67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        boolean boolean71 = mutableInterval67.contains(readableInstant70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableDuration readableDuration76 = null;
        org.joda.time.MutableInterval mutableInterval77 = new org.joda.time.MutableInterval(readableInstant75, readableDuration76);
        boolean boolean78 = mutableInterval74.overlaps((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.ReadablePeriod readablePeriod79 = null;
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readablePeriod79, readableInstant80);
        long long82 = mutableInterval81.toDurationMillis();
        boolean boolean83 = mutableInterval77.isAfter((org.joda.time.ReadableInterval) mutableInterval81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        boolean boolean85 = mutableInterval81.contains(readableInstant84);
        boolean boolean86 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval81);
        org.joda.time.Duration duration87 = mutableInterval81.toDuration();
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableDuration) duration87);
        boolean boolean89 = mutableInterval26.contains((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Chronology chronology90 = dateTime55.getChronology();
        org.joda.time.DateTimeField dateTimeField91 = chronology90.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField92 = chronology90.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField93 = chronology90.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField94 = chronology90.secondOfDay();
        org.joda.time.DateTimeField dateTimeField95 = chronology90.millisOfSecond();
        org.joda.time.DurationField durationField96 = chronology90.halfdays();
        org.joda.time.DateTimeZone dateTimeZone97 = chronology90.getZone();
        org.joda.time.Chronology chronology98 = chronology20.withZone(dateTimeZone97);
        java.lang.String str99 = chronology98.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(mutableInterval18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(durationField21);
        org.junit.Assert.assertNotNull(durationField22);
        org.junit.Assert.assertNotNull(durationField23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals(obj29.toString(), "2022-02-11T09:40:23.766Z/2022-02-11T09:40:23.766Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "2022-02-11T09:40:23.766Z/2022-02-11T09:40:23.766Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "2022-02-11T09:40:23.766Z/2022-02-11T09:40:23.766Z");
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572423766L + "'", long38 == 1644572423766L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1644572423766L + "'", long54 == 1644572423766L);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(chronology90);
        org.junit.Assert.assertNotNull(dateTimeField91);
        org.junit.Assert.assertNotNull(dateTimeField92);
        org.junit.Assert.assertNotNull(dateTimeField93);
        org.junit.Assert.assertNotNull(dateTimeField94);
        org.junit.Assert.assertNotNull(dateTimeField95);
        org.junit.Assert.assertNotNull(durationField96);
        org.junit.Assert.assertNotNull(dateTimeZone97);
        org.junit.Assert.assertNotNull(chronology98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "ISOChronology[Etc/UTC]" + "'", str99, "ISOChronology[Etc/UTC]");
    }

    @Test
    public void test03928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03928");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        boolean boolean15 = mutableInterval9.isAfter(1644572126418L);
        org.joda.time.MutableInterval mutableInterval16 = mutableInterval9.copy();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        java.lang.Object obj22 = mutableInterval19.clone();
        org.joda.time.DateTime dateTime23 = mutableInterval19.getStart();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        long long47 = mutableInterval42.getEndMillis();
        org.joda.time.DateTime dateTime48 = mutableInterval42.getEnd();
        boolean boolean49 = mutableInterval35.isAfter((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean50 = dateTime32.isAfter((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = mutableInterval19.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology83 = dateTime48.getChronology();
        org.joda.time.Chronology chronology84 = dateTime48.getChronology();
        org.joda.time.DurationField durationField85 = chronology84.millis();
        org.joda.time.MutableInterval mutableInterval86 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval9, chronology84);
        org.joda.time.DateTimeField dateTimeField87 = chronology84.secondOfDay();
        org.joda.time.DateTimeField dateTimeField88 = chronology84.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField89 = chronology84.yearOfCentury();
        org.joda.time.DurationField durationField90 = chronology84.years();
        // The following exception was thrown during execution in test generation
        try {
            long long95 = chronology84.getDateTimeMillis((int) (byte) 10, (int) (byte) 1, (int) (short) 0, 10);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 0 for dayOfMonth must be in the range [1,31]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutableInterval16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "2022-02-11T09:40:23.800Z/2022-02-11T09:40:23.800Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "2022-02-11T09:40:23.800Z/2022-02-11T09:40:23.800Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "2022-02-11T09:40:23.800Z/2022-02-11T09:40:23.800Z");
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572423800L + "'", long31 == 1644572423800L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572423800L + "'", long47 == 1644572423800L);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(durationField85);
        org.junit.Assert.assertNotNull(dateTimeField87);
        org.junit.Assert.assertNotNull(dateTimeField88);
        org.junit.Assert.assertNotNull(dateTimeField89);
        org.junit.Assert.assertNotNull(durationField90);
    }

    @Test
    public void test03929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03929");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        boolean boolean25 = mutableInterval19.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        boolean boolean27 = mutableInterval23.contains(readableInstant26);
        boolean boolean28 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        mutableInterval9.setStartMillis(1644572125906L);
        org.joda.time.Interval interval31 = mutableInterval9.toInterval();
        org.joda.time.MutableInterval mutableInterval32 = interval31.toMutableInterval();
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = mutableInterval38.toPeriod(periodType39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period40, readableInstant41);
        boolean boolean43 = mutableInterval35.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        long long44 = mutableInterval35.toDurationMillis();
        mutableInterval35.setStartMillis(1644572127431L);
        org.joda.time.MutableInterval mutableInterval47 = mutableInterval35.toMutableInterval();
        boolean boolean48 = interval31.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(mutableInterval32);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(mutableInterval47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test03930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03930");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.secondOfDay();
        org.joda.time.DurationField durationField72 = chronology66.hours();
        long long76 = chronology66.add((long) '4', 1644572130448L, (int) (short) 100);
        org.joda.time.DateTimeField dateTimeField77 = chronology66.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField78 = chronology66.millisOfDay();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:23.877Z/2022-02-11T09:40:23.877Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:23.877Z/2022-02-11T09:40:23.877Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:23.877Z/2022-02-11T09:40:23.877Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572423877L + "'", long14 == 1644572423877L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572423877L + "'", long30 == 1644572423877L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 164457213044852L + "'", long76 == 164457213044852L);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
    }

    @Test
    public void test03931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03931");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval10 = mutableInterval2.copy();
        boolean boolean12 = mutableInterval2.contains(1644572125519L);
        mutableInterval2.setEndMillis((long) (byte) 0);
        boolean boolean16 = mutableInterval2.contains(1644572133267L);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        int int26 = period21.size();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.Period period34 = mutableInterval32.toPeriod();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = mutableInterval37.toPeriod(periodType38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = period39.isSupported(durationFieldType40);
        boolean boolean43 = period39.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType45 = period39.getFieldType(0);
        int int46 = period34.get(durationFieldType45);
        int int47 = period21.get(durationFieldType45);
        org.joda.time.MutablePeriod mutablePeriod48 = period21.toMutablePeriod();
        org.joda.time.Period period49 = period21.toPeriod();
        mutableInterval2.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        boolean boolean66 = mutableInterval56.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        org.joda.time.PeriodType periodType71 = null;
        org.joda.time.Period period72 = mutableInterval70.toPeriod(periodType71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period72, readableInstant73);
        long long75 = mutableInterval74.getStartMillis();
        org.joda.time.Period period76 = mutableInterval74.toPeriod();
        java.lang.String str77 = mutableInterval74.toString();
        boolean boolean78 = mutableInterval74.isAfterNow();
        boolean boolean79 = mutableInterval65.isBefore((org.joda.time.ReadableInterval) mutableInterval74);
        boolean boolean80 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        boolean boolean82 = mutableInterval2.isAfter(1644572178004L);
        org.joda.time.Chronology chronology83 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField84 = chronology83.clockhourOfDay();
        org.joda.time.DurationField durationField85 = chronology83.years();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mutableInterval10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period72);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1644572423902L + "'", long75 == 1644572423902L);
        org.junit.Assert.assertNotNull(period76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "2022-02-11T09:40:23.902Z/2022-02-11T09:40:23.902Z" + "'", str77, "2022-02-11T09:40:23.902Z/2022-02-11T09:40:23.902Z");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(durationField85);
    }

    @Test
    public void test03932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03932");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        boolean boolean25 = mutableInterval21.contains(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        long long36 = mutableInterval35.toDurationMillis();
        boolean boolean37 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.contains(readableInstant38);
        boolean boolean40 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        boolean boolean55 = mutableInterval21.isBefore((org.joda.time.ReadableInterval) mutableInterval50);
        boolean boolean56 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        long long71 = mutableInterval66.getEndMillis();
        boolean boolean72 = mutableInterval50.contains((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.MutableInterval mutableInterval73 = mutableInterval66.toMutableInterval();
        org.joda.time.DateTime dateTime74 = mutableInterval73.getStart();
        long long75 = mutableInterval73.toDurationMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572424025L + "'", long71 == 1644572424025L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(mutableInterval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
    }

    @Test
    public void test03933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03933");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.minuteOfDay();
        org.joda.time.DurationField durationField10 = chronology8.hours();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = mutableInterval13.toPeriod(periodType14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = period15.isSupported(durationFieldType16);
        boolean boolean19 = period15.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType21 = period15.getFieldType(0);
        org.joda.time.Period period22 = period15.toPeriod();
        int int23 = period22.size();
        int int24 = period22.size();
        boolean boolean26 = period22.equals((java.lang.Object) 1644572129908L);
        int[] intArray28 = chronology8.get((org.joda.time.ReadablePeriod) period22, 1644572157569L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = mutableInterval31.toPeriod(periodType32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period33, readableInstant34);
        int int36 = period33.size();
        long long39 = chronology8.add((org.joda.time.ReadablePeriod) period33, 0L, (int) '#');
        org.joda.time.DateTimeField dateTimeField40 = chronology8.hourOfDay();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        boolean boolean69 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.Duration duration70 = mutableInterval64.toDuration();
        boolean boolean72 = duration70.equals((java.lang.Object) 'a');
        long long73 = duration70.getMillis();
        long long74 = duration70.getMillis();
        org.joda.time.Duration duration75 = duration70.toDuration();
        org.joda.time.Duration duration76 = duration70.toDuration();
        long long77 = duration76.getMillis();
        long long78 = duration76.getMillis();
        boolean boolean80 = duration76.equals((java.lang.Object) 1644572134824L);
        org.joda.time.Period period81 = duration76.toPeriod();
        int[] intArray84 = chronology8.get((org.joda.time.ReadablePeriod) period81, 1644572251676L, 1644572329771L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0, 2719, 1, 9, 35, 57, 569]");
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(dateTimeField40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0, 0, 0, 0, 1, 18, 95]");
    }

    @Test
    public void test03934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03934");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTime dateTime71 = mutableInterval70.getEnd();
        org.joda.time.Interval interval72 = mutableInterval70.toInterval();
        org.joda.time.Interval interval73 = mutableInterval70.toInterval();
        boolean boolean74 = mutableInterval70.containsNow();
        long long75 = mutableInterval70.getStartMillis();
        long long76 = mutableInterval70.toDurationMillis();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:24.074Z/2022-02-11T09:40:24.074Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:24.074Z/2022-02-11T09:40:24.074Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:24.074Z/2022-02-11T09:40:24.074Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572424074L + "'", long16 == 1644572424074L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572424074L + "'", long32 == 1644572424074L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 100L + "'", long75 == 100L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1644572126318L + "'", long76 == 1644572126318L);
    }

    @Test
    public void test03935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03935");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 100, 1644572173501L);
        org.joda.time.DateTime dateTime3 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField72 = chronology70.yearOfEra();
        org.joda.time.DateTimeField dateTimeField73 = chronology70.dayOfMonth();
        org.joda.time.DurationField durationField74 = chronology70.weeks();
        org.joda.time.Chronology chronology75 = chronology70.withUTC();
        org.joda.time.DateTimeField dateTimeField76 = chronology70.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField77 = chronology70.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField78 = chronology70.centuryOfEra();
        mutableInterval2.setChronology(chronology70);
        org.joda.time.DateTimeField dateTimeField80 = chronology70.hourOfDay();
        org.joda.time.DateTimeField dateTimeField81 = chronology70.era();
        org.junit.Assert.assertNotNull(dateTime3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:24.123Z/2022-02-11T09:40:24.123Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:24.123Z/2022-02-11T09:40:24.123Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:24.123Z/2022-02-11T09:40:24.123Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572424123L + "'", long18 == 1644572424123L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572424123L + "'", long34 == 1644572424123L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(dateTimeField81);
    }

    @Test
    public void test03936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03936");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        mutableInterval9.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean17 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval28 = mutableInterval20.copy();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        boolean boolean37 = mutableInterval34.contains(readableInstant36);
        boolean boolean38 = mutableInterval28.contains((org.joda.time.ReadableInterval) mutableInterval34);
        boolean boolean39 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval34);
        boolean boolean40 = mutableInterval34.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        org.joda.time.Duration duration55 = mutableInterval50.toDuration();
        java.lang.String str56 = duration55.toString();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        boolean boolean77 = mutableInterval73.overlaps((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.ReadablePeriod readablePeriod78 = null;
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readablePeriod78, readableInstant79);
        long long81 = mutableInterval80.toDurationMillis();
        boolean boolean82 = mutableInterval76.isAfter((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.ReadableInstant readableInstant83 = null;
        boolean boolean84 = mutableInterval80.contains(readableInstant83);
        boolean boolean85 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval80);
        org.joda.time.Duration duration86 = mutableInterval80.toDuration();
        boolean boolean88 = duration86.equals((java.lang.Object) 'a');
        long long89 = duration86.getMillis();
        long long90 = duration86.getMillis();
        org.joda.time.Duration duration91 = duration86.toDuration();
        org.joda.time.Duration duration92 = duration86.toDuration();
        long long93 = duration92.getMillis();
        long long94 = duration92.getMillis();
        boolean boolean95 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration92);
        mutableInterval34.setDurationAfterStart((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration97 = mutableInterval34.toDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(mutableInterval28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT0S" + "'", str56, "PT0S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(duration97);
    }

    @Test
    public void test03937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03937");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.year();
        org.joda.time.DateTimeField dateTimeField72 = chronology68.era();
        org.joda.time.DurationField durationField73 = chronology68.millis();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.hourOfHalfday();
        org.joda.time.DurationField durationField75 = chronology68.days();
        org.joda.time.DateTimeField dateTimeField76 = chronology68.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField77 = chronology68.secondOfDay();
        org.joda.time.Chronology chronology78 = chronology68.withUTC();
        org.joda.time.DateTimeZone dateTimeZone79 = chronology68.getZone();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:24.310Z/2022-02-11T09:40:24.310Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:24.310Z/2022-02-11T09:40:24.310Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:24.310Z/2022-02-11T09:40:24.310Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572424310L + "'", long16 == 1644572424310L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572424310L + "'", long32 == 1644572424310L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(chronology78);
        org.junit.Assert.assertNotNull(dateTimeZone79);
    }

    @Test
    public void test03938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03938");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        java.lang.Object obj9 = mutableInterval6.clone();
        org.joda.time.DateTime dateTime10 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        boolean boolean17 = mutableInterval13.equals((java.lang.Object) (-1));
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getEnd();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        mutableInterval29.setDurationAfterStart(0L);
        boolean boolean33 = mutableInterval29.equals((java.lang.Object) (-1));
        long long34 = mutableInterval29.getEndMillis();
        org.joda.time.DateTime dateTime35 = mutableInterval29.getEnd();
        boolean boolean36 = mutableInterval22.isAfter((org.joda.time.ReadableInstant) dateTime35);
        boolean boolean37 = dateTime19.isAfter((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readableInstant38, readableDuration39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        boolean boolean44 = mutableInterval40.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readablePeriod45, readableInstant46);
        long long48 = mutableInterval47.toDurationMillis();
        boolean boolean49 = mutableInterval43.isAfter((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        boolean boolean51 = mutableInterval47.contains(readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        boolean boolean58 = mutableInterval54.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readablePeriod59, readableInstant60);
        long long62 = mutableInterval61.toDurationMillis();
        boolean boolean63 = mutableInterval57.isAfter((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        boolean boolean65 = mutableInterval61.contains(readableInstant64);
        boolean boolean66 = mutableInterval47.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.Duration duration67 = mutableInterval61.toDuration();
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = mutableInterval6.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Chronology chronology70 = dateTime35.getChronology();
        org.joda.time.DateTimeField dateTimeField71 = chronology70.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology70);
        org.joda.time.DateTimeField dateTimeField73 = chronology70.year();
        org.joda.time.DateTimeField dateTimeField74 = chronology70.era();
        org.joda.time.DurationField durationField75 = chronology70.millis();
        org.joda.time.DateTimeField dateTimeField76 = chronology70.hourOfHalfday();
        org.joda.time.DurationField durationField77 = chronology70.days();
        org.joda.time.DurationField durationField78 = chronology70.months();
        org.joda.time.MutableInterval mutableInterval79 = new org.joda.time.MutableInterval(1644572134302L, 1644572176400L, chronology70);
        org.joda.time.DateTimeField dateTimeField80 = chronology70.clockhourOfDay();
        org.joda.time.DurationField durationField81 = chronology70.millis();
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "2022-02-11T09:40:24.341Z/2022-02-11T09:40:24.341Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "2022-02-11T09:40:24.341Z/2022-02-11T09:40:24.341Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "2022-02-11T09:40:24.341Z/2022-02-11T09:40:24.341Z");
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572424341L + "'", long18 == 1644572424341L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1644572424341L + "'", long34 == 1644572424341L);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertNotNull(durationField78);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertNotNull(durationField81);
    }

    @Test
    public void test03939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03939");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        java.lang.String str16 = mutableInterval5.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.Period period24 = mutableInterval22.toPeriod();
        org.joda.time.Chronology chronology25 = mutableInterval22.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.minuteOfDay();
        mutableInterval5.setChronology(chronology25);
        // The following exception was thrown during execution in test generation
        try {
            long long32 = chronology25.getDateTimeMillis((int) (short) 100, (int) (byte) -1, (int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2022-02-11T09:40:24.392Z/2022-02-11T09:40:24.392Z" + "'", str16, "2022-02-11T09:40:24.392Z/2022-02-11T09:40:24.392Z");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(dateTimeField26);
    }

    @Test
    public void test03940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03940");
        org.joda.time.MutableInterval mutableInterval0 = new org.joda.time.MutableInterval();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.MutableInterval mutableInterval3 = new org.joda.time.MutableInterval(readableInstant1, readableDuration2);
        mutableInterval3.setDurationAfterStart(0L);
        boolean boolean7 = mutableInterval3.equals((java.lang.Object) (-1));
        long long8 = mutableInterval3.getEndMillis();
        org.joda.time.DateTime dateTime9 = mutableInterval3.getEnd();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        boolean boolean16 = mutableInterval12.overlaps((org.joda.time.ReadableInterval) mutableInterval15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        mutableInterval19.setDurationAfterStart(0L);
        boolean boolean23 = mutableInterval19.equals((java.lang.Object) (-1));
        long long24 = mutableInterval19.getEndMillis();
        org.joda.time.DateTime dateTime25 = mutableInterval19.getEnd();
        boolean boolean26 = mutableInterval12.isAfter((org.joda.time.ReadableInstant) dateTime25);
        boolean boolean27 = dateTime9.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readablePeriod35, readableInstant36);
        long long38 = mutableInterval37.toDurationMillis();
        boolean boolean39 = mutableInterval33.isAfter((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        boolean boolean41 = mutableInterval37.contains(readableInstant40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        boolean boolean56 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.Duration duration57 = mutableInterval51.toDuration();
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableDuration) duration57);
        java.lang.String str59 = dateTime25.toString();
        org.joda.time.ReadablePeriod readablePeriod60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readablePeriod60, readableInstant61);
        long long63 = mutableInterval62.toDurationMillis();
        org.joda.time.DateTime dateTime64 = mutableInterval62.getStart();
        boolean boolean65 = dateTime25.isBefore((org.joda.time.ReadableInstant) dateTime64);
        mutableInterval0.setEnd((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readablePeriod67, readableInstant68);
        long long70 = mutableInterval69.toDurationMillis();
        org.joda.time.DateTime dateTime71 = mutableInterval69.getStart();
        boolean boolean72 = mutableInterval0.isBefore((org.joda.time.ReadableInstant) dateTime71);
        boolean boolean74 = mutableInterval0.isAfter(1644572179984L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572424404L + "'", long8 == 1644572424404L);
        org.junit.Assert.assertNotNull(dateTime9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572424404L + "'", long24 == 1644572424404L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration57);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "2022-02-11T09:40:24.404Z" + "'", str59, "2022-02-11T09:40:24.404Z");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(dateTime64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test03941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03941");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DateTimeField dateTimeField10 = chronology8.secondOfDay();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.hourOfHalfday();
        org.joda.time.DurationField durationField12 = chronology8.eras();
        org.joda.time.ReadablePartial readablePartial13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        boolean boolean20 = mutableInterval16.overlaps((org.joda.time.ReadableInterval) mutableInterval19);
        org.joda.time.Period period21 = mutableInterval19.toPeriod();
        org.joda.time.Chronology chronology22 = mutableInterval19.getChronology();
        org.joda.time.DateTimeField dateTimeField23 = chronology22.monthOfYear();
        org.joda.time.DateTimeField dateTimeField24 = chronology22.secondOfDay();
        org.joda.time.DateTimeField dateTimeField25 = chronology22.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField26 = chronology22.yearOfEra();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = mutableInterval29.toPeriod(periodType30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = period31.isSupported(durationFieldType32);
        boolean boolean35 = period31.equals((java.lang.Object) "hi!");
        int int36 = period31.size();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        boolean boolean43 = mutableInterval39.overlaps((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.Period period44 = mutableInterval42.toPeriod();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = mutableInterval47.toPeriod(periodType48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = period49.isSupported(durationFieldType50);
        boolean boolean53 = period49.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType55 = period49.getFieldType(0);
        int int56 = period44.get(durationFieldType55);
        int int57 = period31.get(durationFieldType55);
        org.joda.time.MutablePeriod mutablePeriod58 = period31.toMutablePeriod();
        int int60 = mutablePeriod58.getValue((int) (byte) 1);
        int[] intArray63 = chronology22.get((org.joda.time.ReadablePeriod) mutablePeriod58, 1644572155645L, 1644572135889L);
        // The following exception was thrown during execution in test generation
        try {
            chronology8.validate(readablePartial13, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(dateTimeField10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(dateTimeField23);
        org.junit.Assert.assertNotNull(dateTimeField24);
        org.junit.Assert.assertNotNull(dateTimeField25);
        org.junit.Assert.assertNotNull(dateTimeField26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0, 0, 0, 0, 0, -19, -756]");
    }

    @Test
    public void test03942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03942");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = mutableInterval10.toPeriod(periodType11);
        java.lang.Object obj13 = mutableInterval10.clone();
        org.joda.time.DateTime dateTime14 = mutableInterval10.getStart();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval10.contains((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Chronology chronology74 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField75 = chronology74.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology74);
        org.joda.time.DateTime dateTime77 = mutableInterval76.getEnd();
        java.lang.String str78 = mutableInterval76.toString();
        org.joda.time.Chronology chronology79 = mutableInterval76.getChronology();
        boolean boolean80 = mutableInterval2.isBefore((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.ReadableDuration readableDuration82 = null;
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval(readableInstant81, readableDuration82);
        org.joda.time.PeriodType periodType84 = null;
        org.joda.time.Period period85 = mutableInterval83.toPeriod(periodType84);
        java.lang.Object obj86 = mutableInterval83.clone();
        boolean boolean87 = mutableInterval83.containsNow();
        boolean boolean88 = mutableInterval76.isBefore((org.joda.time.ReadableInterval) mutableInterval83);
        long long89 = mutableInterval83.getEndMillis();
        org.joda.time.DateTime dateTime90 = mutableInterval83.getStart();
        org.joda.time.DateTimeZone dateTimeZone91 = dateTime90.getZone();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572424499L + "'", long5 == 1644572424499L);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals(obj13.toString(), "2022-02-11T09:40:24.499Z/2022-02-11T09:40:24.499Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "2022-02-11T09:40:24.499Z/2022-02-11T09:40:24.499Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "2022-02-11T09:40:24.499Z/2022-02-11T09:40:24.499Z");
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572424499L + "'", long22 == 1644572424499L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572424499L + "'", long38 == 1644572424499L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(chronology74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str78, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(obj86);
// flaky:         org.junit.Assert.assertEquals(obj86.toString(), "2022-02-11T09:40:24.499Z/2022-02-11T09:40:24.499Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "2022-02-11T09:40:24.499Z/2022-02-11T09:40:24.499Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "2022-02-11T09:40:24.499Z/2022-02-11T09:40:24.499Z");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long89 + "' != '" + 1644572424499L + "'", long89 == 1644572424499L);
        org.junit.Assert.assertNotNull(dateTime90);
        org.junit.Assert.assertNotNull(dateTimeZone91);
    }

    @Test
    public void test03943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03943");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.Period period8 = mutableInterval6.toPeriod();
        java.lang.String str9 = mutableInterval6.toString();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        boolean boolean16 = mutableInterval12.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.Period period24 = mutableInterval22.toPeriod();
        org.joda.time.Duration duration25 = mutableInterval22.toDuration();
        mutableInterval12.setDurationAfterStart((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Chronology chronology27 = mutableInterval12.getChronology();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readablePeriod35, readableInstant36);
        long long38 = mutableInterval37.toDurationMillis();
        boolean boolean39 = mutableInterval33.isAfter((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        boolean boolean41 = mutableInterval37.contains(readableInstant40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        boolean boolean56 = mutableInterval37.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.Duration duration57 = mutableInterval51.toDuration();
        boolean boolean59 = duration57.equals((java.lang.Object) 'a');
        long long60 = duration57.getMillis();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.MutableInterval mutableInterval63 = new org.joda.time.MutableInterval(readableInstant61, readableDuration62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        boolean boolean67 = mutableInterval63.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadablePeriod readablePeriod68 = null;
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readablePeriod68, readableInstant69);
        long long71 = mutableInterval70.toDurationMillis();
        boolean boolean72 = mutableInterval66.isAfter((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        boolean boolean76 = mutableInterval66.overlaps((org.joda.time.ReadableInterval) mutableInterval75);
        boolean boolean77 = mutableInterval75.isBeforeNow();
        org.joda.time.Interval interval78 = mutableInterval75.toInterval();
        org.joda.time.MutableInterval mutableInterval79 = mutableInterval75.toMutableInterval();
        org.joda.time.Duration duration80 = mutableInterval79.toDuration();
        int int81 = duration57.compareTo((org.joda.time.ReadableDuration) duration80);
        org.joda.time.Period period82 = duration80.toPeriod();
        boolean boolean83 = mutableInterval12.equals((java.lang.Object) duration80);
        boolean boolean84 = mutableInterval6.contains((org.joda.time.ReadableInterval) mutableInterval12);
        mutableInterval6.setInterval(1644572147468L, 1644572164660L);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.ReadableDuration readableDuration89 = null;
        org.joda.time.MutableInterval mutableInterval90 = new org.joda.time.MutableInterval(readableInstant88, readableDuration89);
        mutableInterval90.setDurationAfterStart(0L);
        boolean boolean93 = mutableInterval6.isBefore((org.joda.time.ReadableInterval) mutableInterval90);
        long long94 = mutableInterval90.getEndMillis();
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval90.setEndMillis(1644572282312L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572424532L + "'", long7 == 1644572424532L);
        org.junit.Assert.assertNotNull(period8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "2022-02-11T09:40:24.532Z/2022-02-11T09:40:24.532Z" + "'", str9, "2022-02-11T09:40:24.532Z/2022-02-11T09:40:24.532Z");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(chronology27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(mutableInterval79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1644572424532L + "'", long94 == 1644572424532L);
    }

    @Test
    public void test03944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03944");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval1 = new org.joda.time.MutableInterval((java.lang.Object) 1644572394878L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03945");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.Period period9 = mutableInterval7.toPeriod();
        org.joda.time.Chronology chronology10 = mutableInterval7.getChronology();
        org.joda.time.DateTimeField dateTimeField11 = chronology10.monthOfYear();
        org.joda.time.DurationField durationField12 = chronology10.minutes();
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(1644572137789L, 1644572154868L, chronology10);
        org.joda.time.DateTimeField dateTimeField14 = chronology10.era();
        org.joda.time.DurationField durationField15 = chronology10.weeks();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(dateTimeField14);
        org.junit.Assert.assertNotNull(durationField15);
    }

    @Test
    public void test03946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03946");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        long long8 = mutableInterval2.getStartMillis();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        long long16 = mutableInterval15.getStartMillis();
        org.joda.time.Period period17 = mutableInterval15.toPeriod();
        java.lang.String str18 = mutableInterval15.toString();
        boolean boolean19 = mutableInterval15.isAfterNow();
        boolean boolean20 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval15);
        long long21 = mutableInterval15.getStartMillis();
        boolean boolean23 = mutableInterval15.contains(1644572166954L);
        mutableInterval15.setStartMillis(1644572141002L);
        mutableInterval15.setDurationAfterStart(1644572356413L);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572424638L + "'", long5 == 1644572424638L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572424638L + "'", long8 == 1644572424638L);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572424638L + "'", long16 == 1644572424638L);
        org.junit.Assert.assertNotNull(period17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2022-02-11T09:40:24.638Z/2022-02-11T09:40:24.638Z" + "'", str18, "2022-02-11T09:40:24.638Z/2022-02-11T09:40:24.638Z");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572424638L + "'", long21 == 1644572424638L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test03947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03947");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone68 = chronology66.getZone();
        org.joda.time.Chronology chronology69 = chronology66.withUTC();
        java.lang.String str70 = chronology69.toString();
        org.joda.time.DateTimeField dateTimeField71 = chronology69.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField72 = chronology69.weekyear();
        org.joda.time.Chronology chronology73 = chronology69.withUTC();
        org.joda.time.DateTimeField dateTimeField74 = chronology73.dayOfYear();
        org.joda.time.DateTimeZone dateTimeZone75 = chronology73.getZone();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:24.692Z/2022-02-11T09:40:24.692Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:24.692Z/2022-02-11T09:40:24.692Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:24.692Z/2022-02-11T09:40:24.692Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572424692L + "'", long14 == 1644572424692L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572424692L + "'", long30 == 1644572424692L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeZone68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ISOChronology[UTC]" + "'", str70, "ISOChronology[UTC]");
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeZone75);
    }

    @Test
    public void test03948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03948");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        mutableInterval2.setEndMillis(1644572128327L);
        org.joda.time.Period period77 = mutableInterval2.toPeriod();
        org.joda.time.Duration duration78 = mutableInterval2.toDuration();
        org.joda.time.Period period79 = mutableInterval2.toPeriod();
        org.joda.time.PeriodType periodType80 = null;
        org.joda.time.Period period81 = mutableInterval2.toPeriod(periodType80);
        boolean boolean82 = mutableInterval2.containsNow();
        org.joda.time.Period period83 = mutableInterval2.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType85 = period83.getFieldType((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572424717L + "'", long22 == 1644572424717L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572424717L + "'", long38 == 1644572424717L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test03949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03949");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.MutableInterval mutableInterval8 = mutableInterval6.copy();
        org.joda.time.DateTime dateTime9 = mutableInterval6.getStart();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        mutableInterval12.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        boolean boolean16 = mutableInterval12.isAfter(readableInstant15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        boolean boolean23 = mutableInterval19.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readablePeriod24, readableInstant25);
        long long27 = mutableInterval26.toDurationMillis();
        boolean boolean28 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        boolean boolean30 = mutableInterval26.contains(readableInstant29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        boolean boolean37 = mutableInterval33.overlaps((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.MutableInterval mutableInterval40 = new org.joda.time.MutableInterval(readablePeriod38, readableInstant39);
        long long41 = mutableInterval40.toDurationMillis();
        boolean boolean42 = mutableInterval36.isAfter((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        boolean boolean44 = mutableInterval40.contains(readableInstant43);
        boolean boolean45 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval40);
        org.joda.time.Duration duration46 = mutableInterval40.toDuration();
        mutableInterval12.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        mutableInterval50.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.isAfter(readableInstant53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableDuration readableDuration59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readableInstant58, readableDuration59);
        boolean boolean61 = mutableInterval57.overlaps((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readablePeriod62, readableInstant63);
        long long65 = mutableInterval64.toDurationMillis();
        boolean boolean66 = mutableInterval60.isAfter((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        boolean boolean68 = mutableInterval64.contains(readableInstant67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        boolean boolean75 = mutableInterval71.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadablePeriod readablePeriod76 = null;
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readablePeriod76, readableInstant77);
        long long79 = mutableInterval78.toDurationMillis();
        boolean boolean80 = mutableInterval74.isAfter((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.ReadableInstant readableInstant81 = null;
        boolean boolean82 = mutableInterval78.contains(readableInstant81);
        boolean boolean83 = mutableInterval64.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.Duration duration84 = mutableInterval78.toDuration();
        mutableInterval50.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration84);
        org.joda.time.MutableInterval mutableInterval86 = mutableInterval50.toMutableInterval();
        org.joda.time.DateTime dateTime87 = mutableInterval86.getEnd();
        org.joda.time.Interval interval88 = mutableInterval86.toInterval();
        org.joda.time.DateTime dateTime89 = interval88.getStart();
        org.joda.time.DateTime dateTime90 = interval88.getEnd();
        mutableInterval12.setEnd((org.joda.time.ReadableInstant) dateTime90);
        mutableInterval6.setStart((org.joda.time.ReadableInstant) dateTime90);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572424784L + "'", long7 == 1644572424784L);
        org.junit.Assert.assertNotNull(mutableInterval8);
        org.junit.Assert.assertNotNull(dateTime9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(mutableInterval86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(interval88);
        org.junit.Assert.assertNotNull(dateTime89);
        org.junit.Assert.assertNotNull(dateTime90);
    }

    @Test
    public void test03950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03950");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        mutableInterval18.setDurationAfterStart(0L);
        boolean boolean22 = mutableInterval18.equals((java.lang.Object) (-1));
        long long23 = mutableInterval18.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval18.getEnd();
        boolean boolean25 = mutableInterval11.isAfter((org.joda.time.ReadableInstant) dateTime24);
        boolean boolean26 = dateTime8.isAfter((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        mutableInterval36.setDurationAfterStart(0L);
        boolean boolean40 = mutableInterval36.equals((java.lang.Object) (-1));
        long long41 = mutableInterval36.getEndMillis();
        org.joda.time.DateTime dateTime42 = mutableInterval36.getEnd();
        boolean boolean43 = mutableInterval29.isAfter((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime42);
        mutableInterval44.setInterval(1644572134945L, 1644572137933L);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableDuration readableDuration53 = null;
        org.joda.time.MutableInterval mutableInterval54 = new org.joda.time.MutableInterval(readableInstant52, readableDuration53);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = mutableInterval54.toPeriod(periodType55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.Period period64 = mutableInterval62.toPeriod();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.PeriodType periodType68 = null;
        org.joda.time.Period period69 = mutableInterval67.toPeriod(periodType68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = period69.isSupported(durationFieldType70);
        boolean boolean73 = period69.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType75 = period69.getFieldType(0);
        int int76 = period64.get(durationFieldType75);
        int int77 = period56.get(durationFieldType75);
        mutableInterval50.setPeriodAfterStart((org.joda.time.ReadablePeriod) period56);
        org.joda.time.Interval interval79 = mutableInterval50.toInterval();
        org.joda.time.Chronology chronology80 = mutableInterval50.getChronology();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval50);
        boolean boolean82 = mutableInterval44.contains((org.joda.time.ReadableInterval) mutableInterval81);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval44.setInterval(1644572372821L, 1644572148805L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572424896L + "'", long7 == 1644572424896L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572424896L + "'", long23 == 1644572424896L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572424896L + "'", long41 == 1644572424896L);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(chronology80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test03951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03951");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(1644572390266L, 1644572338005L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03952");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:58.551Z/2022-02-11T09:36:58.551Z");
        boolean boolean3 = mutableInterval1.equals((java.lang.Object) 1644572177562L);
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(1644572178743L, 1644572187063L);
        boolean boolean7 = mutableInterval1.overlaps((org.joda.time.ReadableInterval) mutableInterval6);
        boolean boolean9 = mutableInterval1.equals((java.lang.Object) 1644572332710L);
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test03953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03953");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        boolean boolean8 = mutableInterval4.overlaps((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.Period period9 = mutableInterval7.toPeriod();
        org.joda.time.Chronology chronology10 = mutableInterval7.getChronology();
        org.joda.time.DateTimeField dateTimeField11 = chronology10.monthOfYear();
        org.joda.time.DurationField durationField12 = chronology10.weekyears();
        org.joda.time.DateTimeField dateTimeField13 = chronology10.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = chronology10.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField15 = chronology10.secondOfMinute();
        org.joda.time.DurationField durationField16 = chronology10.millis();
        org.joda.time.DateTimeField dateTimeField17 = chronology10.clockhourOfDay();
        org.joda.time.DateTimeField dateTimeField18 = chronology10.yearOfEra();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = mutableInterval21.toPeriod(periodType22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.Period period31 = mutableInterval29.toPeriod();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = mutableInterval34.toPeriod(periodType35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        boolean boolean38 = period36.isSupported(durationFieldType37);
        boolean boolean40 = period36.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType42 = period36.getFieldType(0);
        int int43 = period31.get(durationFieldType42);
        int int44 = period23.get(durationFieldType42);
        long long47 = chronology10.add((org.joda.time.ReadablePeriod) period23, 1644572186105L, (int) ' ');
        org.joda.time.DateTimeField dateTimeField48 = chronology10.secondOfMinute();
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(1644572292312L, 1644572328112L, chronology10);
        org.joda.time.DateTimeField dateTimeField50 = chronology10.millisOfDay();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(chronology10);
        org.junit.Assert.assertNotNull(dateTimeField11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(dateTimeField14);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertNotNull(dateTimeField17);
        org.junit.Assert.assertNotNull(dateTimeField18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572186105L + "'", long47 == 1644572186105L);
        org.junit.Assert.assertNotNull(dateTimeField48);
        org.junit.Assert.assertNotNull(dateTimeField50);
    }

    @Test
    public void test03954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03954");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone69 = chronology66.getZone();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.secondOfDay();
        org.joda.time.DurationField durationField72 = chronology66.halfdays();
        org.joda.time.DurationField durationField73 = chronology66.months();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.secondOfMinute();
        org.joda.time.DateTimeField dateTimeField75 = chronology66.centuryOfEra();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:25.039Z/2022-02-11T09:40:25.039Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:25.039Z/2022-02-11T09:40:25.039Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:25.039Z/2022-02-11T09:40:25.039Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572425039L + "'", long14 == 1644572425039L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572425039L + "'", long30 == 1644572425039L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeZone69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03955");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval(readableInstant4, readableDuration5);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = mutableInterval6.toPeriod(periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval11.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Period period16 = mutableInterval14.toPeriod();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = period21.isSupported(durationFieldType22);
        boolean boolean25 = period21.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType27 = period21.getFieldType(0);
        int int28 = period16.get(durationFieldType27);
        int int29 = period8.get(durationFieldType27);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period8);
        org.joda.time.DateTime dateTime31 = mutableInterval2.getEnd();
        boolean boolean32 = mutableInterval2.isBeforeNow();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readablePeriod40, readableInstant41);
        long long43 = mutableInterval42.toDurationMillis();
        boolean boolean44 = mutableInterval38.isAfter((org.joda.time.ReadableInterval) mutableInterval42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        java.lang.String str49 = mutableInterval38.toString();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.Period period54 = mutableInterval52.toPeriod(periodType53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        boolean boolean58 = period54.equals((java.lang.Object) readableInstant56);
        mutableInterval38.setPeriodAfterStart((org.joda.time.ReadablePeriod) period54);
        mutableInterval2.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period54);
        org.joda.time.MutableInterval mutableInterval61 = mutableInterval2.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        mutableInterval64.setDurationAfterStart(0L);
        boolean boolean68 = mutableInterval64.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableDuration readableDuration70 = null;
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval(readableInstant69, readableDuration70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        boolean boolean75 = mutableInterval71.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Period period76 = mutableInterval74.toPeriod();
        org.joda.time.Duration duration77 = mutableInterval74.toDuration();
        mutableInterval64.setDurationAfterStart((org.joda.time.ReadableDuration) duration77);
        org.joda.time.Chronology chronology79 = mutableInterval64.getChronology();
        org.joda.time.Duration duration80 = mutableInterval64.toDuration();
        org.joda.time.Duration duration81 = duration80.toDuration();
        java.lang.String str82 = duration81.toString();
        long long83 = duration81.getMillis();
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration81);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "2022-02-11T09:40:25.063Z/2022-02-11T09:40:25.063Z" + "'", str49, "2022-02-11T09:40:25.063Z/2022-02-11T09:40:25.063Z");
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(mutableInterval61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT0S" + "'", str82, "PT0S");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
    }

    @Test
    public void test03956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03956");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = mutableInterval9.toPeriod(periodType10);
        long long12 = mutableInterval9.getEndMillis();
        boolean boolean14 = mutableInterval9.equals((java.lang.Object) ' ');
        long long15 = mutableInterval9.getStartMillis();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        mutableInterval18.setDurationAfterStart(0L);
        boolean boolean22 = mutableInterval18.equals((java.lang.Object) (-1));
        long long23 = mutableInterval18.getEndMillis();
        org.joda.time.DateTime dateTime24 = mutableInterval18.getEnd();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        boolean boolean31 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        mutableInterval34.setDurationAfterStart(0L);
        boolean boolean38 = mutableInterval34.equals((java.lang.Object) (-1));
        long long39 = mutableInterval34.getEndMillis();
        org.joda.time.DateTime dateTime40 = mutableInterval34.getEnd();
        boolean boolean41 = mutableInterval27.isAfter((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean42 = dateTime24.isAfter((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readableInstant43, readableDuration44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        boolean boolean49 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        boolean boolean54 = mutableInterval48.isAfter((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        boolean boolean56 = mutableInterval52.contains(readableInstant55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableDuration readableDuration58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readableInstant57, readableDuration58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        boolean boolean63 = mutableInterval59.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readablePeriod64, readableInstant65);
        long long67 = mutableInterval66.toDurationMillis();
        boolean boolean68 = mutableInterval62.isAfter((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        boolean boolean71 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval66);
        org.joda.time.Duration duration72 = mutableInterval66.toDuration();
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableDuration) duration72);
        mutableInterval9.setStart((org.joda.time.ReadableInstant) dateTime40);
        boolean boolean75 = mutableInterval5.contains((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.ReadableInstant readableInstant76 = null;
        boolean boolean77 = dateTime40.isEqual(readableInstant76);
        org.joda.time.Chronology chronology78 = dateTime40.getChronology();
        org.joda.time.DurationField durationField79 = chronology78.millis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1644572425089L + "'", long12 == 1644572425089L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1644572425089L + "'", long15 == 1644572425089L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572425089L + "'", long23 == 1644572425089L);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1644572425089L + "'", long39 == 1644572425089L);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(chronology78);
        org.junit.Assert.assertNotNull(durationField79);
    }

    @Test
    public void test03957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03957");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        mutableInterval4.setDurationAfterStart(0L);
        boolean boolean8 = mutableInterval4.equals((java.lang.Object) (-1));
        long long9 = mutableInterval4.getEndMillis();
        org.joda.time.DateTime dateTime10 = mutableInterval4.getEnd();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        boolean boolean17 = mutableInterval13.overlaps((org.joda.time.ReadableInterval) mutableInterval16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        long long25 = mutableInterval20.getEndMillis();
        org.joda.time.DateTime dateTime26 = mutableInterval20.getEnd();
        boolean boolean27 = mutableInterval13.isAfter((org.joda.time.ReadableInstant) dateTime26);
        boolean boolean28 = dateTime10.isAfter((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        boolean boolean35 = mutableInterval31.overlaps((org.joda.time.ReadableInterval) mutableInterval34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        mutableInterval38.setDurationAfterStart(0L);
        boolean boolean42 = mutableInterval38.equals((java.lang.Object) (-1));
        long long43 = mutableInterval38.getEndMillis();
        org.joda.time.DateTime dateTime44 = mutableInterval38.getEnd();
        boolean boolean45 = mutableInterval31.isAfter((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableInstant) dateTime44);
        mutableInterval46.setInterval(1644572134945L, 1644572137933L);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readablePeriod50, readableInstant51);
        long long53 = mutableInterval52.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        org.joda.time.PeriodType periodType57 = null;
        org.joda.time.Period period58 = mutableInterval56.toPeriod(periodType57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        boolean boolean65 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.Period period66 = mutableInterval64.toPeriod();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableDuration readableDuration68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readableInstant67, readableDuration68);
        org.joda.time.PeriodType periodType70 = null;
        org.joda.time.Period period71 = mutableInterval69.toPeriod(periodType70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        boolean boolean73 = period71.isSupported(durationFieldType72);
        boolean boolean75 = period71.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType77 = period71.getFieldType(0);
        int int78 = period66.get(durationFieldType77);
        int int79 = period58.get(durationFieldType77);
        mutableInterval52.setPeriodAfterStart((org.joda.time.ReadablePeriod) period58);
        org.joda.time.Interval interval81 = mutableInterval52.toInterval();
        org.joda.time.Chronology chronology82 = mutableInterval52.getChronology();
        org.joda.time.MutableInterval mutableInterval83 = new org.joda.time.MutableInterval((java.lang.Object) mutableInterval52);
        boolean boolean84 = mutableInterval46.contains((org.joda.time.ReadableInterval) mutableInterval83);
        org.joda.time.Chronology chronology85 = mutableInterval83.getChronology();
        org.joda.time.Chronology chronology86 = mutableInterval83.getChronology();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval(1644572196389L, 0L, chronology86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572425256L + "'", long9 == 1644572425256L);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1644572425256L + "'", long25 == 1644572425256L);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1644572425256L + "'", long43 == 1644572425256L);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(chronology82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(chronology85);
        org.junit.Assert.assertNotNull(chronology86);
    }

    @Test
    public void test03958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03958");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.MutableInterval mutableInterval5 = mutableInterval2.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval6 = mutableInterval2.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval7 = mutableInterval6.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = mutableInterval10.toPeriod(periodType11);
        long long13 = mutableInterval10.getEndMillis();
        boolean boolean15 = mutableInterval10.equals((java.lang.Object) ' ');
        org.joda.time.MutableInterval mutableInterval16 = mutableInterval10.copy();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period21, readableInstant22);
        long long24 = mutableInterval23.getStartMillis();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        boolean boolean32 = mutableInterval23.isAfter((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.Period period40 = mutableInterval38.toPeriod();
        org.joda.time.Duration duration41 = mutableInterval38.toDuration();
        mutableInterval27.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration43 = duration41.toDuration();
        mutableInterval10.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = mutableInterval47.toPeriod(periodType48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = period49.isSupported(durationFieldType50);
        boolean boolean53 = period49.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType55 = period49.getFieldType(0);
        org.joda.time.Period period56 = period49.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod57 = period56.toMutablePeriod();
        org.joda.time.Period period58 = mutablePeriod57.toPeriod();
        mutableInterval10.setPeriodAfterStart((org.joda.time.ReadablePeriod) period58);
        java.lang.String str60 = period58.toString();
        org.joda.time.MutablePeriod mutablePeriod61 = period58.toMutablePeriod();
        mutableInterval7.setPeriodAfterStart((org.joda.time.ReadablePeriod) mutablePeriod61);
        int int63 = mutablePeriod61.size();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutableInterval5);
        org.junit.Assert.assertNotNull(mutableInterval6);
        org.junit.Assert.assertNotNull(mutableInterval7);
        org.junit.Assert.assertNotNull(period12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1644572425310L + "'", long13 == 1644572425310L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mutableInterval16);
        org.junit.Assert.assertNotNull(period21);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572425310L + "'", long24 == 1644572425310L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT0S" + "'", str60, "PT0S");
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
    }

    @Test
    public void test03959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03959");
        org.joda.time.MutableInterval mutableInterval0 = new org.joda.time.MutableInterval();
        boolean boolean1 = mutableInterval0.isAfterNow();
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        boolean boolean8 = period6.isSupported(durationFieldType7);
        boolean boolean10 = period6.equals((java.lang.Object) "hi!");
        int int11 = period6.size();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.Period period19 = mutableInterval17.toPeriod();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = mutableInterval22.toPeriod(periodType23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = period24.isSupported(durationFieldType25);
        boolean boolean28 = period24.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType30 = period24.getFieldType(0);
        int int31 = period19.get(durationFieldType30);
        int int32 = period6.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType34 = period6.getFieldType(0);
        org.joda.time.PeriodType periodType35 = period6.getPeriodType();
        org.joda.time.Period period36 = mutableInterval0.toPeriod(periodType35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        boolean boolean43 = mutableInterval39.equals((java.lang.Object) (-1));
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getEnd();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        boolean boolean52 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        mutableInterval55.setDurationAfterStart(0L);
        boolean boolean59 = mutableInterval55.equals((java.lang.Object) (-1));
        long long60 = mutableInterval55.getEndMillis();
        org.joda.time.DateTime dateTime61 = mutableInterval55.getEnd();
        boolean boolean62 = mutableInterval48.isAfter((org.joda.time.ReadableInstant) dateTime61);
        boolean boolean63 = dateTime45.isAfter((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableDuration readableDuration65 = null;
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval(readableInstant64, readableDuration65);
        mutableInterval66.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant69 = null;
        boolean boolean70 = mutableInterval66.contains(readableInstant69);
        long long71 = mutableInterval66.getEndMillis();
        org.joda.time.DateTime dateTime72 = mutableInterval66.getStart();
        boolean boolean73 = dateTime45.isAfter((org.joda.time.ReadableInstant) dateTime72);
        org.joda.time.DateTimeZone dateTimeZone74 = dateTime45.getZone();
        boolean boolean75 = mutableInterval0.contains((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = null;
        boolean boolean77 = dateTime45.isSupported(dateTimeFieldType76);
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int79 = dateTime45.get(dateTimeFieldType78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572425328L + "'", long44 == 1644572425328L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1644572425328L + "'", long60 == 1644572425328L);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1644572425328L + "'", long71 == 1644572425328L);
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(dateTimeZone74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test03960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03960");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        boolean boolean8 = mutableInterval5.contains(readableInstant7);
        org.joda.time.Period period9 = mutableInterval5.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = period9.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod10.toMutablePeriod();
        java.lang.Object obj12 = null;
        boolean boolean13 = mutablePeriod10.equals(obj12);
        org.joda.time.DurationFieldType durationFieldType15 = mutablePeriod10.getFieldType((int) (byte) 0);
        java.lang.String str16 = mutablePeriod10.toString();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        java.lang.Object obj22 = mutableInterval19.clone();
        org.joda.time.DateTime dateTime23 = mutableInterval19.getStart();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        long long47 = mutableInterval42.getEndMillis();
        org.joda.time.DateTime dateTime48 = mutableInterval42.getEnd();
        boolean boolean49 = mutableInterval35.isAfter((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean50 = dateTime32.isAfter((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = mutableInterval19.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology83 = dateTime48.getChronology();
        org.joda.time.DateTimeField dateTimeField84 = chronology83.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField85 = chronology83.dayOfWeek();
        org.joda.time.DateTimeZone dateTimeZone86 = chronology83.getZone();
        org.joda.time.DateTimeField dateTimeField87 = chronology83.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField88 = chronology83.secondOfDay();
        org.joda.time.DurationField durationField89 = chronology83.hours();
        org.joda.time.DurationField durationField90 = chronology83.hours();
        boolean boolean91 = mutablePeriod10.equals((java.lang.Object) chronology83);
        org.joda.time.DateTimeField dateTimeField92 = chronology83.era();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT0S" + "'", str16, "PT0S");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "2022-02-11T09:40:25.357Z/2022-02-11T09:40:25.357Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "2022-02-11T09:40:25.357Z/2022-02-11T09:40:25.357Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "2022-02-11T09:40:25.357Z/2022-02-11T09:40:25.357Z");
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572425357L + "'", long31 == 1644572425357L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572425357L + "'", long47 == 1644572425357L);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(dateTimeField84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(dateTimeZone86);
        org.junit.Assert.assertNotNull(dateTimeField87);
        org.junit.Assert.assertNotNull(dateTimeField88);
        org.junit.Assert.assertNotNull(durationField89);
        org.junit.Assert.assertNotNull(durationField90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(dateTimeField92);
    }

    @Test
    public void test03961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03961");
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval((long) 0, (long) (short) 0);
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readablePeriod3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = mutableInterval8.toPeriod(periodType9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, readableInstant11);
        boolean boolean13 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        long long14 = mutableInterval5.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval5.equals((java.lang.Object) dateTime39);
        mutableInterval2.setEnd((org.joda.time.ReadableInstant) dateTime39);
        mutableInterval2.setEndMillis(1644572128327L);
        org.joda.time.Period period77 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.MutableInterval mutableInterval80 = new org.joda.time.MutableInterval(readableInstant78, readableDuration79);
        mutableInterval80.setDurationAfterStart(0L);
        boolean boolean84 = mutableInterval80.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.ReadableDuration readableDuration86 = null;
        org.joda.time.MutableInterval mutableInterval87 = new org.joda.time.MutableInterval(readableInstant85, readableDuration86);
        mutableInterval87.setDurationAfterStart(0L);
        boolean boolean91 = mutableInterval87.equals((java.lang.Object) (-1));
        mutableInterval87.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean95 = mutableInterval80.contains((org.joda.time.ReadableInterval) mutableInterval87);
        org.joda.time.Interval interval96 = mutableInterval87.toInterval();
        boolean boolean97 = mutableInterval2.isBefore((org.joda.time.ReadableInterval) interval96);
        mutableInterval2.setEndMillis(1644572135151L);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572425393L + "'", long22 == 1644572425393L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572425393L + "'", long38 == 1644572425393L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(interval96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test03962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03962");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.DateTime dateTime4 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableDuration readableDuration6 = null;
        org.joda.time.MutableInterval mutableInterval7 = new org.joda.time.MutableInterval(readableInstant5, readableDuration6);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = mutableInterval7.toPeriod(periodType8);
        long long10 = mutableInterval7.getEndMillis();
        org.joda.time.Interval interval11 = mutableInterval7.toInterval();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = mutableInterval14.toPeriod(periodType15);
        java.lang.Object obj17 = mutableInterval14.clone();
        org.joda.time.DateTime dateTime18 = mutableInterval14.getStart();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        mutableInterval21.setDurationAfterStart(0L);
        boolean boolean25 = mutableInterval21.equals((java.lang.Object) (-1));
        long long26 = mutableInterval21.getEndMillis();
        org.joda.time.DateTime dateTime27 = mutableInterval21.getEnd();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        mutableInterval37.setDurationAfterStart(0L);
        boolean boolean41 = mutableInterval37.equals((java.lang.Object) (-1));
        long long42 = mutableInterval37.getEndMillis();
        org.joda.time.DateTime dateTime43 = mutableInterval37.getEnd();
        boolean boolean44 = mutableInterval30.isAfter((org.joda.time.ReadableInstant) dateTime43);
        boolean boolean45 = dateTime27.isAfter((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        boolean boolean52 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadablePeriod readablePeriod53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readablePeriod53, readableInstant54);
        long long56 = mutableInterval55.toDurationMillis();
        boolean boolean57 = mutableInterval51.isAfter((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        boolean boolean59 = mutableInterval55.contains(readableInstant58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        boolean boolean66 = mutableInterval62.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readablePeriod67, readableInstant68);
        long long70 = mutableInterval69.toDurationMillis();
        boolean boolean71 = mutableInterval65.isAfter((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        boolean boolean73 = mutableInterval69.contains(readableInstant72);
        boolean boolean74 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.Duration duration75 = mutableInterval69.toDuration();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = mutableInterval14.contains((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Chronology chronology78 = dateTime43.getChronology();
        org.joda.time.DateTimeField dateTimeField79 = chronology78.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField80 = chronology78.era();
        mutableInterval7.setChronology(chronology78);
        boolean boolean82 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval7);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.ReadableDuration readableDuration84 = null;
        org.joda.time.MutableInterval mutableInterval85 = new org.joda.time.MutableInterval(readableInstant83, readableDuration84);
        org.joda.time.PeriodType periodType86 = null;
        org.joda.time.Period period87 = mutableInterval85.toPeriod(periodType86);
        org.joda.time.DurationFieldType durationFieldType88 = null;
        boolean boolean89 = period87.isSupported(durationFieldType88);
        boolean boolean91 = period87.equals((java.lang.Object) "hi!");
        int int92 = period87.size();
        org.joda.time.MutablePeriod mutablePeriod93 = period87.toMutablePeriod();
        org.joda.time.PeriodType periodType94 = period87.getPeriodType();
        org.joda.time.Period period95 = mutableInterval7.toPeriod(periodType94);
        long long96 = mutableInterval7.getStartMillis();
        mutableInterval7.setStartMillis(1644572170369L);
        org.joda.time.DateTime dateTime99 = mutableInterval7.getStart();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(dateTime4);
        org.junit.Assert.assertNotNull(period9);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1644572425421L + "'", long10 == 1644572425421L);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(obj17);
// flaky:         org.junit.Assert.assertEquals(obj17.toString(), "2022-02-11T09:40:25.421Z/2022-02-11T09:40:25.421Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "2022-02-11T09:40:25.421Z/2022-02-11T09:40:25.421Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "2022-02-11T09:40:25.421Z/2022-02-11T09:40:25.421Z");
        org.junit.Assert.assertNotNull(dateTime18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572425421L + "'", long26 == 1644572425421L);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1644572425421L + "'", long42 == 1644572425421L);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(chronology78);
        org.junit.Assert.assertNotNull(dateTimeField79);
        org.junit.Assert.assertNotNull(dateTimeField80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 8 + "'", int92 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod93);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(period95);
// flaky:         org.junit.Assert.assertTrue("'" + long96 + "' != '" + 1644572425421L + "'", long96 == 1644572425421L);
        org.junit.Assert.assertNotNull(dateTime99);
    }

    @Test
    public void test03963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03963");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval14.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readablePeriod19, readableInstant20);
        long long22 = mutableInterval21.toDurationMillis();
        boolean boolean23 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        boolean boolean25 = mutableInterval21.contains(readableInstant24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableDuration readableDuration30 = null;
        org.joda.time.MutableInterval mutableInterval31 = new org.joda.time.MutableInterval(readableInstant29, readableDuration30);
        boolean boolean32 = mutableInterval28.overlaps((org.joda.time.ReadableInterval) mutableInterval31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readablePeriod33, readableInstant34);
        long long36 = mutableInterval35.toDurationMillis();
        boolean boolean37 = mutableInterval31.isAfter((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        boolean boolean39 = mutableInterval35.contains(readableInstant38);
        boolean boolean40 = mutableInterval21.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        boolean boolean55 = mutableInterval21.isBefore((org.joda.time.ReadableInterval) mutableInterval50);
        boolean boolean56 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.Chronology chronology57 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField58 = chronology57.weekyearOfCentury();
        org.joda.time.DateTimeField dateTimeField59 = chronology57.year();
        org.joda.time.DateTimeField dateTimeField60 = chronology57.hourOfDay();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertNotNull(dateTimeField58);
        org.junit.Assert.assertNotNull(dateTimeField59);
        org.junit.Assert.assertNotNull(dateTimeField60);
    }

    @Test
    public void test03964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03964");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTime dateTime71 = mutableInterval70.getEnd();
        java.lang.String str72 = mutableInterval70.toString();
        org.joda.time.Chronology chronology73 = mutableInterval70.getChronology();
        org.joda.time.DurationField durationField74 = chronology73.minutes();
        org.joda.time.Chronology chronology75 = chronology73.withUTC();
        org.joda.time.DateTimeField dateTimeField76 = chronology75.dayOfWeek();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:25.514Z/2022-02-11T09:40:25.514Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:25.514Z/2022-02-11T09:40:25.514Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:25.514Z/2022-02-11T09:40:25.514Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572425514L + "'", long16 == 1644572425514L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572425514L + "'", long32 == 1644572425514L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str72, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertNotNull(dateTimeField76);
    }

    @Test
    public void test03965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03965");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        long long7 = dateTime6.getMillis();
        org.joda.time.Chronology chronology8 = dateTime6.getChronology();
        long long16 = chronology8.getDateTimeMillis((int) ' ', (int) (short) 1, 8, 0, (int) (byte) 1, 1, 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:25.548Z/2022-02-11T09:40:25.548Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:25.548Z/2022-02-11T09:40:25.548Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:25.548Z/2022-02-11T09:40:25.548Z");
        org.junit.Assert.assertNotNull(dateTime6);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572425548L + "'", long7 == 1644572425548L);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-61156771139000L) + "'", long16 == (-61156771139000L));
    }

    @Test
    public void test03966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03966");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        mutableInterval20.setDurationAfterStart(0L);
        boolean boolean24 = mutableInterval20.equals((java.lang.Object) (-1));
        mutableInterval20.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean28 = mutableInterval14.isAfter((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.Duration duration29 = mutableInterval14.toDuration();
        org.joda.time.Interval interval30 = mutableInterval14.toInterval();
        long long31 = interval30.getStartMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(interval30);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572425599L + "'", long31 == 1644572425599L);
    }

    @Test
    public void test03967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03967");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readableInstant10, readableDuration11);
        boolean boolean13 = mutableInterval9.overlaps((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.Period period14 = mutableInterval12.toPeriod();
        org.joda.time.Duration duration15 = mutableInterval12.toDuration();
        mutableInterval2.setDurationAfterStart((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Chronology chronology17 = mutableInterval2.getChronology();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadablePeriod readablePeriod25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readablePeriod25, readableInstant26);
        long long28 = mutableInterval27.toDurationMillis();
        boolean boolean29 = mutableInterval23.isAfter((org.joda.time.ReadableInterval) mutableInterval27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        boolean boolean31 = mutableInterval27.contains(readableInstant30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        boolean boolean38 = mutableInterval34.overlaps((org.joda.time.ReadableInterval) mutableInterval37);
        org.joda.time.ReadablePeriod readablePeriod39 = null;
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readablePeriod39, readableInstant40);
        long long42 = mutableInterval41.toDurationMillis();
        boolean boolean43 = mutableInterval37.isAfter((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        boolean boolean45 = mutableInterval41.contains(readableInstant44);
        boolean boolean46 = mutableInterval27.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.Duration duration47 = mutableInterval41.toDuration();
        boolean boolean49 = duration47.equals((java.lang.Object) 'a');
        long long50 = duration47.getMillis();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        boolean boolean66 = mutableInterval56.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        boolean boolean67 = mutableInterval65.isBeforeNow();
        org.joda.time.Interval interval68 = mutableInterval65.toInterval();
        org.joda.time.MutableInterval mutableInterval69 = mutableInterval65.toMutableInterval();
        org.joda.time.Duration duration70 = mutableInterval69.toDuration();
        int int71 = duration47.compareTo((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Period period72 = duration70.toPeriod();
        boolean boolean73 = mutableInterval2.equals((java.lang.Object) duration70);
        boolean boolean74 = mutableInterval2.isAfterNow();
        long long75 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        org.joda.time.PeriodType periodType79 = null;
        org.joda.time.Period period80 = mutableInterval78.toPeriod(periodType79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        boolean boolean82 = period80.isSupported(durationFieldType81);
        mutableInterval2.setPeriodAfterStart((org.joda.time.ReadablePeriod) period80);
        java.lang.Class<?> wildcardClass84 = mutableInterval2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(mutableInterval69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test03968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03968");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = mutableInterval18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period20, readableInstant21);
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        boolean boolean31 = mutableInterval22.isAfter((org.joda.time.ReadableInterval) mutableInterval26);
        boolean boolean32 = mutableInterval6.overlaps((org.joda.time.ReadableInterval) mutableInterval22);
        boolean boolean33 = mutableInterval6.containsNow();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = mutableInterval36.toPeriod(periodType37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = period38.isSupported(durationFieldType39);
        boolean boolean42 = period38.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType44 = period38.getFieldType(0);
        org.joda.time.Period period45 = period38.toPeriod();
        int int46 = period45.size();
        int int47 = period45.size();
        org.joda.time.PeriodType periodType48 = period45.getPeriodType();
        org.joda.time.Period period49 = mutableInterval6.toPeriod(periodType48);
        long long50 = mutableInterval6.getEndMillis();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572425643L + "'", long7 == 1644572425643L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572425643L + "'", long23 == 1644572425643L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
// flaky:         org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1644572425643L + "'", long50 == 1644572425643L);
    }

    @Test
    public void test03969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03969");
        org.joda.time.MutableInterval mutableInterval1 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:34.356Z/2022-02-11T09:35:34.356Z");
        long long2 = mutableInterval1.getEndMillis();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        boolean boolean9 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval8);
        org.joda.time.ReadablePeriod readablePeriod10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.MutableInterval mutableInterval12 = new org.joda.time.MutableInterval(readablePeriod10, readableInstant11);
        long long13 = mutableInterval12.toDurationMillis();
        boolean boolean14 = mutableInterval8.isAfter((org.joda.time.ReadableInterval) mutableInterval12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        boolean boolean18 = mutableInterval8.overlaps((org.joda.time.ReadableInterval) mutableInterval17);
        boolean boolean19 = mutableInterval17.isBeforeNow();
        org.joda.time.Interval interval20 = mutableInterval17.toInterval();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        mutableInterval23.setDurationAfterStart(0L);
        boolean boolean27 = mutableInterval23.equals((java.lang.Object) (-1));
        mutableInterval23.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean31 = mutableInterval17.isAfter((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.Duration duration32 = mutableInterval17.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration34 = duration32.toDuration();
        mutableInterval1.setDurationAfterStart((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period36 = mutableInterval1.toPeriod();
        org.joda.time.Period period37 = mutableInterval1.toPeriod();
        org.joda.time.DateTime dateTime38 = mutableInterval1.getEnd();
        java.lang.Class<?> wildcardClass39 = dateTime38.getClass();
        org.junit.Assert.assertNotNull(mutableInterval1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1644572134356L + "'", long2 == 1644572134356L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test03970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03970");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.Period period8 = mutableInterval6.toPeriod();
        java.lang.String str9 = mutableInterval6.toString();
        boolean boolean10 = mutableInterval6.isAfterNow();
        org.joda.time.DateTime dateTime11 = mutableInterval6.getEnd();
        long long12 = dateTime11.getMillis();
        java.lang.String str13 = dateTime11.toString();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readableInstant14, readableDuration15);
        mutableInterval16.setDurationAfterStart(0L);
        boolean boolean20 = mutableInterval16.equals((java.lang.Object) (-1));
        long long21 = mutableInterval16.getEndMillis();
        org.joda.time.DateTime dateTime22 = mutableInterval16.getEnd();
        java.lang.Object obj23 = mutableInterval16.clone();
        org.joda.time.Duration duration24 = mutableInterval16.toDuration();
        org.joda.time.DateTime dateTime25 = mutableInterval16.getEnd();
        int int26 = dateTime11.compareTo((org.joda.time.ReadableInstant) dateTime25);
        long long27 = dateTime25.getMillis();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572425699L + "'", long7 == 1644572425699L);
        org.junit.Assert.assertNotNull(period8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "2022-02-11T09:40:25.699Z/2022-02-11T09:40:25.699Z" + "'", str9, "2022-02-11T09:40:25.699Z/2022-02-11T09:40:25.699Z");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(dateTime11);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1644572425699L + "'", long12 == 1644572425699L);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "2022-02-11T09:40:25.699Z" + "'", str13, "2022-02-11T09:40:25.699Z");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572425699L + "'", long21 == 1644572425699L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals(obj23.toString(), "2022-02-11T09:40:25.699Z/2022-02-11T09:40:25.699Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "2022-02-11T09:40:25.699Z/2022-02-11T09:40:25.699Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "2022-02-11T09:40:25.699Z/2022-02-11T09:40:25.699Z");
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1644572425699L + "'", long27 == 1644572425699L);
    }

    @Test
    public void test03971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03971");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfYear();
        long long75 = chronology68.add(1644572130394L, 1644572130656L, 1);
        org.joda.time.DateTimeField dateTimeField76 = chronology68.hourOfDay();
        org.joda.time.DateTimeField dateTimeField77 = chronology68.secondOfDay();
        org.joda.time.DateTimeField dateTimeField78 = chronology68.clockhourOfHalfday();
        org.joda.time.DurationField durationField79 = chronology68.hours();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:25.712Z/2022-02-11T09:40:25.712Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:25.712Z/2022-02-11T09:40:25.712Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:25.712Z/2022-02-11T09:40:25.712Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572425712L + "'", long16 == 1644572425712L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572425712L + "'", long32 == 1644572425712L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 3289144261050L + "'", long75 == 3289144261050L);
        org.junit.Assert.assertNotNull(dateTimeField76);
        org.junit.Assert.assertNotNull(dateTimeField77);
        org.junit.Assert.assertNotNull(dateTimeField78);
        org.junit.Assert.assertNotNull(durationField79);
    }

    @Test
    public void test03972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03972");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.minuteOfHour();
        org.joda.time.DurationField durationField71 = chronology66.minutes();
        org.joda.time.DateTimeField dateTimeField72 = chronology66.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField73 = chronology66.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField74 = chronology66.centuryOfEra();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:25.852Z/2022-02-11T09:40:25.852Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:25.852Z/2022-02-11T09:40:25.852Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:25.852Z/2022-02-11T09:40:25.852Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572425852L + "'", long14 == 1644572425852L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572425852L + "'", long30 == 1644572425852L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
    }

    @Test
    public void test03973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03973");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.Interval interval6 = mutableInterval2.toInterval();
        org.joda.time.Chronology chronology7 = mutableInterval2.getChronology();
        org.joda.time.DateTimeField dateTimeField8 = chronology7.centuryOfEra();
        org.joda.time.Chronology chronology9 = chronology7.withUTC();
        org.joda.time.DurationField durationField10 = chronology9.minutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:25.910Z/2022-02-11T09:40:25.910Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:25.910Z/2022-02-11T09:40:25.910Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:25.910Z/2022-02-11T09:40:25.910Z");
        org.junit.Assert.assertNotNull(interval6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(dateTimeField8);
        org.junit.Assert.assertNotNull(chronology9);
        org.junit.Assert.assertNotNull(durationField10);
    }

    @Test
    public void test03974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03974");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period7, readableInstant8);
        boolean boolean10 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.Period period11 = mutableInterval2.toPeriod();
        org.joda.time.Duration duration12 = mutableInterval2.toDuration();
        long long13 = duration12.getMillis();
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutableInterval mutableInterval16 = new org.joda.time.MutableInterval(readablePeriod14, readableInstant15);
        long long17 = mutableInterval16.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = mutableInterval20.toPeriod(periodType21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.MutableInterval mutableInterval28 = new org.joda.time.MutableInterval(readableInstant26, readableDuration27);
        boolean boolean29 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval28);
        org.joda.time.Period period30 = mutableInterval28.toPeriod();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = mutableInterval33.toPeriod(periodType34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = period35.isSupported(durationFieldType36);
        boolean boolean39 = period35.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType41 = period35.getFieldType(0);
        int int42 = period30.get(durationFieldType41);
        int int43 = period22.get(durationFieldType41);
        mutableInterval16.setPeriodAfterStart((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Interval interval45 = mutableInterval16.toInterval();
        java.lang.Object obj46 = mutableInterval16.clone();
        boolean boolean47 = duration12.equals(obj46);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals(obj46.toString(), "2022-02-11T09:40:25.923Z/2022-02-11T09:40:25.923Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "2022-02-11T09:40:25.923Z/2022-02-11T09:40:25.923Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "2022-02-11T09:40:25.923Z/2022-02-11T09:40:25.923Z");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test03975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03975");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.DateTimeField dateTimeField9 = chronology8.monthOfYear();
        org.joda.time.DurationField durationField10 = chronology8.weekyears();
        org.joda.time.DurationField durationField11 = chronology8.centuries();
        // The following exception was thrown during execution in test generation
        try {
            long long16 = chronology8.getDateTimeMillis((int) (byte) 100, (int) (short) 0, (int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for millisOfDay must be in the range [0,86399999]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeField9);
        org.junit.Assert.assertNotNull(durationField10);
        org.junit.Assert.assertNotNull(durationField11);
    }

    @Test
    public void test03976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03976");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period10 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        boolean boolean17 = mutableInterval13.contains(readableInstant16);
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getStart();
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, (org.joda.time.ReadableInstant) dateTime19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        mutableInterval23.setDurationAfterStart(0L);
        boolean boolean27 = mutableInterval23.equals((java.lang.Object) (-1));
        long long28 = mutableInterval23.getEndMillis();
        org.joda.time.DateTime dateTime29 = mutableInterval23.getEnd();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        mutableInterval39.setDurationAfterStart(0L);
        boolean boolean43 = mutableInterval39.equals((java.lang.Object) (-1));
        long long44 = mutableInterval39.getEndMillis();
        org.joda.time.DateTime dateTime45 = mutableInterval39.getEnd();
        boolean boolean46 = mutableInterval32.isAfter((org.joda.time.ReadableInstant) dateTime45);
        boolean boolean47 = dateTime29.isAfter((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        mutableInterval57.setDurationAfterStart(0L);
        boolean boolean61 = mutableInterval57.equals((java.lang.Object) (-1));
        long long62 = mutableInterval57.getEndMillis();
        org.joda.time.DateTime dateTime63 = mutableInterval57.getEnd();
        boolean boolean64 = mutableInterval50.isAfter((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableInstant) dateTime63);
        boolean boolean66 = dateTime19.isBefore((org.joda.time.ReadableInstant) dateTime63);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval((java.lang.Object) boolean66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No interval converter found for type: java.lang.Boolean");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572426043L + "'", long18 == 1644572426043L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1644572426043L + "'", long28 == 1644572426043L);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572426043L + "'", long44 == 1644572426043L);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1644572426044L + "'", long62 == 1644572426044L);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test03977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03977");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period10 = mutableInterval2.toPeriod();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        mutableInterval13.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant16 = null;
        boolean boolean17 = mutableInterval13.contains(readableInstant16);
        long long18 = mutableInterval13.getEndMillis();
        org.joda.time.DateTime dateTime19 = mutableInterval13.getStart();
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period10, (org.joda.time.ReadableInstant) dateTime19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readablePeriod21, readableInstant22);
        long long24 = mutableInterval23.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = mutableInterval27.toPeriod(periodType28);
        java.lang.Object obj30 = mutableInterval27.clone();
        org.joda.time.DateTime dateTime31 = mutableInterval27.getStart();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval(readableInstant32, readableDuration33);
        mutableInterval34.setDurationAfterStart(0L);
        boolean boolean38 = mutableInterval34.equals((java.lang.Object) (-1));
        long long39 = mutableInterval34.getEndMillis();
        org.joda.time.DateTime dateTime40 = mutableInterval34.getEnd();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        mutableInterval50.setDurationAfterStart(0L);
        boolean boolean54 = mutableInterval50.equals((java.lang.Object) (-1));
        long long55 = mutableInterval50.getEndMillis();
        org.joda.time.DateTime dateTime56 = mutableInterval50.getEnd();
        boolean boolean57 = mutableInterval43.isAfter((org.joda.time.ReadableInstant) dateTime56);
        boolean boolean58 = dateTime40.isAfter((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableDuration readableDuration63 = null;
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval(readableInstant62, readableDuration63);
        boolean boolean65 = mutableInterval61.overlaps((org.joda.time.ReadableInterval) mutableInterval64);
        org.joda.time.ReadablePeriod readablePeriod66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.MutableInterval mutableInterval68 = new org.joda.time.MutableInterval(readablePeriod66, readableInstant67);
        long long69 = mutableInterval68.toDurationMillis();
        boolean boolean70 = mutableInterval64.isAfter((org.joda.time.ReadableInterval) mutableInterval68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        boolean boolean72 = mutableInterval68.contains(readableInstant71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.MutableInterval mutableInterval75 = new org.joda.time.MutableInterval(readableInstant73, readableDuration74);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableDuration readableDuration77 = null;
        org.joda.time.MutableInterval mutableInterval78 = new org.joda.time.MutableInterval(readableInstant76, readableDuration77);
        boolean boolean79 = mutableInterval75.overlaps((org.joda.time.ReadableInterval) mutableInterval78);
        org.joda.time.ReadablePeriod readablePeriod80 = null;
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.MutableInterval mutableInterval82 = new org.joda.time.MutableInterval(readablePeriod80, readableInstant81);
        long long83 = mutableInterval82.toDurationMillis();
        boolean boolean84 = mutableInterval78.isAfter((org.joda.time.ReadableInterval) mutableInterval82);
        org.joda.time.ReadableInstant readableInstant85 = null;
        boolean boolean86 = mutableInterval82.contains(readableInstant85);
        boolean boolean87 = mutableInterval68.overlaps((org.joda.time.ReadableInterval) mutableInterval82);
        org.joda.time.Duration duration88 = mutableInterval82.toDuration();
        org.joda.time.MutableInterval mutableInterval89 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableDuration) duration88);
        boolean boolean90 = mutableInterval27.contains((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Chronology chronology91 = dateTime56.getChronology();
        org.joda.time.DateTimeField dateTimeField92 = chronology91.hourOfDay();
        org.joda.time.DateTimeZone dateTimeZone93 = chronology91.getZone();
        org.joda.time.Chronology chronology94 = chronology91.withUTC();
        mutableInterval23.setChronology(chronology94);
        org.joda.time.MutableInterval mutableInterval96 = mutableInterval23.copy();
        org.joda.time.DateTime dateTime97 = mutableInterval96.getStart();
        boolean boolean98 = dateTime19.isEqual((org.joda.time.ReadableInstant) dateTime97);
        org.joda.time.DateTimeZone dateTimeZone99 = dateTime97.getZone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572426073L + "'", long18 == 1644572426073L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "2022-02-11T09:40:26.073Z/2022-02-11T09:40:26.073Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "2022-02-11T09:40:26.073Z/2022-02-11T09:40:26.073Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "2022-02-11T09:40:26.073Z/2022-02-11T09:40:26.073Z");
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1644572426073L + "'", long39 == 1644572426073L);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1644572426073L + "'", long55 == 1644572426073L);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(chronology91);
        org.junit.Assert.assertNotNull(dateTimeField92);
        org.junit.Assert.assertNotNull(dateTimeZone93);
        org.junit.Assert.assertNotNull(chronology94);
        org.junit.Assert.assertNotNull(mutableInterval96);
        org.junit.Assert.assertNotNull(dateTime97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(dateTimeZone99);
    }

    @Test
    public void test03978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03978");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.isAfter(readableInstant5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        mutableInterval9.setStartMillis(1644572127942L);
        boolean boolean14 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval9);
        java.lang.String str15 = mutableInterval2.toString();
        long long16 = mutableInterval2.getStartMillis();
        long long17 = mutableInterval2.getEndMillis();
        mutableInterval2.setStartMillis(1644572161385L);
        boolean boolean21 = mutableInterval2.isAfter(1644572157013L);
        boolean boolean22 = mutableInterval2.isAfterNow();
        org.joda.time.Interval interval23 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        java.lang.Object obj33 = mutableInterval26.clone();
        org.joda.time.MutableInterval mutableInterval34 = new org.joda.time.MutableInterval();
        org.joda.time.DateTime dateTime35 = mutableInterval34.getEnd();
        boolean boolean36 = mutableInterval26.contains((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTime dateTime37 = mutableInterval26.getStart();
        org.joda.time.DateTimeZone dateTimeZone38 = dateTime37.getZone();
        org.joda.time.Instant instant39 = dateTime37.toInstant();
        boolean boolean40 = mutableInterval2.contains((org.joda.time.ReadableInstant) instant39);
        long long41 = instant39.getMillis();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "2022-02-11T09:40:26.110Z/2022-02-11T09:40:26.110Z" + "'", str15, "2022-02-11T09:40:26.110Z/2022-02-11T09:40:26.110Z");
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572426110L + "'", long16 == 1644572426110L);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1644572426110L + "'", long17 == 1644572426110L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572426110L + "'", long31 == 1644572426110L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "2022-02-11T09:40:26.110Z/2022-02-11T09:40:26.110Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "2022-02-11T09:40:26.110Z/2022-02-11T09:40:26.110Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "2022-02-11T09:40:26.110Z/2022-02-11T09:40:26.110Z");
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(dateTimeZone38);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572426110L + "'", long41 == 1644572426110L);
    }

    @Test
    public void test03979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03979");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        java.lang.String str3 = mutableInterval2.toString();
        org.joda.time.MutableInterval mutableInterval4 = mutableInterval2.toMutableInterval();
        org.joda.time.Interval interval5 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        mutableInterval8.setDurationAfterStart(0L);
        boolean boolean12 = mutableInterval8.equals((java.lang.Object) (-1));
        long long13 = mutableInterval8.getEndMillis();
        org.joda.time.DateTime dateTime14 = mutableInterval8.getEnd();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        boolean boolean21 = mutableInterval17.overlaps((org.joda.time.ReadableInterval) mutableInterval20);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutableInterval mutableInterval24 = new org.joda.time.MutableInterval(readablePeriod22, readableInstant23);
        long long25 = mutableInterval24.toDurationMillis();
        boolean boolean26 = mutableInterval20.isAfter((org.joda.time.ReadableInterval) mutableInterval24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        boolean boolean33 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval32);
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readablePeriod34, readableInstant35);
        long long37 = mutableInterval36.toDurationMillis();
        boolean boolean38 = mutableInterval32.isAfter((org.joda.time.ReadableInterval) mutableInterval36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        boolean boolean40 = mutableInterval36.contains(readableInstant39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readableInstant41, readableDuration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.MutableInterval mutableInterval46 = new org.joda.time.MutableInterval(readableInstant44, readableDuration45);
        boolean boolean47 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval46);
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readablePeriod48, readableInstant49);
        long long51 = mutableInterval50.toDurationMillis();
        boolean boolean52 = mutableInterval46.isAfter((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        boolean boolean54 = mutableInterval50.contains(readableInstant53);
        boolean boolean55 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval50);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval36.isBefore((org.joda.time.ReadableInterval) mutableInterval65);
        boolean boolean71 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        org.joda.time.PeriodType periodType75 = null;
        org.joda.time.Period period76 = mutableInterval74.toPeriod(periodType75);
        org.joda.time.DurationFieldType durationFieldType77 = null;
        boolean boolean78 = period76.isSupported(durationFieldType77);
        boolean boolean80 = period76.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType82 = period76.getFieldType(0);
        mutableInterval65.setPeriodBeforeEnd((org.joda.time.ReadablePeriod) period76);
        mutableInterval8.setPeriodAfterStart((org.joda.time.ReadablePeriod) period76);
        org.joda.time.PeriodType periodType85 = period76.getPeriodType();
        org.joda.time.Period period86 = interval5.toPeriod(periodType85);
        int int87 = period86.size();
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "2022-02-11T09:40:26.140Z/2022-02-11T09:40:26.140Z" + "'", str3, "2022-02-11T09:40:26.140Z/2022-02-11T09:40:26.140Z");
        org.junit.Assert.assertNotNull(mutableInterval4);
        org.junit.Assert.assertNotNull(interval5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1644572426140L + "'", long13 == 1644572426140L);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 8 + "'", int87 == 8);
    }

    @Test
    public void test03980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03980");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant5 = null;
        boolean boolean6 = mutableInterval2.contains(readableInstant5);
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = mutableInterval39.toPeriod(periodType40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = period41.isSupported(durationFieldType42);
        boolean boolean45 = period41.equals((java.lang.Object) "hi!");
        int int46 = period41.size();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableDuration readableDuration48 = null;
        org.joda.time.MutableInterval mutableInterval49 = new org.joda.time.MutableInterval(readableInstant47, readableDuration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        boolean boolean53 = mutableInterval49.overlaps((org.joda.time.ReadableInterval) mutableInterval52);
        org.joda.time.Period period54 = mutableInterval52.toPeriod();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableDuration readableDuration56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readableInstant55, readableDuration56);
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.Period period59 = mutableInterval57.toPeriod(periodType58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        boolean boolean61 = period59.isSupported(durationFieldType60);
        boolean boolean63 = period59.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType65 = period59.getFieldType(0);
        int int66 = period54.get(durationFieldType65);
        int int67 = period41.get(durationFieldType65);
        org.joda.time.DurationFieldType durationFieldType69 = period41.getFieldType(0);
        org.joda.time.PeriodType periodType70 = period41.getPeriodType();
        org.joda.time.MutableInterval mutableInterval71 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadablePeriod) period41);
        int int72 = period41.size();
        org.joda.time.MutablePeriod mutablePeriod73 = period41.toMutablePeriod();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572426163L + "'", long7 == 1644572426163L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572426163L + "'", long16 == 1644572426163L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572426163L + "'", long32 == 1644572426163L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8 + "'", int72 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod73);
    }

    @Test
    public void test03981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03981");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableDuration readableDuration12 = null;
        org.joda.time.MutableInterval mutableInterval13 = new org.joda.time.MutableInterval(readableInstant11, readableDuration12);
        boolean boolean14 = mutableInterval10.overlaps((org.joda.time.ReadableInterval) mutableInterval13);
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readablePeriod15, readableInstant16);
        long long18 = mutableInterval17.toDurationMillis();
        boolean boolean19 = mutableInterval13.isAfter((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        boolean boolean21 = mutableInterval17.contains(readableInstant20);
        long long22 = mutableInterval17.getEndMillis();
        boolean boolean23 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval17);
        org.joda.time.DateTime dateTime24 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        mutableInterval27.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval35 = mutableInterval27.copy();
        boolean boolean37 = mutableInterval27.contains(1644572125519L);
        mutableInterval27.setEndMillis((long) (byte) 0);
        boolean boolean41 = mutableInterval27.contains(1644572133267L);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readablePeriod42, readableInstant43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = mutableInterval47.toPeriod(periodType48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period49, readableInstant50);
        boolean boolean52 = mutableInterval44.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        long long53 = mutableInterval44.toDurationMillis();
        mutableInterval27.setInterval((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadableDuration readableDuration55 = null;
        mutableInterval27.setDurationAfterStart(readableDuration55);
        org.joda.time.DateTime dateTime57 = mutableInterval27.getStart();
        boolean boolean58 = mutableInterval17.isAfter((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int60 = dateTime57.get(dateTimeFieldType59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572426185L + "'", long7 == 1644572426185L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572426185L + "'", long22 == 1644572426185L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mutableInterval35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test03982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03982");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.yearOfEra();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField72 = chronology68.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField73 = chronology68.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.hourOfHalfday();
        org.joda.time.Chronology chronology75 = chronology68.withUTC();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(1644572133659L, 59204596581490L, chronology75);
        org.joda.time.Chronology chronology77 = null;
        mutableInterval76.setChronology(chronology77);
        boolean boolean80 = mutableInterval76.isAfter(1644572332239L);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:26.205Z/2022-02-11T09:40:26.205Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:26.205Z/2022-02-11T09:40:26.205Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:26.205Z/2022-02-11T09:40:26.205Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572426205L + "'", long16 == 1644572426205L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572426205L + "'", long32 == 1644572426205L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(chronology75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test03983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03983");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTimeField dateTimeField71 = chronology68.year();
        org.joda.time.DateTimeField dateTimeField72 = chronology68.era();
        org.joda.time.DurationField durationField73 = chronology68.millis();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.year();
        org.joda.time.DateTimeField dateTimeField75 = chronology68.hourOfDay();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:26.286Z/2022-02-11T09:40:26.286Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:26.286Z/2022-02-11T09:40:26.286Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:26.286Z/2022-02-11T09:40:26.286Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572426286L + "'", long16 == 1644572426286L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572426286L + "'", long32 == 1644572426286L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField72);
        org.junit.Assert.assertNotNull(durationField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(dateTimeField75);
    }

    @Test
    public void test03984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03984");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval14.isBeforeNow();
        org.joda.time.Interval interval17 = mutableInterval14.toInterval();
        org.joda.time.MutableInterval mutableInterval18 = mutableInterval14.toMutableInterval();
        org.joda.time.Duration duration19 = mutableInterval18.toDuration();
        org.joda.time.Chronology chronology20 = mutableInterval18.getChronology();
        org.joda.time.DateTimeField dateTimeField21 = chronology20.clockhourOfDay();
        org.joda.time.DurationField durationField22 = chronology20.hours();
        org.joda.time.DateTimeField dateTimeField23 = chronology20.yearOfEra();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(mutableInterval18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(dateTimeField21);
        org.junit.Assert.assertNotNull(durationField22);
        org.junit.Assert.assertNotNull(dateTimeField23);
    }

    @Test
    public void test03985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03985");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        long long8 = mutableInterval2.getStartMillis();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        boolean boolean15 = mutableInterval11.isAfter(readableInstant14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readablePeriod23, readableInstant24);
        long long26 = mutableInterval25.toDurationMillis();
        boolean boolean27 = mutableInterval21.isAfter((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        boolean boolean29 = mutableInterval25.contains(readableInstant28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.MutableInterval mutableInterval32 = new org.joda.time.MutableInterval(readableInstant30, readableDuration31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        boolean boolean36 = mutableInterval32.overlaps((org.joda.time.ReadableInterval) mutableInterval35);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readablePeriod37, readableInstant38);
        long long40 = mutableInterval39.toDurationMillis();
        boolean boolean41 = mutableInterval35.isAfter((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        boolean boolean43 = mutableInterval39.contains(readableInstant42);
        boolean boolean44 = mutableInterval25.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.Duration duration45 = mutableInterval39.toDuration();
        mutableInterval11.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration45);
        mutableInterval2.setDurationBeforeEnd((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Chronology chronology48 = mutableInterval2.getChronology();
        org.joda.time.Chronology chronology49 = mutableInterval2.getChronology();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572426351L + "'", long5 == 1644572426351L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572426351L + "'", long8 == 1644572426351L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(chronology48);
        org.junit.Assert.assertNotNull(chronology49);
    }

    @Test
    public void test03986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03986");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        boolean boolean16 = mutableInterval5.isBeforeNow();
        boolean boolean17 = mutableInterval5.containsNow();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test03987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03987");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        long long7 = mutableInterval2.getEndMillis();
        org.joda.time.DateTime dateTime8 = mutableInterval2.getEnd();
        mutableInterval2.setInterval(1644572126318L, 1644572134016L);
        org.joda.time.Interval interval12 = mutableInterval2.toInterval();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval(readableInstant13, readableDuration14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        boolean boolean19 = mutableInterval15.overlaps((org.joda.time.ReadableInterval) mutableInterval18);
        org.joda.time.Period period20 = mutableInterval18.toPeriod();
        org.joda.time.Duration duration21 = mutableInterval18.toDuration();
        long long22 = duration21.getMillis();
        mutableInterval2.setDurationAfterStart((org.joda.time.ReadableDuration) duration21);
        long long24 = mutableInterval2.getEndMillis();
        boolean boolean25 = mutableInterval2.isBeforeNow();
        org.joda.time.Duration duration26 = mutableInterval2.toDuration();
        java.lang.String str27 = duration26.toString();
        org.joda.time.Duration duration28 = duration26.toDuration();
        org.joda.time.MutableInterval mutableInterval30 = org.joda.time.MutableInterval.parse("2022-02-11T09:36:17.913Z/2022-02-11T09:36:17.913Z");
        boolean boolean31 = duration26.equals((java.lang.Object) "2022-02-11T09:36:17.913Z/2022-02-11T09:36:17.913Z");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572426446L + "'", long7 == 1644572426446L);
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1644572126318L + "'", long24 == 1644572126318L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT0S" + "'", str27, "PT0S");
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(mutableInterval30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03988");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        boolean boolean7 = mutableInterval2.equals((java.lang.Object) ' ');
        long long8 = mutableInterval2.getStartMillis();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = mutableInterval11.toPeriod(periodType12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutableInterval mutableInterval15 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period13, readableInstant14);
        long long16 = mutableInterval15.getStartMillis();
        org.joda.time.Period period17 = mutableInterval15.toPeriod();
        java.lang.String str18 = mutableInterval15.toString();
        boolean boolean19 = mutableInterval15.isAfterNow();
        boolean boolean20 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval15);
        long long21 = mutableInterval15.getStartMillis();
        mutableInterval15.setInterval(37926L, 1644572172924L);
        long long25 = mutableInterval15.getStartMillis();
        mutableInterval15.setInterval(1644572203711L, 1644572369053L);
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572426458L + "'", long5 == 1644572426458L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572426458L + "'", long8 == 1644572426458L);
        org.junit.Assert.assertNotNull(period13);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572426458L + "'", long16 == 1644572426458L);
        org.junit.Assert.assertNotNull(period17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2022-02-11T09:40:26.458Z/2022-02-11T09:40:26.458Z" + "'", str18, "2022-02-11T09:40:26.458Z/2022-02-11T09:40:26.458Z");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572426458L + "'", long21 == 1644572426458L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 37926L + "'", long25 == 37926L);
    }

    @Test
    public void test03989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03989");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField70 = chronology68.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField71 = chronology68.dayOfWeek();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval(1644572136401L, 1644572141513L, chronology68);
        org.joda.time.DateTimeField dateTimeField73 = chronology68.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField74 = chronology68.millisOfSecond();
        org.joda.time.DurationField durationField75 = chronology68.millis();
        org.joda.time.DurationField durationField76 = chronology68.months();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:26.527Z/2022-02-11T09:40:26.527Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:26.527Z/2022-02-11T09:40:26.527Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:26.527Z/2022-02-11T09:40:26.527Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572426527L + "'", long16 == 1644572426527L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572426527L + "'", long32 == 1644572426527L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(dateTimeField73);
        org.junit.Assert.assertNotNull(dateTimeField74);
        org.junit.Assert.assertNotNull(durationField75);
        org.junit.Assert.assertNotNull(durationField76);
    }

    @Test
    public void test03990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03990");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableDuration readableDuration72 = null;
        org.joda.time.MutableInterval mutableInterval73 = new org.joda.time.MutableInterval(readableInstant71, readableDuration72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.ReadableDuration readableDuration75 = null;
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval(readableInstant74, readableDuration75);
        boolean boolean77 = mutableInterval73.overlaps((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.Period period78 = mutableInterval76.toPeriod();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        org.joda.time.PeriodType periodType82 = null;
        org.joda.time.Period period83 = mutableInterval81.toPeriod(periodType82);
        org.joda.time.DurationFieldType durationFieldType84 = null;
        boolean boolean85 = period83.isSupported(durationFieldType84);
        boolean boolean87 = period83.equals((java.lang.Object) "hi!");
        org.joda.time.DurationFieldType durationFieldType89 = period83.getFieldType(0);
        int int90 = period78.get(durationFieldType89);
        int[] intArray93 = chronology68.get((org.joda.time.ReadablePeriod) period78, 1644572127855L, (long) 1);
        org.joda.time.DateTimeField dateTimeField94 = chronology68.yearOfCentury();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:26.556Z/2022-02-11T09:40:26.556Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:26.556Z/2022-02-11T09:40:26.556Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:26.556Z/2022-02-11T09:40:26.556Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572426556L + "'", long16 == 1644572426556L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572426556L + "'", long32 == 1644572426556L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-52, -1, -1, -3, -9, -35, -27, -854]");
        org.junit.Assert.assertNotNull(dateTimeField94);
    }

    @Test
    public void test03991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03991");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        boolean boolean15 = mutableInterval5.overlaps((org.joda.time.ReadableInterval) mutableInterval14);
        org.joda.time.Duration duration16 = mutableInterval5.toDuration();
        long long17 = mutableInterval5.getStartMillis();
        boolean boolean18 = mutableInterval5.isBeforeNow();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration16);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1644572426583L + "'", long17 == 1644572426583L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03992");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutableInterval mutableInterval6 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period4, readableInstant5);
        long long7 = mutableInterval6.getStartMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        mutableInterval10.setDurationAfterStart(0L);
        boolean boolean14 = mutableInterval10.equals((java.lang.Object) (-1));
        boolean boolean15 = mutableInterval6.isAfter((org.joda.time.ReadableInterval) mutableInterval10);
        org.joda.time.MutableInterval mutableInterval17 = org.joda.time.MutableInterval.parse("2022-02-11T09:35:25.397Z/2022-02-11T09:35:25.397Z");
        org.joda.time.Chronology chronology18 = mutableInterval17.getChronology();
        org.joda.time.DateTimeField dateTimeField19 = chronology18.monthOfYear();
        org.joda.time.DateTimeField dateTimeField20 = chronology18.millisOfDay();
        mutableInterval10.setChronology(chronology18);
        org.joda.time.DateTimeField dateTimeField22 = chronology18.secondOfDay();
        org.joda.time.DateTimeField dateTimeField23 = chronology18.dayOfYear();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1644572426598L + "'", long7 == 1644572426598L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutableInterval17);
        org.junit.Assert.assertNotNull(chronology18);
        org.junit.Assert.assertNotNull(dateTimeField19);
        org.junit.Assert.assertNotNull(dateTimeField20);
        org.junit.Assert.assertNotNull(dateTimeField22);
        org.junit.Assert.assertNotNull(dateTimeField23);
    }

    @Test
    public void test03993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03993");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readablePeriod7, readableInstant8);
        long long10 = mutableInterval9.toDurationMillis();
        boolean boolean11 = mutableInterval5.isAfter((org.joda.time.ReadableInterval) mutableInterval9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        boolean boolean13 = mutableInterval9.contains(readableInstant12);
        boolean boolean15 = mutableInterval9.isAfter(1644572126418L);
        org.joda.time.MutableInterval mutableInterval16 = mutableInterval9.copy();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.MutableInterval mutableInterval19 = new org.joda.time.MutableInterval(readableInstant17, readableDuration18);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = mutableInterval19.toPeriod(periodType20);
        java.lang.Object obj22 = mutableInterval19.clone();
        org.joda.time.DateTime dateTime23 = mutableInterval19.getStart();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        mutableInterval26.setDurationAfterStart(0L);
        boolean boolean30 = mutableInterval26.equals((java.lang.Object) (-1));
        long long31 = mutableInterval26.getEndMillis();
        org.joda.time.DateTime dateTime32 = mutableInterval26.getEnd();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.MutableInterval mutableInterval35 = new org.joda.time.MutableInterval(readableInstant33, readableDuration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        boolean boolean39 = mutableInterval35.overlaps((org.joda.time.ReadableInterval) mutableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.MutableInterval mutableInterval42 = new org.joda.time.MutableInterval(readableInstant40, readableDuration41);
        mutableInterval42.setDurationAfterStart(0L);
        boolean boolean46 = mutableInterval42.equals((java.lang.Object) (-1));
        long long47 = mutableInterval42.getEndMillis();
        org.joda.time.DateTime dateTime48 = mutableInterval42.getEnd();
        boolean boolean49 = mutableInterval35.isAfter((org.joda.time.ReadableInstant) dateTime48);
        boolean boolean50 = dateTime32.isAfter((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableDuration readableDuration55 = null;
        org.joda.time.MutableInterval mutableInterval56 = new org.joda.time.MutableInterval(readableInstant54, readableDuration55);
        boolean boolean57 = mutableInterval53.overlaps((org.joda.time.ReadableInterval) mutableInterval56);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutableInterval mutableInterval60 = new org.joda.time.MutableInterval(readablePeriod58, readableInstant59);
        long long61 = mutableInterval60.toDurationMillis();
        boolean boolean62 = mutableInterval56.isAfter((org.joda.time.ReadableInterval) mutableInterval60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        boolean boolean64 = mutableInterval60.contains(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableDuration readableDuration66 = null;
        org.joda.time.MutableInterval mutableInterval67 = new org.joda.time.MutableInterval(readableInstant65, readableDuration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableDuration readableDuration69 = null;
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval(readableInstant68, readableDuration69);
        boolean boolean71 = mutableInterval67.overlaps((org.joda.time.ReadableInterval) mutableInterval70);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readablePeriod72, readableInstant73);
        long long75 = mutableInterval74.toDurationMillis();
        boolean boolean76 = mutableInterval70.isAfter((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        boolean boolean78 = mutableInterval74.contains(readableInstant77);
        boolean boolean79 = mutableInterval60.overlaps((org.joda.time.ReadableInterval) mutableInterval74);
        org.joda.time.Duration duration80 = mutableInterval74.toDuration();
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = mutableInterval19.contains((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology83 = dateTime48.getChronology();
        org.joda.time.Chronology chronology84 = dateTime48.getChronology();
        org.joda.time.DateTimeField dateTimeField85 = chronology84.monthOfYear();
        org.joda.time.DateTimeField dateTimeField86 = chronology84.clockhourOfDay();
        org.joda.time.Chronology chronology87 = chronology84.withUTC();
        boolean boolean88 = mutableInterval9.equals((java.lang.Object) chronology84);
        org.joda.time.MutableInterval mutableInterval89 = mutableInterval9.toMutableInterval();
        mutableInterval9.setDurationBeforeEnd(1644572393548L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutableInterval16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "2022-02-11T09:40:26.664Z/2022-02-11T09:40:26.664Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "2022-02-11T09:40:26.664Z/2022-02-11T09:40:26.664Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "2022-02-11T09:40:26.664Z/2022-02-11T09:40:26.664Z");
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572426664L + "'", long31 == 1644572426664L);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572426664L + "'", long47 == 1644572426664L);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(chronology84);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertNotNull(dateTimeField86);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(mutableInterval89);
    }

    @Test
    public void test03994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03994");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.MutableInterval mutableInterval4 = new org.joda.time.MutableInterval(readableInstant2, readableDuration3);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = mutableInterval4.toPeriod(periodType5);
        java.lang.Object obj7 = mutableInterval4.clone();
        org.joda.time.DateTime dateTime8 = mutableInterval4.getStart();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.MutableInterval mutableInterval11 = new org.joda.time.MutableInterval(readableInstant9, readableDuration10);
        mutableInterval11.setDurationAfterStart(0L);
        boolean boolean15 = mutableInterval11.equals((java.lang.Object) (-1));
        long long16 = mutableInterval11.getEndMillis();
        org.joda.time.DateTime dateTime17 = mutableInterval11.getEnd();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableDuration readableDuration19 = null;
        org.joda.time.MutableInterval mutableInterval20 = new org.joda.time.MutableInterval(readableInstant18, readableDuration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        boolean boolean24 = mutableInterval20.overlaps((org.joda.time.ReadableInterval) mutableInterval23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableDuration readableDuration26 = null;
        org.joda.time.MutableInterval mutableInterval27 = new org.joda.time.MutableInterval(readableInstant25, readableDuration26);
        mutableInterval27.setDurationAfterStart(0L);
        boolean boolean31 = mutableInterval27.equals((java.lang.Object) (-1));
        long long32 = mutableInterval27.getEndMillis();
        org.joda.time.DateTime dateTime33 = mutableInterval27.getEnd();
        boolean boolean34 = mutableInterval20.isAfter((org.joda.time.ReadableInstant) dateTime33);
        boolean boolean35 = dateTime17.isAfter((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.MutableInterval mutableInterval38 = new org.joda.time.MutableInterval(readableInstant36, readableDuration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        boolean boolean42 = mutableInterval38.overlaps((org.joda.time.ReadableInterval) mutableInterval41);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutableInterval mutableInterval45 = new org.joda.time.MutableInterval(readablePeriod43, readableInstant44);
        long long46 = mutableInterval45.toDurationMillis();
        boolean boolean47 = mutableInterval41.isAfter((org.joda.time.ReadableInterval) mutableInterval45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        boolean boolean49 = mutableInterval45.contains(readableInstant48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableDuration readableDuration51 = null;
        org.joda.time.MutableInterval mutableInterval52 = new org.joda.time.MutableInterval(readableInstant50, readableDuration51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        boolean boolean56 = mutableInterval52.overlaps((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutableInterval mutableInterval59 = new org.joda.time.MutableInterval(readablePeriod57, readableInstant58);
        long long60 = mutableInterval59.toDurationMillis();
        boolean boolean61 = mutableInterval55.isAfter((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        boolean boolean63 = mutableInterval59.contains(readableInstant62);
        boolean boolean64 = mutableInterval45.overlaps((org.joda.time.ReadableInterval) mutableInterval59);
        org.joda.time.Duration duration65 = mutableInterval59.toDuration();
        org.joda.time.MutableInterval mutableInterval66 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = mutableInterval4.contains((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Chronology chronology68 = dateTime33.getChronology();
        org.joda.time.DateTimeField dateTimeField69 = chronology68.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval70 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology68);
        org.joda.time.DateTime dateTime71 = mutableInterval70.getEnd();
        java.lang.String str72 = mutableInterval70.toString();
        mutableInterval70.setEndMillis(1644572171599L);
        org.joda.time.MutableInterval mutableInterval75 = mutableInterval70.toMutableInterval();
        org.joda.time.MutableInterval mutableInterval76 = mutableInterval75.copy();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "2022-02-11T09:40:26.691Z/2022-02-11T09:40:26.691Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "2022-02-11T09:40:26.691Z/2022-02-11T09:40:26.691Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "2022-02-11T09:40:26.691Z/2022-02-11T09:40:26.691Z");
        org.junit.Assert.assertNotNull(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1644572426691L + "'", long16 == 1644572426691L);
        org.junit.Assert.assertNotNull(dateTime17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572426691L + "'", long32 == 1644572426691L);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str72, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(mutableInterval75);
        org.junit.Assert.assertNotNull(mutableInterval76);
    }

    @Test
    public void test03995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03995");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        mutableInterval2.setDurationAfterStart(0L);
        boolean boolean6 = mutableInterval2.equals((java.lang.Object) (-1));
        mutableInterval2.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.Period period10 = mutableInterval2.toPeriod();
        org.joda.time.MutableInterval mutableInterval11 = mutableInterval2.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = mutableInterval14.toPeriod(periodType15);
        java.lang.Object obj17 = mutableInterval14.clone();
        org.joda.time.DateTime dateTime18 = mutableInterval14.getStart();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        mutableInterval21.setDurationAfterStart(0L);
        boolean boolean25 = mutableInterval21.equals((java.lang.Object) (-1));
        long long26 = mutableInterval21.getEndMillis();
        org.joda.time.DateTime dateTime27 = mutableInterval21.getEnd();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        boolean boolean34 = mutableInterval30.overlaps((org.joda.time.ReadableInterval) mutableInterval33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.MutableInterval mutableInterval37 = new org.joda.time.MutableInterval(readableInstant35, readableDuration36);
        mutableInterval37.setDurationAfterStart(0L);
        boolean boolean41 = mutableInterval37.equals((java.lang.Object) (-1));
        long long42 = mutableInterval37.getEndMillis();
        org.joda.time.DateTime dateTime43 = mutableInterval37.getEnd();
        boolean boolean44 = mutableInterval30.isAfter((org.joda.time.ReadableInstant) dateTime43);
        boolean boolean45 = dateTime27.isAfter((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableDuration readableDuration47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readableInstant46, readableDuration47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readableInstant49, readableDuration50);
        boolean boolean52 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadablePeriod readablePeriod53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readablePeriod53, readableInstant54);
        long long56 = mutableInterval55.toDurationMillis();
        boolean boolean57 = mutableInterval51.isAfter((org.joda.time.ReadableInterval) mutableInterval55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        boolean boolean59 = mutableInterval55.contains(readableInstant58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readableInstant60, readableDuration61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readableInstant63, readableDuration64);
        boolean boolean66 = mutableInterval62.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval(readablePeriod67, readableInstant68);
        long long70 = mutableInterval69.toDurationMillis();
        boolean boolean71 = mutableInterval65.isAfter((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        boolean boolean73 = mutableInterval69.contains(readableInstant72);
        boolean boolean74 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval69);
        org.joda.time.Duration duration75 = mutableInterval69.toDuration();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration75);
        boolean boolean77 = mutableInterval14.contains((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Chronology chronology78 = dateTime43.getChronology();
        long long79 = dateTime43.getMillis();
        org.joda.time.DateTimeFieldType dateTimeFieldType80 = null;
        boolean boolean81 = dateTime43.isSupported(dateTimeFieldType80);
        boolean boolean82 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = null;
        boolean boolean84 = dateTime43.isSupported(dateTimeFieldType83);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutableInterval11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(obj17);
// flaky:         org.junit.Assert.assertEquals(obj17.toString(), "2022-02-11T09:40:26.743Z/2022-02-11T09:40:26.743Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "2022-02-11T09:40:26.743Z/2022-02-11T09:40:26.743Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "2022-02-11T09:40:26.743Z/2022-02-11T09:40:26.743Z");
        org.junit.Assert.assertNotNull(dateTime18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1644572426743L + "'", long26 == 1644572426743L);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1644572426743L + "'", long42 == 1644572426743L);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(chronology78);
// flaky:         org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1644572426743L + "'", long79 == 1644572426743L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test03996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03996");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        long long5 = mutableInterval2.getEndMillis();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableDuration readableDuration9 = null;
        org.joda.time.MutableInterval mutableInterval10 = new org.joda.time.MutableInterval(readableInstant8, readableDuration9);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = mutableInterval10.toPeriod(periodType11);
        java.lang.Object obj13 = mutableInterval10.clone();
        org.joda.time.DateTime dateTime14 = mutableInterval10.getStart();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.MutableInterval mutableInterval17 = new org.joda.time.MutableInterval(readableInstant15, readableDuration16);
        mutableInterval17.setDurationAfterStart(0L);
        boolean boolean21 = mutableInterval17.equals((java.lang.Object) (-1));
        long long22 = mutableInterval17.getEndMillis();
        org.joda.time.DateTime dateTime23 = mutableInterval17.getEnd();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readableInstant27, readableDuration28);
        boolean boolean30 = mutableInterval26.overlaps((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.MutableInterval mutableInterval33 = new org.joda.time.MutableInterval(readableInstant31, readableDuration32);
        mutableInterval33.setDurationAfterStart(0L);
        boolean boolean37 = mutableInterval33.equals((java.lang.Object) (-1));
        long long38 = mutableInterval33.getEndMillis();
        org.joda.time.DateTime dateTime39 = mutableInterval33.getEnd();
        boolean boolean40 = mutableInterval26.isAfter((org.joda.time.ReadableInstant) dateTime39);
        boolean boolean41 = dateTime23.isAfter((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableDuration readableDuration46 = null;
        org.joda.time.MutableInterval mutableInterval47 = new org.joda.time.MutableInterval(readableInstant45, readableDuration46);
        boolean boolean48 = mutableInterval44.overlaps((org.joda.time.ReadableInterval) mutableInterval47);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutableInterval mutableInterval51 = new org.joda.time.MutableInterval(readablePeriod49, readableInstant50);
        long long52 = mutableInterval51.toDurationMillis();
        boolean boolean53 = mutableInterval47.isAfter((org.joda.time.ReadableInterval) mutableInterval51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        boolean boolean55 = mutableInterval51.contains(readableInstant54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.MutableInterval mutableInterval61 = new org.joda.time.MutableInterval(readableInstant59, readableDuration60);
        boolean boolean62 = mutableInterval58.overlaps((org.joda.time.ReadableInterval) mutableInterval61);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.MutableInterval mutableInterval65 = new org.joda.time.MutableInterval(readablePeriod63, readableInstant64);
        long long66 = mutableInterval65.toDurationMillis();
        boolean boolean67 = mutableInterval61.isAfter((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        boolean boolean69 = mutableInterval65.contains(readableInstant68);
        boolean boolean70 = mutableInterval51.overlaps((org.joda.time.ReadableInterval) mutableInterval65);
        org.joda.time.Duration duration71 = mutableInterval65.toDuration();
        org.joda.time.MutableInterval mutableInterval72 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = mutableInterval10.contains((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Chronology chronology74 = dateTime39.getChronology();
        org.joda.time.DateTimeField dateTimeField75 = chronology74.millisOfSecond();
        org.joda.time.MutableInterval mutableInterval76 = new org.joda.time.MutableInterval((long) (short) 100, 1644572126418L, chronology74);
        org.joda.time.DateTime dateTime77 = mutableInterval76.getEnd();
        java.lang.String str78 = mutableInterval76.toString();
        org.joda.time.Chronology chronology79 = mutableInterval76.getChronology();
        boolean boolean80 = mutableInterval2.isBefore((org.joda.time.ReadableInterval) mutableInterval76);
        org.joda.time.DateTime dateTime81 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.MutableInterval mutableInterval84 = new org.joda.time.MutableInterval(readableInstant82, readableDuration83);
        org.joda.time.PeriodType periodType85 = null;
        org.joda.time.Period period86 = mutableInterval84.toPeriod(periodType85);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.MutableInterval mutableInterval88 = new org.joda.time.MutableInterval((org.joda.time.ReadablePeriod) period86, readableInstant87);
        boolean boolean89 = mutableInterval88.containsNow();
        mutableInterval88.setDurationAfterStart(1644572155550L);
        boolean boolean92 = dateTime81.equals((java.lang.Object) mutableInterval88);
        org.joda.time.Duration duration93 = mutableInterval88.toDuration();
        java.lang.String str94 = duration93.toString();
        org.junit.Assert.assertNotNull(period4);
// flaky:         org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1644572426768L + "'", long5 == 1644572426768L);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals(obj13.toString(), "2022-02-11T09:40:26.768Z/2022-02-11T09:40:26.768Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "2022-02-11T09:40:26.768Z/2022-02-11T09:40:26.768Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "2022-02-11T09:40:26.768Z/2022-02-11T09:40:26.768Z");
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572426768L + "'", long22 == 1644572426768L);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572426768L + "'", long38 == 1644572426768L);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(chronology74);
        org.junit.Assert.assertNotNull(dateTimeField75);
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z" + "'", str78, "1970-01-01T00:00:00.100Z/2022-02-11T09:35:26.418Z");
        org.junit.Assert.assertNotNull(chronology79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "PT1644572155.550S" + "'", str94, "PT1644572155.550S");
    }

    @Test
    public void test03997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03997");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        boolean boolean6 = mutableInterval2.overlaps((org.joda.time.ReadableInterval) mutableInterval5);
        org.joda.time.Period period7 = mutableInterval5.toPeriod();
        org.joda.time.Chronology chronology8 = mutableInterval5.getChronology();
        org.joda.time.ReadablePartial readablePartial9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long11 = chronology8.set(readablePartial9, 1644572276411L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(chronology8);
    }

    @Test
    public void test03998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03998");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readablePeriod0, readableInstant1);
        long long3 = mutableInterval2.toDurationMillis();
        org.joda.time.Interval interval4 = mutableInterval2.toInterval();
        long long5 = mutableInterval2.toDurationMillis();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableDuration readableDuration7 = null;
        org.joda.time.MutableInterval mutableInterval8 = new org.joda.time.MutableInterval(readableInstant6, readableDuration7);
        mutableInterval8.setDurationAfterStart(0L);
        boolean boolean12 = mutableInterval8.equals((java.lang.Object) (-1));
        mutableInterval8.setInterval((long) (short) -1, (long) (byte) 1);
        org.joda.time.MutableInterval mutableInterval16 = mutableInterval8.copy();
        boolean boolean18 = mutableInterval8.contains(1644572125519L);
        org.joda.time.Chronology chronology19 = mutableInterval8.getChronology();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.MutableInterval mutableInterval22 = new org.joda.time.MutableInterval(readableInstant20, readableDuration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        boolean boolean26 = mutableInterval22.overlaps((org.joda.time.ReadableInterval) mutableInterval25);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.MutableInterval mutableInterval29 = new org.joda.time.MutableInterval(readablePeriod27, readableInstant28);
        long long30 = mutableInterval29.toDurationMillis();
        boolean boolean31 = mutableInterval25.isAfter((org.joda.time.ReadableInterval) mutableInterval29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        boolean boolean33 = mutableInterval29.contains(readableInstant32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        boolean boolean48 = mutableInterval29.overlaps((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.Duration duration49 = mutableInterval43.toDuration();
        boolean boolean50 = mutableInterval8.contains((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval8.contains((org.joda.time.ReadableInterval) mutableInterval53);
        boolean boolean55 = mutableInterval2.contains((org.joda.time.ReadableInterval) mutableInterval53);
        // The following exception was thrown during execution in test generation
        try {
            mutableInterval2.setEndMillis(1644572384764L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(interval4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(mutableInterval16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test03999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03999");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = mutableInterval2.toPeriod(periodType3);
        java.lang.Object obj5 = mutableInterval2.clone();
        org.joda.time.DateTime dateTime6 = mutableInterval2.getStart();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.MutableInterval mutableInterval9 = new org.joda.time.MutableInterval(readableInstant7, readableDuration8);
        mutableInterval9.setDurationAfterStart(0L);
        boolean boolean13 = mutableInterval9.equals((java.lang.Object) (-1));
        long long14 = mutableInterval9.getEndMillis();
        org.joda.time.DateTime dateTime15 = mutableInterval9.getEnd();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableDuration readableDuration17 = null;
        org.joda.time.MutableInterval mutableInterval18 = new org.joda.time.MutableInterval(readableInstant16, readableDuration17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableDuration readableDuration20 = null;
        org.joda.time.MutableInterval mutableInterval21 = new org.joda.time.MutableInterval(readableInstant19, readableDuration20);
        boolean boolean22 = mutableInterval18.overlaps((org.joda.time.ReadableInterval) mutableInterval21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.MutableInterval mutableInterval25 = new org.joda.time.MutableInterval(readableInstant23, readableDuration24);
        mutableInterval25.setDurationAfterStart(0L);
        boolean boolean29 = mutableInterval25.equals((java.lang.Object) (-1));
        long long30 = mutableInterval25.getEndMillis();
        org.joda.time.DateTime dateTime31 = mutableInterval25.getEnd();
        boolean boolean32 = mutableInterval18.isAfter((org.joda.time.ReadableInstant) dateTime31);
        boolean boolean33 = dateTime15.isAfter((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.MutableInterval mutableInterval36 = new org.joda.time.MutableInterval(readableInstant34, readableDuration35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.MutableInterval mutableInterval39 = new org.joda.time.MutableInterval(readableInstant37, readableDuration38);
        boolean boolean40 = mutableInterval36.overlaps((org.joda.time.ReadableInterval) mutableInterval39);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutableInterval mutableInterval43 = new org.joda.time.MutableInterval(readablePeriod41, readableInstant42);
        long long44 = mutableInterval43.toDurationMillis();
        boolean boolean45 = mutableInterval39.isAfter((org.joda.time.ReadableInterval) mutableInterval43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        boolean boolean47 = mutableInterval43.contains(readableInstant46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.MutableInterval mutableInterval50 = new org.joda.time.MutableInterval(readableInstant48, readableDuration49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableDuration readableDuration52 = null;
        org.joda.time.MutableInterval mutableInterval53 = new org.joda.time.MutableInterval(readableInstant51, readableDuration52);
        boolean boolean54 = mutableInterval50.overlaps((org.joda.time.ReadableInterval) mutableInterval53);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.MutableInterval mutableInterval57 = new org.joda.time.MutableInterval(readablePeriod55, readableInstant56);
        long long58 = mutableInterval57.toDurationMillis();
        boolean boolean59 = mutableInterval53.isAfter((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        boolean boolean61 = mutableInterval57.contains(readableInstant60);
        boolean boolean62 = mutableInterval43.overlaps((org.joda.time.ReadableInterval) mutableInterval57);
        org.joda.time.Duration duration63 = mutableInterval57.toDuration();
        org.joda.time.MutableInterval mutableInterval64 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableDuration) duration63);
        boolean boolean65 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Chronology chronology66 = dateTime31.getChronology();
        org.joda.time.DateTimeField dateTimeField67 = chronology66.yearOfCentury();
        org.joda.time.DateTimeField dateTimeField68 = chronology66.dayOfMonth();
        org.joda.time.DateTimeField dateTimeField69 = chronology66.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField70 = chronology66.secondOfDay();
        org.joda.time.DateTimeField dateTimeField71 = chronology66.millisOfSecond();
        org.joda.time.DurationField durationField72 = chronology66.halfdays();
        org.joda.time.Chronology chronology73 = chronology66.withUTC();
        // The following exception was thrown during execution in test generation
        try {
            long long78 = chronology66.getDateTimeMillis((int) (short) 10, (int) (short) 100, 0, 10);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 100 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "2022-02-11T09:40:26.828Z/2022-02-11T09:40:26.828Z");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "2022-02-11T09:40:26.828Z/2022-02-11T09:40:26.828Z");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "2022-02-11T09:40:26.828Z/2022-02-11T09:40:26.828Z");
        org.junit.Assert.assertNotNull(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1644572426828L + "'", long14 == 1644572426828L);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1644572426828L + "'", long30 == 1644572426828L);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(dateTimeField67);
        org.junit.Assert.assertNotNull(dateTimeField68);
        org.junit.Assert.assertNotNull(dateTimeField69);
        org.junit.Assert.assertNotNull(dateTimeField70);
        org.junit.Assert.assertNotNull(dateTimeField71);
        org.junit.Assert.assertNotNull(durationField72);
        org.junit.Assert.assertNotNull(chronology73);
    }

    @Test
    public void test04000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test04000");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.MutableInterval mutableInterval2 = new org.joda.time.MutableInterval(readableInstant0, readableDuration1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.MutableInterval mutableInterval5 = new org.joda.time.MutableInterval(readableInstant3, readableDuration4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = mutableInterval5.toPeriod(periodType6);
        long long8 = mutableInterval5.getEndMillis();
        boolean boolean10 = mutableInterval5.equals((java.lang.Object) ' ');
        long long11 = mutableInterval5.getStartMillis();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.MutableInterval mutableInterval14 = new org.joda.time.MutableInterval(readableInstant12, readableDuration13);
        mutableInterval14.setDurationAfterStart(0L);
        boolean boolean18 = mutableInterval14.equals((java.lang.Object) (-1));
        long long19 = mutableInterval14.getEndMillis();
        org.joda.time.DateTime dateTime20 = mutableInterval14.getEnd();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.MutableInterval mutableInterval23 = new org.joda.time.MutableInterval(readableInstant21, readableDuration22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.MutableInterval mutableInterval26 = new org.joda.time.MutableInterval(readableInstant24, readableDuration25);
        boolean boolean27 = mutableInterval23.overlaps((org.joda.time.ReadableInterval) mutableInterval26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.MutableInterval mutableInterval30 = new org.joda.time.MutableInterval(readableInstant28, readableDuration29);
        mutableInterval30.setDurationAfterStart(0L);
        boolean boolean34 = mutableInterval30.equals((java.lang.Object) (-1));
        long long35 = mutableInterval30.getEndMillis();
        org.joda.time.DateTime dateTime36 = mutableInterval30.getEnd();
        boolean boolean37 = mutableInterval23.isAfter((org.joda.time.ReadableInstant) dateTime36);
        boolean boolean38 = dateTime20.isAfter((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.MutableInterval mutableInterval41 = new org.joda.time.MutableInterval(readableInstant39, readableDuration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableDuration readableDuration43 = null;
        org.joda.time.MutableInterval mutableInterval44 = new org.joda.time.MutableInterval(readableInstant42, readableDuration43);
        boolean boolean45 = mutableInterval41.overlaps((org.joda.time.ReadableInterval) mutableInterval44);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.MutableInterval mutableInterval48 = new org.joda.time.MutableInterval(readablePeriod46, readableInstant47);
        long long49 = mutableInterval48.toDurationMillis();
        boolean boolean50 = mutableInterval44.isAfter((org.joda.time.ReadableInterval) mutableInterval48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        boolean boolean52 = mutableInterval48.contains(readableInstant51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.MutableInterval mutableInterval55 = new org.joda.time.MutableInterval(readableInstant53, readableDuration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableDuration readableDuration57 = null;
        org.joda.time.MutableInterval mutableInterval58 = new org.joda.time.MutableInterval(readableInstant56, readableDuration57);
        boolean boolean59 = mutableInterval55.overlaps((org.joda.time.ReadableInterval) mutableInterval58);
        org.joda.time.ReadablePeriod readablePeriod60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutableInterval mutableInterval62 = new org.joda.time.MutableInterval(readablePeriod60, readableInstant61);
        long long63 = mutableInterval62.toDurationMillis();
        boolean boolean64 = mutableInterval58.isAfter((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        boolean boolean66 = mutableInterval62.contains(readableInstant65);
        boolean boolean67 = mutableInterval48.overlaps((org.joda.time.ReadableInterval) mutableInterval62);
        org.joda.time.Duration duration68 = mutableInterval62.toDuration();
        org.joda.time.MutableInterval mutableInterval69 = new org.joda.time.MutableInterval((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableDuration) duration68);
        mutableInterval5.setStart((org.joda.time.ReadableInstant) dateTime36);
        boolean boolean71 = mutableInterval2.contains((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.ReadableDuration readableDuration73 = null;
        org.joda.time.MutableInterval mutableInterval74 = new org.joda.time.MutableInterval(readableInstant72, readableDuration73);
        mutableInterval74.setDurationAfterStart(0L);
        boolean boolean78 = mutableInterval74.equals((java.lang.Object) (-1));
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableDuration readableDuration80 = null;
        org.joda.time.MutableInterval mutableInterval81 = new org.joda.time.MutableInterval(readableInstant79, readableDuration80);
        mutableInterval81.setDurationAfterStart(0L);
        boolean boolean85 = mutableInterval81.equals((java.lang.Object) (-1));
        mutableInterval81.setInterval((long) (short) -1, (long) (byte) 1);
        boolean boolean89 = mutableInterval74.contains((org.joda.time.ReadableInterval) mutableInterval81);
        java.lang.String str90 = mutableInterval81.toString();
        mutableInterval81.setInterval(1644572166641L, 1644572178138L);
        boolean boolean94 = mutableInterval2.isAfter((org.joda.time.ReadableInterval) mutableInterval81);
        mutableInterval2.setDurationAfterStart(1644572407355L);
        org.junit.Assert.assertNotNull(period7);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1644572426904L + "'", long8 == 1644572426904L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1644572426904L + "'", long11 == 1644572426904L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1644572426904L + "'", long19 == 1644572426904L);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572426904L + "'", long35 == 1644572426904L);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z" + "'", str90, "1969-12-31T23:59:59.999Z/1970-01-01T00:00:00.001Z");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }
}
