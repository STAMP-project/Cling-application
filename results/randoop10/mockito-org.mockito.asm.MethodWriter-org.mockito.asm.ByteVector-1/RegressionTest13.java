import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong(0L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong(1L);
        label0.info = byteVector32;
        java.lang.String str36 = label0.toString();
        java.lang.String str37 = label0.toString();
        java.lang.Object obj38 = null;
        label0.info = obj38;
        label0.info = "L713863537";
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L665184705" + "'", str20, "L665184705");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L665184705" + "'", str36, "L665184705");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L665184705" + "'", str37, "L665184705");
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector4.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector28 = byteVector4.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort(10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L966497915");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (short) 100);
        java.lang.Class<?> wildcardClass31 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1024735804");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putInt(1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1034836120");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1612577973");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt(0);
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putInt(1);
        org.mockito.asm.ByteVector byteVector58 = byteVector50.putInt((-1));
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector73 = byteVector63.putByteArray(byteArray70, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector76 = byteVector58.putByteArray(byteArray70, 1, 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector47.putByteArray(byteArray70, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector82 = byteVector18.putByteArray(byteArray70, (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.Object obj30 = label0.info;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte(100);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector52 = byteVector42.putByteArray(byteArray49, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector35.putByteArray(byteArray49, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector35.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector59 = byteVector35.putLong((-1L));
        label0.info = byteVector35;
        java.lang.String str61 = label0.toString();
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        label62.info = ' ';
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putInt(0);
        label62.info = byteVector69;
        org.mockito.asm.ByteVector byteVector72 = byteVector69.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putLong(0L);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector82 = byteVector78.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector84 = byteVector78.putShort((int) (short) 1);
        label0.info = (short) 1;
        java.lang.Class<?> wildcardClass86 = label0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1 + "'", obj30, 1);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1714723752" + "'", str61, "L1714723752");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putInt(1);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putInt((-1));
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector23 = byteVector13.putByteArray(byteArray20, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector8.putByteArray(byteArray20, 1, 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector8.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt(10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((-1L));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L287997359");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(10);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L1553114348");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putInt((int) ' ');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L460743657" + "'", str20, "L460743657");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        byte[] byteArray3 = null;
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByteArray(byteArray3, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (byte) 0);
        byte[] byteArray9 = null;
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByteArray(byteArray9, 0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putByte(0);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putShort((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L438829987");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong(0L);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("L1815513426");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(100L);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("L2056729389");
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putByte((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putShort(1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector77 = byteVector73.putUTF8("L941510936");
        byte[] byteArray80 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector83 = byteVector73.putByteArray(byteArray80, 0, 1);
        org.mockito.asm.ByteVector byteVector86 = byteVector62.putByteArray(byteArray80, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector89 = byteVector53.putByteArray(byteArray80, (int) (short) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector92 = byteVector18.putByteArray(byteArray80, (int) (short) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt((int) '4');
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector(100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(0);
        label0.info = byteVector34;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1760053066" + "'", str10, "L1760053066");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        label37.info = byteVector44;
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) 100);
        label37.info = byteVector52;
        org.mockito.asm.ByteVector byteVector57 = byteVector52.putShort(1);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) (byte) 10);
        label0.info = (byte) 10;
        java.lang.String str61 = label0.toString();
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        label62.info = ' ';
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putInt(0);
        label62.info = byteVector69;
        org.mockito.asm.ByteVector byteVector72 = byteVector69.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort(1);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector82 = byteVector78.putUTF8("L289255380");
        org.mockito.asm.ByteVector byteVector84 = byteVector78.putShort(0);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector88 = byteVector84.putUTF8("L986988724");
        label0.info = byteVector84;
        java.lang.Class<?> wildcardClass90 = byteVector84.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1062372701" + "'", str10, "L1062372701");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1062372701" + "'", str33, "L1062372701");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1062372701" + "'", str34, "L1062372701");
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1062372701" + "'", str36, "L1062372701");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1062372701" + "'", str61, "L1062372701");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L289255380");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putUTF8("L85310275");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt(1);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte(0);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector68 = byteVector62.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector69 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putShort((-1));
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("hi!");
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector83 = byteVector73.putByteArray(byteArray80, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector86 = byteVector62.putByteArray(byteArray80, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector89 = byteVector55.putByteArray(byteArray80, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector51.putByteArray(byteArray80, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector95 = byteVector28.putByteArray(byteArray80, (int) '#', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        java.lang.Object obj7 = label0.info;
        java.lang.String str8 = label0.toString();
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        label9.info = byteVector16;
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) 100);
        label9.info = byteVector24;
        org.mockito.asm.ByteVector byteVector29 = byteVector24.putShort(100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L90138980");
        java.lang.Class<?> wildcardClass32 = byteVector31.getClass();
        label0.info = wildcardClass32;
        java.lang.Object obj34 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1951349880" + "'", str1, "L1951349880");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1951349880" + "'", str4, "L1951349880");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1951349880" + "'", str5, "L1951349880");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1951349880" + "'", str6, "L1951349880");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 0 + "'", obj7, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L1951349880" + "'", str8, "L1951349880");
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class org.mockito.asm.ByteVector");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class org.mockito.asm.ByteVector");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class org.mockito.asm.ByteVector");
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L504463469");
        byte[] byteArray13 = null;
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByteArray(byteArray13, 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L290860260");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putInt(0);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L101942357");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector22.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt(1);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector81 = byteVector71.putByteArray(byteArray78, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector84 = byteVector60.putByteArray(byteArray78, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector53.putByteArray(byteArray78, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector49.putByteArray(byteArray78, 1, 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector22.putByteArray(byteArray78, 0, 0);
        org.mockito.asm.ByteVector byteVector96 = byteVector5.putByteArray(byteArray78, (int) (short) 1, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector98 = byteVector96.putByte((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt((int) 'a');
        java.lang.Class<?> wildcardClass21 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1318068522");
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putShort((int) '#');
        java.lang.Class<?> wildcardClass23 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L230057508");
        label0.info = byteVector21;
        org.mockito.asm.ByteVector byteVector26 = byteVector21.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector21.putShort((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1684865915" + "'", str9, "L1684865915");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1684865915" + "'", str10, "L1684865915");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte((int) '#');
        java.lang.Class<?> wildcardClass7 = byteVector0.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.String str9 = label8.toString();
        label8.info = (short) 0;
        java.lang.String str12 = label8.toString();
        java.lang.Object obj13 = label8.info;
        java.lang.String str14 = label8.toString();
        label0.info = str14;
        java.lang.String str16 = label0.toString();
        java.lang.String str17 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L789919629" + "'", str1, "L789919629");
        org.junit.Assert.assertNotNull(wildcardClass6);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1826796131" + "'", str9, "L1826796131");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1826796131" + "'", str12, "L1826796131");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 0 + "'", obj13, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1826796131" + "'", str14, "L1826796131");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L789919629" + "'", str16, "L789919629");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L789919629" + "'", str17, "L789919629");
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.Object obj7 = label0.info;
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        label8.info = byteVector15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label8.info = byteVector23;
        org.mockito.asm.ByteVector byteVector28 = byteVector23.putShort(100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort(1);
        label0.info = 1;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte(0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putInt(1);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) (short) 1);
        label0.info = byteVector50;
        java.lang.String str54 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int55 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L594516428" + "'", str1, "L594516428");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L594516428" + "'", str2, "L594516428");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L594516428" + "'", str5, "L594516428");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L594516428" + "'", str54, "L594516428");
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        label0.info = "L499234616";
        java.lang.String str17 = label0.toString();
        java.lang.Object obj18 = label0.info;
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) (short) 0);
        label0.info = byteVector29;
        org.mockito.asm.ByteVector byteVector32 = byteVector29.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector34 = byteVector29.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector29.putUTF8("L1789911328");
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1567702216" + "'", str1, "L1567702216");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1567702216" + "'", str4, "L1567702216");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1567702216" + "'", str17, "L1567702216");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "L499234616" + "'", obj18, "L499234616");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong(100L);
        label0.info = byteVector42;
        java.lang.String str48 = label0.toString();
        java.lang.String str49 = label0.toString();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong(1L);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt(1);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putInt(0);
        label0.info = byteVector66;
        java.lang.Object obj72 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1244424950" + "'", str10, "L1244424950");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1244424950" + "'", str21, "L1244424950");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L1244424950" + "'", str48, "L1244424950");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1244424950" + "'", str49, "L1244424950");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putByte((int) 'a');
        label0.info = byteVector21;
        java.lang.String str29 = label0.toString();
        java.lang.String str30 = label0.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L815469913");
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector49.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putInt((int) (short) 10);
        label0.info = (short) 10;
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        java.lang.String str62 = label61.toString();
        java.lang.Object obj63 = label61.info;
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putUTF8("L90138980");
        label61.info = byteVector72;
        java.lang.Object obj74 = label61.info;
        java.lang.String str75 = label61.toString();
        java.lang.String str76 = label61.toString();
        java.lang.Object obj77 = label61.info;
        label0.info = obj77;
        java.lang.Object obj79 = label0.info;
        java.lang.String str80 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L329747230" + "'", str10, "L329747230");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L329747230" + "'", str12, "L329747230");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L329747230" + "'", str13, "L329747230");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L329747230" + "'", str14, "L329747230");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L329747230" + "'", str29, "L329747230");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L329747230" + "'", str30, "L329747230");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1852233999" + "'", str62, "L1852233999");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(obj74);
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "L1852233999" + "'", str75, "L1852233999");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L1852233999" + "'", str76, "L1852233999");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L329747230" + "'", str80, "L329747230");
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.Object obj36 = label0.info;
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) '4');
        label0.info = '4';
        java.lang.String str43 = label0.toString();
        java.lang.Object obj44 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int45 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L75192852" + "'", str10, "L75192852");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L75192852" + "'", str19, "L75192852");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1) + "'", obj36, (-1));
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L75192852" + "'", str43, "L75192852");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + '4' + "'", obj44, '4');
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        java.lang.String str53 = label0.toString();
        java.lang.Object obj54 = label0.info;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong(1L);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putByte(0);
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putLong((long) 0);
        label0.info = byteVector79;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L248965329" + "'", str1, "L248965329");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L961198947" + "'", str14, "L961198947");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L961198947" + "'", str23, "L961198947");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L248965329" + "'", str53, "L248965329");
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals(obj54.toString(), "L961198947");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "L961198947");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "L961198947");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte(10);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putByte(0);
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L632722587");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putUTF8("L472404892");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L43555262");
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L230057508");
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 100 };
        org.mockito.asm.ByteVector byteVector35 = byteVector27.putByteArray(byteArray32, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector38 = byteVector16.putByteArray(byteArray32, (int) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(byteVector35);
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L1764180548");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L842324770");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1488271901");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong(10L);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putUTF8("L700162450");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int4 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1120407243" + "'", str1, "L1120407243");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L958642863");
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector21 = byteVector13.putUTF8("L637422777");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort(1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putUTF8("L941510936");
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 0, 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector28.putByteArray(byteArray48, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector21.putByteArray(byteArray48, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector60 = byteVector8.putByteArray(byteArray48, 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector29 = byteVector21.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort(10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector31.putByteArray(byteArray52, (int) (short) 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector64 = byteVector20.putByteArray(byteArray52, 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong(0L);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.Object obj25 = label0.info;
        java.lang.String str26 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1344230627" + "'", str1, "L1344230627");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1344230627" + "'", str4, "L1344230627");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "L1311753909" + "'", obj25, "L1311753909");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1344230627" + "'", str26, "L1344230627");
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1024735804");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort(100);
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L2135030495");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putInt(0);
        org.mockito.asm.ByteVector byteVector54 = byteVector48.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector56 = byteVector48.putInt(100);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte(100);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector65.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector60.putByteArray(byteArray79, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector47.putByteArray(byteArray79, (int) (short) 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector94 = byteVector18.putByteArray(byteArray79, 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L500083596");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putLong(0L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte(100);
        label0.info = byteVector27;
        java.lang.String str31 = label0.toString();
        java.lang.Object obj32 = label0.info;
        java.lang.Object obj33 = label0.info;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(0L);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt(10);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (byte) 100);
        label0.info = byteVector55;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1637076684" + "'", str20, "L1637076684");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1637076684" + "'", str31, "L1637076684");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1637076684" + "'", str34, "L1637076684");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putUTF8("L219136701");
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector18.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByte((-1));
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector43.putByte((-1));
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putUTF8("");
        org.mockito.asm.ByteVector byteVector60 = byteVector52.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort(10);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putInt(0);
        org.mockito.asm.ByteVector byteVector71 = byteVector65.putByte(100);
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putUTF8("hi!");
        byte[] byteArray83 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector86 = byteVector76.putByteArray(byteArray83, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector89 = byteVector71.putByteArray(byteArray83, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector62.putByteArray(byteArray83, (int) (short) 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector95 = byteVector51.putByteArray(byteArray83, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector98 = byteVector28.putByteArray(byteArray83, (int) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector95);
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L917649164");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putByte(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putUTF8("L1790624360");
        org.mockito.asm.ByteVector byteVector28 = byteVector18.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1819575973");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1077620725");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L1288163568");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt(10);
        byte[] byteArray25 = null;
        org.mockito.asm.ByteVector byteVector28 = byteVector18.putByteArray(byteArray25, (int) ' ', (int) (short) 1);
        java.lang.Class<?> wildcardClass29 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        label30.info = byteVector37;
        java.lang.Object obj39 = label30.info;
        java.lang.Object obj40 = label30.info;
        java.lang.Object obj41 = label30.info;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) 100);
        label30.info = byteVector52;
        org.mockito.asm.ByteVector byteVector57 = byteVector52.putUTF8("L556295696");
        label0.info = byteVector52;
        java.lang.String str59 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int60 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1982254414" + "'", str59, "L1982254414");
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label23.info;
        java.lang.Object obj55 = label23.info;
        org.mockito.asm.Label label56 = new org.mockito.asm.Label();
        java.lang.String str57 = label56.toString();
        label56.info = (short) 0;
        java.lang.String str60 = label56.toString();
        java.lang.String str61 = label56.toString();
        java.lang.String str62 = label56.toString();
        java.lang.String str63 = label56.toString();
        java.lang.Object obj64 = label56.info;
        java.lang.Object obj65 = label56.info;
        label23.info = label56;
        java.lang.Class<?> wildcardClass67 = label23.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1185367501" + "'", str22, "L1185367501");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1) + "'", obj54, (-1));
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1) + "'", obj55, (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L1208932763" + "'", str57, "L1208932763");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L1208932763" + "'", str60, "L1208932763");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1208932763" + "'", str61, "L1208932763");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1208932763" + "'", str62, "L1208932763");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1208932763" + "'", str63, "L1208932763");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 0 + "'", obj64, (short) 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 0 + "'", obj65, (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        byte[] byteArray31 = null;
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putByteArray(byteArray31, (int) (byte) 100, 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putByte((int) (short) 1);
        label0.info = byteVector30;
        // The following exception was thrown during execution in test generation
        try {
            int int38 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1885104547" + "'", str10, "L1885104547");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1885104547" + "'", str19, "L1885104547");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1885104547" + "'", str20, "L1885104547");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1885104547" + "'", str21, "L1885104547");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector13 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector15 = byteVector7.putLong(10L);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt(100);
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putLong((long) 'a');
        label0.info = byteVector23;
        java.lang.Object obj25 = label0.info;
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        label26.info = byteVector33;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) 100);
        label26.info = byteVector41;
        java.lang.Object obj45 = label26.info;
        java.lang.String str46 = label26.toString();
        label26.info = 100L;
        java.lang.Object obj49 = label26.info;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong(1L);
        label26.info = byteVector58;
        org.mockito.asm.ByteVector byteVector63 = byteVector58.putLong((long) 100);
        label0.info = 100;
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putShort((-1));
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putInt(1);
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector87 = byteVector83.putUTF8("L102640438");
        org.mockito.asm.ByteVector byteVector89 = byteVector87.putInt((-1));
        org.mockito.asm.ByteVector byteVector91 = byteVector89.putInt(1);
        org.mockito.asm.ByteVector byteVector93 = byteVector91.putUTF8("L1344739236");
        label0.info = byteVector93;
        org.mockito.asm.ByteVector byteVector96 = byteVector93.putInt((-1));
        org.mockito.asm.ByteVector byteVector98 = byteVector96.putUTF8("L1623213647");
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L19766584" + "'", str1, "L19766584");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L19766584" + "'", str4, "L19766584");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L19766584" + "'", str5, "L19766584");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L19766584" + "'", str6, "L19766584");
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(obj45);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1921761355" + "'", str46, "L1921761355");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong(100L);
        label0.info = byteVector42;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putByte((int) (byte) 100);
        java.lang.Class<?> wildcardClass59 = byteVector52.getClass();
        label0.info = byteVector52;
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putUTF8("");
        org.mockito.asm.ByteVector byteVector69 = byteVector61.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putInt((int) (byte) 0);
        label0.info = (byte) 0;
        java.lang.Object obj73 = label0.info;
        java.lang.String str74 = label0.toString();
        java.lang.String str75 = label0.toString();
        java.lang.Class<?> wildcardClass76 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L853249974" + "'", str10, "L853249974");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L853249974" + "'", str21, "L853249974");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L853249974" + "'", str74, "L853249974");
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "L853249974" + "'", str75, "L853249974");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1599450691");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1373879230");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.String str14 = label0.toString();
        java.lang.Object obj15 = label0.info;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort(0);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L212441124");
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putInt(1);
        org.mockito.asm.ByteVector byteVector44 = byteVector36.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector36.putShort((int) '4');
        label0.info = byteVector36;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1466578881" + "'", str1, "L1466578881");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1466578881" + "'", str14, "L1466578881");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L190384593");
        label0.info = byteVector34;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong(0L);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector51;
        org.mockito.asm.ByteVector byteVector56 = byteVector51.putUTF8("L334258890");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt(10);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putLong(100L);
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putByte((int) ' ');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L2052594728" + "'", str11, "L2052594728");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L2052594728" + "'", str36, "L2052594728");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putByte(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) '#');
        label0.info = '#';
        java.lang.String str42 = label0.toString();
        java.lang.Object obj43 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int44 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L39986282" + "'", str10, "L39986282");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L39986282" + "'", str42, "L39986282");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + '#' + "'", obj43, '#');
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putUTF8("L2111816718");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putInt((int) ' ');
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putUTF8("L429124580");
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putUTF8("L74649782");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(10);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) (short) -1);
        byte[] byteArray32 = null;
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putByteArray(byteArray32, (int) (short) -1, (int) '4');
        byte[] byteArray36 = null;
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putByteArray(byteArray36, (int) (byte) 1, (int) '4');
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong(0L);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putShort(0);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putInt(0);
        org.mockito.asm.ByteVector byteVector69 = byteVector63.putByte(100);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector69.putByteArray(byteArray81, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector60.putByteArray(byteArray81, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector93 = byteVector35.putByteArray(byteArray81, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector96 = byteVector20.putByteArray(byteArray81, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector99 = byteVector12.putByteArray(byteArray81, (int) (byte) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(10);
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.Object obj30 = label0.info;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte(100);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector52 = byteVector42.putByteArray(byteArray49, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector35.putByteArray(byteArray49, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector35.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector59 = byteVector35.putLong((-1L));
        label0.info = byteVector35;
        java.lang.Object obj61 = label0.info;
        java.lang.Object obj62 = label0.info;
        label0.info = "L85310275";
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1 + "'", obj30, 1);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("L1248128540");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) 'a');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte(1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putLong((long) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort(1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1764180548");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt(0);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte(100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector58 = byteVector48.putByteArray(byteArray55, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector41.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector64 = byteVector32.putByteArray(byteArray55, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector25.putByteArray(byteArray55, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector70 = byteVector10.putByteArray(byteArray55, (int) (short) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 10);
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 1);
        label0.info = byteVector44;
        java.lang.Object obj48 = label0.info;
        java.lang.String str49 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int50 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1320016825" + "'", str10, "L1320016825");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1320016825" + "'", str19, "L1320016825");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1320016825" + "'", str49, "L1320016825");
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L1538211092");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.Object obj7 = label0.info;
        java.lang.String str8 = label0.toString();
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        label9.info = ' ';
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt(0);
        label9.info = byteVector16;
        org.mockito.asm.ByteVector byteVector19 = byteVector16.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort(1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (byte) 1);
        label0.info = byteVector23;
        java.lang.String str27 = label0.toString();
        java.lang.Object obj28 = label0.info;
        java.lang.String str29 = label0.toString();
        java.lang.Object obj30 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int31 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L558279435" + "'", str1, "L558279435");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L558279435" + "'", str2, "L558279435");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L558279435" + "'", str5, "L558279435");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L558279435" + "'", str8, "L558279435");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L558279435" + "'", str27, "L558279435");
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L558279435" + "'", str29, "L558279435");
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L1772805750");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 1);
        label0.info = byteVector33;
        java.lang.String str35 = label0.toString();
        label0.info = "L1429640973";
        java.lang.String str38 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int39 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1943789821" + "'", str1, "L1943789821");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1943789821" + "'", str15, "L1943789821");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1943789821" + "'", str16, "L1943789821");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1943789821" + "'", str19, "L1943789821");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "L1404822831" + "'", obj20, "L1404822831");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1943789821" + "'", str35, "L1943789821");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1943789821" + "'", str38, "L1943789821");
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector4.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L1505302579");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1247554185");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putInt(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1167115696");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt((int) 'a');
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("L214295336");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1265380824");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((-1L));
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putInt((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        java.lang.String str53 = label4.toString();
        java.lang.Object obj54 = label4.info;
        java.lang.Object obj55 = label4.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L743985898" + "'", str1, "L743985898");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L319043917" + "'", str14, "L319043917");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L319043917" + "'", str23, "L319043917");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L319043917" + "'", str53, "L319043917");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(0);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector26.putByte((-1));
        label0.info = byteVector26;
        org.mockito.asm.ByteVector byteVector37 = byteVector26.putInt((int) '#');
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1882945709" + "'", str1, "L1882945709");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(100);
        label0.info = byteVector33;
        java.lang.Object obj35 = label0.info;
        java.lang.String str36 = label0.toString();
        java.lang.String str37 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L500391075" + "'", str1, "L500391075");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L500391075" + "'", str16, "L500391075");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L500391075" + "'", str36, "L500391075");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L500391075" + "'", str37, "L500391075");
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong(10L);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        java.lang.Object obj62 = label0.info;
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong(0L);
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector81 = byteVector75.putByte(1);
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector85 = byteVector81.putByte((int) (short) 1);
        label0.info = byteVector85;
        java.lang.String str87 = label0.toString();
        java.lang.String str88 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1146301175" + "'", str20, "L1146301175");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1849245769" + "'", str59, "L1849245769");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L1849245769");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L1849245769");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L1849245769");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L1146301175" + "'", str87, "L1146301175");
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "L1146301175" + "'", str88, "L1146301175");
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        byte[] byteArray9 = null;
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByteArray(byteArray9, (int) (byte) 100, 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L88262203");
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putByte(100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L157527163");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort(100);
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector58 = byteVector50.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector50.putShort(1);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte(100);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector65.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector50.putByteArray(byteArray79, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector91 = byteVector37.putByteArray(byteArray79, (int) (short) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector94 = byteVector16.putByteArray(byteArray79, (int) (byte) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        label16.info = byteVector23;
        java.lang.Object obj25 = label16.info;
        java.lang.String str26 = label16.toString();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putShort((int) (byte) 10);
        label16.info = byteVector33;
        java.lang.Object obj35 = label16.info;
        java.lang.Object obj36 = label16.info;
        java.lang.String str37 = label16.toString();
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector38.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) ' ');
        label16.info = byteVector46;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte(10);
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putLong(100L);
        label16.info = byteVector58;
        java.lang.Object obj64 = label16.info;
        label0.info = label16;
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector88 = byteVector84.putLong(10L);
        org.mockito.asm.ByteVector byteVector90 = byteVector88.putInt((int) '4');
        label16.info = '4';
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2087036497" + "'", str10, "L2087036497");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L2087036497" + "'", str12, "L2087036497");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2087036497" + "'", str15, "L2087036497");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L198143907" + "'", str26, "L198143907");
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L198143907" + "'", str37, "L198143907");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        label22.info = byteVector29;
        java.lang.Object obj31 = label22.info;
        java.lang.Object obj32 = label22.info;
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        java.lang.String str34 = label33.toString();
        java.lang.Object obj35 = label33.info;
        java.lang.Class<?> wildcardClass36 = label33.getClass();
        label22.info = wildcardClass36;
        java.lang.String str38 = label22.toString();
        java.lang.Class<?> wildcardClass39 = label22.getClass();
        label0.info = label22;
        java.lang.Object obj41 = label0.info;
        java.lang.Object obj42 = label0.info;
        java.lang.String str43 = label0.toString();
        java.lang.Object obj44 = label0.info;
        java.lang.Object obj45 = label0.info;
        java.lang.String str46 = label0.toString();
        java.lang.Object obj47 = label0.info;
        java.lang.Object obj48 = label0.info;
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putLong(1L);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putUTF8("L720028705");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putLong((long) (short) -1);
        label0.info = byteVector59;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1430346276" + "'", str10, "L1430346276");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1430346276" + "'", str19, "L1430346276");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1284862471" + "'", str34, "L1284862471");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L324698571" + "'", str38, "L324698571");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj41);
// flaky:         org.junit.Assert.assertEquals(obj41.toString(), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "L324698571");
        org.junit.Assert.assertNotNull(obj42);
// flaky:         org.junit.Assert.assertEquals(obj42.toString(), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "L324698571");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1430346276" + "'", str43, "L1430346276");
        org.junit.Assert.assertNotNull(obj44);
// flaky:         org.junit.Assert.assertEquals(obj44.toString(), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "L324698571");
        org.junit.Assert.assertNotNull(obj45);
// flaky:         org.junit.Assert.assertEquals(obj45.toString(), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "L324698571");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1430346276" + "'", str46, "L1430346276");
        org.junit.Assert.assertNotNull(obj47);
// flaky:         org.junit.Assert.assertEquals(obj47.toString(), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "L324698571");
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "L324698571");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "L324698571");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putByte(100);
        label0.info = byteVector21;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector58 = byteVector48.putByteArray(byteArray55, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector39.putByteArray(byteArray55, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector64 = byteVector21.putByteArray(byteArray55, (int) '#', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L389710056" + "'", str1, "L389710056");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L389710056" + "'", str4, "L389710056");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L389710056" + "'", str5, "L389710056");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1630230037");
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort(1);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L941510936");
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector31 = byteVector21.putByteArray(byteArray28, 0, 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector6.putByteArray(byteArray28, (int) (short) 1, 1);
        org.mockito.asm.ByteVector byteVector36 = byteVector6.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L740545468");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt(0);
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putInt(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector21.putInt((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector21.putShort(10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt(100);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putByte((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putByte((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort(1);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putUTF8("L941510936");
        byte[] byteArray83 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector86 = byteVector76.putByteArray(byteArray83, 0, 1);
        org.mockito.asm.ByteVector byteVector89 = byteVector61.putByteArray(byteArray83, (int) (short) 1, 1);
        org.mockito.asm.ByteVector byteVector92 = byteVector52.putByteArray(byteArray83, 0, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector95 = byteVector31.putByteArray(byteArray83, 1, 1);
        org.mockito.asm.ByteVector byteVector98 = byteVector18.putByteArray(byteArray83, (int) (short) 0, 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector95);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str18 = label0.toString();
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L489526948" + "'", str1, "L489526948");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L489526948" + "'", str18, "L489526948");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "hi!" + "'", obj19, "hi!");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "hi!" + "'", obj20, "hi!");
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("L769754150");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putUTF8("L1910093133");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putByte((int) (byte) 10);
        label0.info = (byte) 10;
        java.lang.Class<?> wildcardClass65 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1426211039" + "'", str3, "L1426211039");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L189960121" + "'", str14, "L189960121");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L189960121" + "'", str23, "L189960121");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L189960121" + "'", str26, "L189960121");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L1076743862");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.Object obj32 = null;
        label0.info = obj32;
        label0.info = "L1509753383";
        java.lang.String str36 = label0.toString();
        java.lang.String str37 = label0.toString();
        java.lang.Object obj38 = label0.info;
        java.lang.Object obj39 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L917877930" + "'", str10, "L917877930");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L917877930" + "'", str36, "L917877930");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L917877930" + "'", str37, "L917877930");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "L1509753383" + "'", obj38, "L1509753383");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "L1509753383" + "'", obj39, "L1509753383");
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong(0L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1261027065");
        java.lang.Class<?> wildcardClass15 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) (byte) 100);
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        java.lang.Object obj14 = label0.info;
        label0.info = "L2070984853";
        java.lang.String str17 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L975342299" + "'", str1, "L975342299");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L975342299" + "'", str17, "L975342299");
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        label0.info = "L880552843";
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L79595828" + "'", str10, "L79595828");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L79595828" + "'", str19, "L79595828");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L79595828" + "'", str22, "L79595828");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong(0L);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putUTF8("L642148014");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(1L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong(0L);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putUTF8("L1126122622");
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((-1));
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector63.putByteArray(byteArray79, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector88 = byteVector50.putByteArray(byteArray79, 0, 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector35.putByteArray(byteArray79, (int) (short) 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector94 = byteVector16.putByteArray(byteArray79, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((-1));
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L713879861");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L596369166");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector41 = byteVector31.putByteArray(byteArray38, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector44 = byteVector26.putByteArray(byteArray38, (int) '#', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putShort(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        java.lang.Class<?> wildcardClass26 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L577031285" + "'", str19, "L577031285");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L577031285" + "'", str24, "L577031285");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        java.lang.String str27 = label0.toString();
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong((long) ' ');
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort(100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("L1154477694");
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putUTF8("L1325221534");
        label0.info = byteVector70;
        java.lang.Class<?> wildcardClass72 = byteVector70.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1074234403" + "'", str10, "L1074234403");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1074234403" + "'", str27, "L1074234403");
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putLong(100L);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putInt(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1167115696");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L2025840233");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putByte(100);
        java.lang.Class<?> wildcardClass31 = byteVector30.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        java.lang.Object obj45 = label0.info;
        java.lang.Object obj46 = label0.info;
        java.lang.String str47 = label0.toString();
        java.lang.String str48 = label0.toString();
        java.lang.Object obj49 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1514536124" + "'", str3, "L1514536124");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1785808452" + "'", str14, "L1785808452");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1785808452" + "'", str23, "L1785808452");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1785808452" + "'", str26, "L1785808452");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1514536124" + "'", str47, "L1514536124");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L1514536124" + "'", str48, "L1514536124");
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("L1490315191");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L1895503513");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label12.info = byteVector37;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '4');
        label12.info = byteVector43;
        java.lang.String str45 = label12.toString();
        java.lang.Object obj46 = label12.info;
        java.lang.Object obj47 = label12.info;
        label0.info = label12;
        org.mockito.asm.Label label49 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        label49.info = byteVector56;
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putLong((long) 100);
        label49.info = byteVector64;
        java.lang.Object obj68 = label49.info;
        java.lang.String str69 = label49.toString();
        label49.info = 100L;
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector72.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong(1L);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putByte((int) (short) 100);
        label49.info = (short) 100;
        java.lang.Object obj88 = label49.info;
        java.lang.String str89 = label49.toString();
        label0.info = label49;
        label0.info = "L665755819";
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1290729554" + "'", str1, "L1290729554");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L268514820" + "'", str22, "L268514820");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L268514820" + "'", str45, "L268514820");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1959610502" + "'", str69, "L1959610502");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (short) 100 + "'", obj88, (short) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L1959610502" + "'", str89, "L1959610502");
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(10);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort(1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L352914859" + "'", str20, "L352914859");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort(0);
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.String str19 = label5.toString();
        java.lang.Object obj20 = label5.info;
        label5.info = "L1578164401";
        label0.info = "L1578164401";
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1277663449" + "'", str1, "L1277663449");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1277663449" + "'", str2, "L1277663449");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1277663449" + "'", str4, "L1277663449");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L322820187" + "'", str6, "L322820187");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L322820187" + "'", str19, "L322820187");
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        java.lang.Class<?> wildcardClass38 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L653332030" + "'", str22, "L653332030");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L653332030" + "'", str36, "L653332030");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(0);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector26.putByte((-1));
        label0.info = byteVector26;
        org.mockito.asm.ByteVector byteVector37 = byteVector26.putUTF8("L1685416416");
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L819726507" + "'", str1, "L819726507");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        label8.info = byteVector15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label8.info = byteVector23;
        java.lang.Object obj27 = label8.info;
        java.lang.Object obj28 = label8.info;
        java.lang.Object obj29 = label8.info;
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L922707703");
        label8.info = byteVector40;
        java.lang.Class<?> wildcardClass42 = byteVector40.getClass();
        label0.info = byteVector40;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort(100);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector56.putInt((int) (short) -1);
        label0.info = byteVector56;
        org.mockito.asm.ByteVector byteVector69 = byteVector56.putUTF8("L940563630");
        java.lang.Class<?> wildcardClass70 = byteVector69.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L689893506" + "'", str1, "L689893506");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        java.lang.Class<?> wildcardClass23 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) -1);
        byte[] byteArray17 = null;
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByteArray(byteArray17, 0, (int) (short) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L66240205");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putInt(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort(1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L941510936");
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector52 = byteVector42.putByteArray(byteArray49, 0, 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector29.putByteArray(byteArray49, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector58 = byteVector22.putByteArray(byteArray49, 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L289255380");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector26 = byteVector16.putLong((long) (-1));
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort(10);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putLong(100L);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt(0);
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putShort(10);
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort(1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putUTF8("L941510936");
        byte[] byteArray42 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector45 = byteVector35.putByteArray(byteArray42, 0, 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector20.putByteArray(byteArray42, (int) (short) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector51 = byteVector13.putByteArray(byteArray42, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.String str36 = label0.toString();
        java.lang.String str37 = label0.toString();
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector38.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector38.putUTF8("hi!");
        java.lang.Class<?> wildcardClass47 = byteVector38.getClass();
        label0.info = byteVector38;
        java.lang.Object obj49 = label0.info;
        java.lang.String str50 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int51 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L680580825" + "'", str10, "L680580825");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L680580825" + "'", str19, "L680580825");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L680580825" + "'", str36, "L680580825");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L680580825" + "'", str37, "L680580825");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L680580825" + "'", str50, "L680580825");
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L502368273");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putLong((long) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.String str23 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L118154341" + "'", str10, "L118154341");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L118154341" + "'", str19, "L118154341");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L118154341" + "'", str22, "L118154341");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L118154341" + "'", str23, "L118154341");
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (short) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("L940563630");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector7 = byteVector1.putUTF8("L1273218889");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort(100);
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector22.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector22.putShort(1);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte(100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector54 = byteVector44.putByteArray(byteArray51, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector37.putByteArray(byteArray51, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector22.putByteArray(byteArray51, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector63 = byteVector7.putByteArray(byteArray51, (int) (short) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) (short) 100);
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.Object obj30 = label0.info;
        java.lang.Object obj31 = label0.info;
        java.lang.Object obj32 = label0.info;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.String str35 = label0.toString();
        java.lang.String str36 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int37 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1 + "'", obj30, 1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1 + "'", obj31, 1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1 + "'", obj32, 1);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L414153337" + "'", str33, "L414153337");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L414153337" + "'", str34, "L414153337");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L414153337" + "'", str35, "L414153337");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L414153337" + "'", str36, "L414153337");
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        label55.info = byteVector62;
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putLong((long) 100);
        label55.info = byteVector70;
        java.lang.Object obj74 = label55.info;
        java.lang.Object obj75 = label55.info;
        java.lang.Object obj76 = label55.info;
        label0.info = label55;
        java.lang.Object obj78 = label0.info;
        java.lang.String str79 = label0.toString();
        java.lang.String str80 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1727754653" + "'", str10, "L1727754653");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1727754653" + "'", str19, "L1727754653");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1687129012" + "'", str30, "L1687129012");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals(obj78.toString(), "L1789873690");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "L1789873690");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "L1789873690");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L1727754653" + "'", str79, "L1727754653");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L1727754653" + "'", str80, "L1727754653");
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L190384593");
        label0.info = byteVector34;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong(0L);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector51;
        java.lang.String str55 = label0.toString();
        java.lang.Class<?> wildcardClass56 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L118324745" + "'", str11, "L118324745");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L118324745" + "'", str36, "L118324745");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L118324745" + "'", str55, "L118324745");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L2018367344");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        java.lang.Object obj31 = label12.info;
        java.lang.String str32 = label12.toString();
        label12.info = 100L;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("hi!");
        label12.info = byteVector43;
        label0.info = label12;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("L1551169447");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt(0);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) 1);
        label12.info = byteVector53;
        java.lang.String str57 = label12.toString();
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("L993883100");
        label12.info = byteVector74;
        java.lang.String str76 = label12.toString();
        java.lang.String str77 = label12.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L158959125" + "'", str1, "L158959125");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L336256229" + "'", str32, "L336256229");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L336256229" + "'", str57, "L336256229");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L336256229" + "'", str76, "L336256229");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L336256229" + "'", str77, "L336256229");
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putUTF8("L1313512217");
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) -1);
        byte[] byteArray24 = null;
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putByteArray(byteArray24, (int) (short) -1, (int) '4');
        byte[] byteArray28 = null;
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putByteArray(byteArray28, (int) (byte) 1, (int) '4');
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong(0L);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putShort(0);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putInt(0);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putByte(100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector61.putByteArray(byteArray73, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector52.putByteArray(byteArray73, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector27.putByteArray(byteArray73, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector7.putByteArray(byteArray73, (int) (short) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt((int) (byte) 100);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector41 = byteVector27.putByteArray(byteArray38, (int) (byte) 1, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector44 = byteVector14.putByteArray(byteArray38, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector46 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector48 = byteVector14.putInt((int) (short) 0);
        java.lang.Class<?> wildcardClass49 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) 'a');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector7 = byteVector1.putUTF8("L513182391");
        org.mockito.asm.ByteVector byteVector9 = byteVector1.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector1.putShort(10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(10);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector42.putByteArray(byteArray54, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector33.putByteArray(byteArray54, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector22.putByteArray(byteArray54, 0, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector68 = byteVector22.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putUTF8("L66737708");
        java.lang.Class<?> wildcardClass73 = byteVector68.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.Object obj7 = label0.info;
        java.lang.String str8 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L79339250" + "'", str1, "L79339250");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L79339250" + "'", str4, "L79339250");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L79339250" + "'", str5, "L79339250");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 0 + "'", obj7, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L79339250" + "'", str8, "L79339250");
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L1764180548");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putUTF8("L1460087672");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt(100);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L374832530");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putInt(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putInt(1);
        org.mockito.asm.ByteVector byteVector57 = byteVector49.putInt((-1));
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putByteArray(byteArray69, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector57.putByteArray(byteArray69, 1, 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector46.putByteArray(byteArray69, (int) (byte) 0, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector33.putByteArray(byteArray69, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector22.putByteArray(byteArray69, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L1295568222");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((-1L));
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort(1);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putUTF8("L941510936");
        byte[] byteArray60 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector63 = byteVector53.putByteArray(byteArray60, 0, 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector40.putByteArray(byteArray60, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector33.putByteArray(byteArray60, 0, 0);
        org.mockito.asm.ByteVector byteVector72 = byteVector12.putByteArray(byteArray60, 0, 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putShort((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong(0L);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (short) 100);
        label0.info = byteVector40;
        java.lang.Object obj44 = label0.info;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putShort((int) '4');
        label0.info = byteVector61;
        java.lang.Object obj63 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L819827566" + "'", str1, "L819827566");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L819827566" + "'", str15, "L819827566");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L819827566" + "'", str16, "L819827566");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "L1404822831" + "'", obj19, "L1404822831");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(0L);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte(10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L785233520");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putInt((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L1505302579");
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putUTF8("L281063096");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        java.lang.Object obj5 = label0.info;
        label0.info = "L1627933715";
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) '#');
        label0.info = byteVector20;
        java.lang.Object obj24 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L426662008" + "'", str3, "L426662008");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L426662008" + "'", str4, "L426662008");
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + ' ' + "'", obj5, ' ');
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L46931455");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1717731948");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (byte) 1);
        label0.info = (byte) 1;
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        label9.info = byteVector16;
        java.lang.Object obj18 = label9.info;
        java.lang.String str19 = label9.toString();
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (byte) 10);
        label9.info = byteVector26;
        java.lang.String str28 = label9.toString();
        java.lang.String str29 = label9.toString();
        label0.info = label9;
        java.lang.String str31 = label0.toString();
        java.lang.String str32 = label0.toString();
        java.lang.Object obj33 = label0.info;
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L744125442" + "'", str19, "L744125442");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L744125442" + "'", str28, "L744125442");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L744125442" + "'", str29, "L744125442");
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L699724727" + "'", str31, "L699724727");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L699724727" + "'", str32, "L699724727");
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "L744125442");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "L744125442");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "L744125442");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.Object obj5 = label0.info;
        java.lang.Object obj6 = label0.info;
        java.lang.String str7 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1938849859" + "'", str1, "L1938849859");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 0 + "'", obj5, (short) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L1938849859" + "'", str7, "L1938849859");
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        label22.info = byteVector29;
        java.lang.Object obj31 = label22.info;
        java.lang.String str32 = label22.toString();
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label22.info = "hi!";
        java.lang.Object obj37 = label22.info;
        label0.info = obj37;
        java.lang.String str39 = label0.toString();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putLong(1L);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("L1851898008");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong((long) (-1));
        label0.info = byteVector62;
        // The following exception was thrown during execution in test generation
        try {
            int int64 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L617505283" + "'", str10, "L617505283");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L617505283" + "'", str19, "L617505283");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L617505283" + "'", str20, "L617505283");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L617505283" + "'", str21, "L617505283");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L153128528" + "'", str32, "L153128528");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "hi!" + "'", obj37, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L617505283" + "'", str39, "L617505283");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((-1));
        byte[] byteArray13 = null;
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putByteArray(byteArray13, 1, (int) (byte) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector8.putShort((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putByte(100);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector41 = byteVector31.putByteArray(byteArray38, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector44 = byteVector26.putByteArray(byteArray38, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector47 = byteVector17.putByteArray(byteArray38, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector50 = byteVector0.putByteArray(byteArray38, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L1767457406");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        java.lang.String str17 = label0.toString();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong(0L);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt(10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1338754817");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putInt(0);
        label0.info = 0;
        java.lang.String str48 = label0.toString();
        java.lang.Object obj49 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L371067463" + "'", str1, "L371067463");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L371067463" + "'", str4, "L371067463");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L371067463" + "'", str17, "L371067463");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L371067463" + "'", str48, "L371067463");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0 + "'", obj49, 0);
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L497125127");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) -1);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByteArray(byteArray11, (int) (short) -1, (int) '4');
        byte[] byteArray15 = null;
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByteArray(byteArray15, (int) (byte) 1, (int) '4');
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(0L);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putInt(0);
        org.mockito.asm.ByteVector byteVector48 = byteVector42.putByte(100);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector63 = byteVector53.putByteArray(byteArray60, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector48.putByteArray(byteArray60, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector39.putByteArray(byteArray60, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector14.putByteArray(byteArray60, (int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass73 = byteArray60.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L190384593");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putByte(10);
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector22.putLong((long) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((-1L));
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt(0);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putUTF8("L941510936");
        byte[] byteArray45 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector48 = byteVector38.putByteArray(byteArray45, 0, 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector25.putByteArray(byteArray45, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector54 = byteVector18.putByteArray(byteArray45, 0, 0);
        org.mockito.asm.ByteVector byteVector56 = byteVector18.putByte(10);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putInt((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 1);
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        label38.info = ' ';
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putInt(0);
        label38.info = byteVector45;
        org.mockito.asm.ByteVector byteVector48 = byteVector45.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort(1);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putInt((int) (short) 1);
        label0.info = byteVector52;
        java.lang.String str58 = label0.toString();
        java.lang.String str59 = label0.toString();
        java.lang.Object obj60 = label0.info;
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((int) ' ');
        label0.info = ' ';
        java.lang.String str77 = label0.toString();
        java.lang.Object obj78 = label0.info;
        org.mockito.asm.ByteVector byteVector80 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putShort((int) (byte) -1);
        label0.info = (byte) -1;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1899195016" + "'", str22, "L1899195016");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1899195016" + "'", str36, "L1899195016");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L1899195016" + "'", str58, "L1899195016");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1899195016" + "'", str59, "L1899195016");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1899195016" + "'", str77, "L1899195016");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + ' ' + "'", obj78, ' ');
        org.junit.Assert.assertNotNull(byteVector82);
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 100);
        label0.info = byteVector40;
        // The following exception was thrown during execution in test generation
        try {
            int int44 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1073724382" + "'", str10, "L1073724382");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1073724382" + "'", str21, "L1073724382");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        java.lang.Object obj10 = label7.info;
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putLong((long) 'a');
        label7.info = byteVector15;
        java.lang.String str23 = label7.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        label24.info = ' ';
        java.lang.String str27 = label24.toString();
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label28.info = byteVector35;
        java.lang.Object obj37 = label28.info;
        java.lang.String str38 = label28.toString();
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) (byte) 10);
        label28.info = byteVector45;
        java.lang.String str47 = label28.toString();
        label28.info = '4';
        java.lang.String str50 = label28.toString();
        java.lang.Object obj51 = label28.info;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putByte((-1));
        label28.info = byteVector62;
        label24.info = byteVector62;
        java.lang.Object obj69 = label24.info;
        label7.info = label24;
        java.lang.Object obj71 = label24.info;
        label0.info = label24;
        java.lang.Object obj73 = label0.info;
        java.lang.Object obj74 = label0.info;
        java.lang.String str75 = label0.toString();
        java.lang.String str76 = label0.toString();
        org.mockito.asm.ByteVector byteVector77 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector81 = byteVector77.putShort((-1));
        org.mockito.asm.ByteVector byteVector83 = byteVector77.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector87 = byteVector83.putLong((-1L));
        java.lang.Class<?> wildcardClass88 = byteVector87.getClass();
        label0.info = byteVector87;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1541505632" + "'", str1, "L1541505632");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1541505632" + "'", str5, "L1541505632");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1541505632" + "'", str6, "L1541505632");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + ' ' + "'", obj10, ' ');
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L305239645" + "'", str23, "L305239645");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1135437070" + "'", str27, "L1135437070");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(obj37);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1053532041" + "'", str38, "L1053532041");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1053532041" + "'", str47, "L1053532041");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L1053532041" + "'", str50, "L1053532041");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + '4' + "'", obj51, '4');
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals(obj73.toString(), "L1135437070");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "L1135437070");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "L1135437070");
        org.junit.Assert.assertNotNull(obj74);
// flaky:         org.junit.Assert.assertEquals(obj74.toString(), "L1135437070");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "L1135437070");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "L1135437070");
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "L1541505632" + "'", str75, "L1541505632");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L1541505632" + "'", str76, "L1541505632");
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label23.info;
        java.lang.Object obj55 = label23.info;
        java.lang.Object obj56 = label23.info;
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        label57.info = byteVector64;
        java.lang.Object obj66 = label57.info;
        java.lang.String str67 = label57.toString();
        java.lang.Object obj68 = label57.info;
        java.lang.String str69 = label57.toString();
        java.lang.String str70 = label57.toString();
        java.lang.Object obj71 = label57.info;
        java.lang.Object obj72 = label57.info;
        java.lang.Object obj73 = label57.info;
        label23.info = label57;
        java.lang.Object obj75 = label57.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L2116988428" + "'", str22, "L2116988428");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1) + "'", obj54, (-1));
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1) + "'", obj55, (-1));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1) + "'", obj56, (-1));
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(obj66);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1625182028" + "'", str67, "L1625182028");
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1625182028" + "'", str69, "L1625182028");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1625182028" + "'", str70, "L1625182028");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte(100);
        label0.info = byteVector27;
        java.lang.Object obj31 = label0.info;
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.String str33 = label32.toString();
        java.lang.String str34 = label32.toString();
        java.lang.Object obj35 = label32.info;
        java.lang.Object obj36 = label32.info;
        java.lang.String str37 = label32.toString();
        java.lang.Object obj38 = label32.info;
        java.lang.Object obj39 = label32.info;
        label0.info = label32;
        java.lang.Object obj41 = label32.info;
        java.lang.String str42 = label32.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int43 = label32.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1509087904" + "'", str20, "L1509087904");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1941123270" + "'", str33, "L1941123270");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1941123270" + "'", str34, "L1941123270");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1941123270" + "'", str37, "L1941123270");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1941123270" + "'", str42, "L1941123270");
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L338502703");
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.String str23 = label0.toString();
        java.lang.Object obj24 = label0.info;
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putInt(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putByte(100);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector31.putByteArray(byteArray43, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector51 = byteVector31.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector31.putLong(0L);
        org.mockito.asm.ByteVector byteVector55 = byteVector31.putShort((int) (short) 100);
        label0.info = byteVector55;
        // The following exception was thrown during execution in test generation
        try {
            int int57 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1369025578" + "'", str10, "L1369025578");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1369025578" + "'", str22, "L1369025578");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1369025578" + "'", str23, "L1369025578");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L596369166");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1326847257");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        java.lang.Object obj12 = label0.info;
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(0L);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector30 = byteVector27.putByte(0);
        org.mockito.asm.ByteVector byteVector32 = byteVector27.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector27.putUTF8("L115620301");
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1586742161" + "'", str1, "L1586742161");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putUTF8("L1102599342");
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L102057911");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong(100L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L935502469");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        java.lang.Object obj21 = label19.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L90138980");
        label19.info = byteVector30;
        java.lang.Object obj32 = label19.info;
        java.lang.Object obj33 = label19.info;
        java.lang.Object obj34 = null;
        label19.info = obj34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        label19.info = byteVector44;
        org.mockito.asm.ByteVector byteVector47 = byteVector44.putLong(100L);
        label0.info = byteVector47;
        java.lang.String str49 = label0.toString();
        java.lang.String str50 = label0.toString();
        java.lang.String str51 = label0.toString();
        java.lang.Object obj52 = label0.info;
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong(0L);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector75 = byteVector67.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector67.putLong((long) 1);
        label0.info = byteVector77;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2099338045" + "'", str10, "L2099338045");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L701809310" + "'", str20, "L701809310");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L2099338045" + "'", str49, "L2099338045");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L2099338045" + "'", str50, "L2099338045");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L2099338045" + "'", str51, "L2099338045");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L938130691");
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (byte) 1);
        label0.info = (byte) 1;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt(1);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 1);
        java.lang.Class<?> wildcardClass30 = byteVector27.getClass();
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector36.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector50 = byteVector36.putUTF8("L404307374");
        org.mockito.asm.ByteVector byteVector52 = byteVector36.putShort((int) 'a');
        label0.info = 'a';
        // The following exception was thrown during execution in test generation
        try {
            int int54 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 10);
        java.lang.Class<?> wildcardClass19 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        label22.info = ' ';
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putInt(0);
        label22.info = byteVector29;
        org.mockito.asm.ByteVector byteVector32 = byteVector29.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector34 = byteVector29.putInt(10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (byte) 10);
        label0.info = byteVector34;
        org.mockito.asm.ByteVector byteVector41 = byteVector34.putUTF8("L1520137154");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L795725749" + "'", str10, "L795725749");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L795725749" + "'", str19, "L795725749");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L795725749" + "'", str20, "L795725749");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L425042592");
        java.lang.Class<?> wildcardClass19 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        label7.info = byteVector14;
        java.lang.Object obj16 = label7.info;
        java.lang.String str17 = label7.toString();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putShort((int) (byte) 10);
        label7.info = byteVector24;
        java.lang.Object obj26 = label7.info;
        java.lang.Object obj27 = label7.info;
        java.lang.String str28 = label7.toString();
        java.lang.String str29 = label7.toString();
        label0.info = str29;
        java.lang.Object obj31 = label0.info;
        java.lang.Object obj32 = label0.info;
        java.lang.Object obj33 = label0.info;
        java.lang.Class<?> wildcardClass34 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L653780893" + "'", str1, "L653780893");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L653780893" + "'", str4, "L653780893");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L653780893" + "'", str5, "L653780893");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1773606017" + "'", str17, "L1773606017");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1773606017" + "'", str28, "L1773606017");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1773606017" + "'", str29, "L1773606017");
// flaky:         org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "L1773606017" + "'", obj31, "L1773606017");
// flaky:         org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "L1773606017" + "'", obj32, "L1773606017");
// flaky:         org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "L1773606017" + "'", obj33, "L1773606017");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L307448941");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        byte[] byteArray3 = null;
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByteArray(byteArray3, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector2.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector2.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector2.putUTF8("L624339748");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L327667548");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1700168050");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L504463469");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L1824599804");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putInt((int) (byte) 0);
        label0.info = byteVector34;
        org.mockito.asm.ByteVector byteVector37 = byteVector34.putUTF8("L1815513426");
        org.mockito.asm.ByteVector byteVector39 = byteVector34.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort(0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1943282425" + "'", str10, "L1943282425");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1943282425" + "'", str19, "L1943282425");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1943282425" + "'", str22, "L1943282425");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        label0.info = "L203921615";
        org.mockito.asm.Label label44 = new org.mockito.asm.Label();
        java.lang.String str45 = label44.toString();
        label44.info = (short) 0;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label44.info = byteVector54;
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        label58.info = byteVector65;
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putLong((long) 100);
        label58.info = byteVector73;
        java.lang.Object obj77 = label58.info;
        java.lang.Object obj78 = label58.info;
        label44.info = obj78;
        label0.info = label44;
        java.lang.String str81 = label44.toString();
        java.lang.String str82 = label44.toString();
        java.lang.Object obj83 = label44.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1719554894" + "'", str45, "L1719554894");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1719554894" + "'", str81, "L1719554894");
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L1719554894" + "'", str82, "L1719554894");
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L1906462973");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L815469913");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector18.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L290208516");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L828521738");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector30 = byteVector20.putUTF8("L1058395030");
        org.mockito.asm.ByteVector byteVector32 = byteVector20.putInt((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1556222019");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L1954609726");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        label55.info = byteVector62;
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putLong((long) 100);
        label55.info = byteVector70;
        java.lang.Object obj74 = label55.info;
        java.lang.Object obj75 = label55.info;
        java.lang.Object obj76 = label55.info;
        label0.info = label55;
        java.lang.String str78 = label55.toString();
        java.lang.Object obj79 = label55.info;
        java.lang.Object obj80 = label55.info;
        label55.info = "L1513469438";
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1411607184" + "'", str10, "L1411607184");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1411607184" + "'", str19, "L1411607184");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1331324810" + "'", str30, "L1331324810");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L1393990310" + "'", str78, "L1393990310");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L922707703");
        label0.info = byteVector32;
        java.lang.Object obj34 = label0.info;
        java.lang.Object obj35 = label0.info;
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        label36.info = ' ';
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putInt(0);
        label36.info = byteVector43;
        org.mockito.asm.ByteVector byteVector46 = byteVector43.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong(0L);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putUTF8("L1584637390");
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putUTF8("L1028290656");
        label0.info = "L1028290656";
        java.lang.Class<?> wildcardClass54 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        org.mockito.asm.ByteVector byteVector6 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) (byte) -1);
        label0.info = byteVector14;
        org.mockito.asm.ByteVector byteVector21 = byteVector14.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong(10L);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte(1);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt(100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L1315225980");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1760527479");
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector66 = byteVector56.putByteArray(byteArray63, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray63, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector40.putByteArray(byteArray63, 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector75 = byteVector14.putByteArray(byteArray63, 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L300651850" + "'", str1, "L300651850");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L300651850" + "'", str5, "L300651850");
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L784929642");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1768078245");
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.Object obj28 = label0.info;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong(1L);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector53;
        java.lang.Object obj55 = label0.info;
        java.lang.Class<?> wildcardClass56 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L90713114" + "'", str1, "L90713114");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L90713114" + "'", str15, "L90713114");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L90713114" + "'", str16, "L90713114");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1214772427" + "'", str26, "L1214772427");
// flaky:         org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "L1214772427" + "'", obj28, "L1214772427");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L1787183750");
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putUTF8("L2078423645");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.String str36 = label0.toString();
        java.lang.String str37 = label0.toString();
        label0.info = "L1536184104";
        java.lang.String str40 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1192192982" + "'", str10, "L1192192982");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1192192982" + "'", str19, "L1192192982");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1192192982" + "'", str36, "L1192192982");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1192192982" + "'", str37, "L1192192982");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1192192982" + "'", str40, "L1192192982");
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        java.lang.String str23 = label0.toString();
        java.lang.Object obj24 = label0.info;
        java.lang.Object obj25 = label0.info;
        label0.info = "L1512500028";
        java.lang.String str28 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L188179277" + "'", str20, "L188179277");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L188179277" + "'", str23, "L188179277");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L188179277" + "'", str28, "L188179277");
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putShort((-1));
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L707148353" + "'", str10, "L707148353");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L101942357");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1841666469");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort(1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(1L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) 1);
        label0.info = byteVector23;
        org.mockito.asm.ByteVector byteVector32 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector23.putUTF8("L357546667");
        java.lang.Class<?> wildcardClass35 = byteVector23.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1498974072" + "'", str1, "L1498974072");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 0);
        label0.info = (short) 0;
        java.lang.String str27 = label0.toString();
        java.lang.Object obj28 = label0.info;
        label0.info = "L1091898525";
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putInt((int) (short) 10);
        byte[] byteArray42 = null;
        org.mockito.asm.ByteVector byteVector45 = byteVector35.putByteArray(byteArray42, (int) (byte) 1, 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) '4');
        label0.info = byteVector49;
        java.lang.Object obj51 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int52 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1970806353" + "'", str10, "L1970806353");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1970806353" + "'", str12, "L1970806353");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1970806353" + "'", str27, "L1970806353");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 0 + "'", obj28, (short) 0);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L535796510");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putUTF8("L2100370187");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        label7.info = byteVector14;
        org.mockito.asm.ByteVector byteVector17 = byteVector14.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        label0.info = byteVector19;
        java.lang.Object obj23 = label0.info;
        java.lang.Object obj24 = label0.info;
        java.lang.String str25 = label0.toString();
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        java.lang.String str27 = label26.toString();
        java.lang.Object obj28 = label26.info;
        java.lang.Object obj29 = label26.info;
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        label30.info = byteVector37;
        java.lang.Object obj39 = label30.info;
        java.lang.String str40 = label30.toString();
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putShort((int) (byte) 10);
        label30.info = byteVector47;
        java.lang.String str49 = label30.toString();
        label30.info = '4';
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putLong((long) (-1));
        label30.info = (-1);
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector76 = byteVector70.putLong((long) (short) 10);
        label30.info = byteVector76;
        label26.info = label30;
        org.mockito.asm.ByteVector byteVector80 = new org.mockito.asm.ByteVector((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector84 = byteVector80.putShort(10);
        label30.info = byteVector84;
        label0.info = label30;
        java.lang.Object obj87 = label30.info;
        org.mockito.asm.ByteVector byteVector88 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector90 = byteVector88.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector92 = byteVector88.putShort((-1));
        org.mockito.asm.ByteVector byteVector94 = byteVector92.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector96 = byteVector92.putUTF8("L1311753909");
        label30.info = byteVector92;
        // The following exception was thrown during execution in test generation
        try {
            int int98 = label30.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1285720543" + "'", str1, "L1285720543");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1285720543" + "'", str4, "L1285720543");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1285720543" + "'", str5, "L1285720543");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1285720543" + "'", str25, "L1285720543");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L177492362" + "'", str27, "L177492362");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(obj39);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L354284854" + "'", str40, "L354284854");
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L354284854" + "'", str49, "L354284854");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector94);
        org.junit.Assert.assertNotNull(byteVector96);
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (-1));
        byte[] byteArray9 = null;
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByteArray(byteArray9, (int) (byte) 100, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putInt((int) (byte) 0);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        java.lang.String str7 = label0.toString();
        java.lang.Object obj8 = label0.info;
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.String str10 = label9.toString();
        label9.info = (short) 0;
        java.lang.String str13 = label9.toString();
        java.lang.String str14 = label9.toString();
        java.lang.Object obj15 = label9.info;
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label16.info = ' ';
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector26 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        label9.info = byteVector28;
        java.lang.Object obj32 = label9.info;
        java.lang.Object obj33 = label9.info;
        java.lang.Object obj34 = label9.info;
        label0.info = label9;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        label37.info = byteVector44;
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) 100);
        label37.info = byteVector52;
        java.lang.String str56 = label37.toString();
        java.lang.Object obj57 = label37.info;
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector(1);
        label37.info = byteVector59;
        java.lang.String str61 = label37.toString();
        java.lang.Object obj62 = label37.info;
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putShort(100);
        org.mockito.asm.ByteVector byteVector81 = byteVector75.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector83 = byteVector75.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector85 = byteVector75.putShort(1);
        label37.info = byteVector85;
        java.lang.Object obj87 = label37.info;
        label0.info = label37;
        java.lang.Class<?> wildcardClass89 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1738926297" + "'", str1, "L1738926297");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1738926297" + "'", str5, "L1738926297");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1738926297" + "'", str6, "L1738926297");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L1738926297" + "'", str7, "L1738926297");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 0 + "'", obj8, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L686436576" + "'", str10, "L686436576");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L686436576" + "'", str13, "L686436576");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L686436576" + "'", str14, "L686436576");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 0 + "'", obj15, (short) 0);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1738926297" + "'", str36, "L1738926297");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1061579951" + "'", str56, "L1061579951");
        org.junit.Assert.assertNotNull(obj57);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1061579951" + "'", str61, "L1061579951");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) (short) 1);
        java.lang.Class<?> wildcardClass13 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L993883100");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L1025130750");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putLong(100L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L2122702398");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong(100L);
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = label0.info;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 'a');
        label0.info = 'a';
        // The following exception was thrown during execution in test generation
        try {
            int int31 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L718702889" + "'", str10, "L718702889");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "hi!" + "'", obj17, "hi!");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L718702889" + "'", str19, "L718702889");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "hi!" + "'", obj20, "hi!");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L855288385");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L478016394");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L1857085294");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1346744948");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong(0L);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = label0.info;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector67 = byteVector57.putByteArray(byteArray64, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector57.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector57.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("L788907338");
        label20.info = "L788907338";
        label0.info = label20;
        java.lang.String str76 = label20.toString();
        java.lang.String str77 = label20.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int78 = label20.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1881036640" + "'", str30, "L1881036640");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L1881036640" + "'", str76, "L1881036640");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1881036640" + "'", str77, "L1881036640");
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(100);
        label0.info = byteVector33;
        org.mockito.asm.ByteVector byteVector36 = byteVector33.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector44 = byteVector38.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector46 = byteVector38.putUTF8("L1725191379");
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1985251624" + "'", str1, "L1985251624");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1985251624" + "'", str16, "L1985251624");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1570058745");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector4.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector28 = byteVector4.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector4.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector32 = byteVector4.putUTF8("L1538021467");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        java.lang.Object obj12 = label0.info;
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(0L);
        label0.info = byteVector27;
        java.lang.Object obj29 = null;
        label0.info = obj29;
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        java.lang.String str32 = label31.toString();
        java.lang.Object obj33 = label31.info;
        java.lang.Object obj34 = label31.info;
        java.lang.Object obj35 = label31.info;
        label0.info = label31;
        label31.info = "L1412540007";
        // The following exception was thrown during execution in test generation
        try {
            int int39 = label31.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1708876750" + "'", str1, "L1708876750");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L2095503935" + "'", str32, "L2095503935");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1764240190");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L496442657");
        java.lang.Class<?> wildcardClass21 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putByte(100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte(10);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(100L);
        label0.info = byteVector36;
        label0.info = "L484427935";
        java.lang.String str40 = label0.toString();
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt(100);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector57 = byteVector49.putUTF8("L1029732739");
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putInt(1);
        org.mockito.asm.ByteVector byteVector61 = byteVector49.putUTF8("");
        label0.info = byteVector61;
        java.lang.String str63 = label0.toString();
        java.lang.Object obj64 = label0.info;
        java.lang.String str65 = label0.toString();
        java.lang.Object obj66 = label0.info;
        java.lang.Object obj67 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int68 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2135036401" + "'", str10, "L2135036401");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L2135036401" + "'", str19, "L2135036401");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L2135036401" + "'", str22, "L2135036401");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L2135036401" + "'", str40, "L2135036401");
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L2135036401" + "'", str63, "L2135036401");
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L2135036401" + "'", str65, "L2135036401");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByte((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (-1));
        byte[] byteArray9 = null;
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByteArray(byteArray9, (int) (byte) 100, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 100);
        label5.info = byteVector60;
        java.lang.Object obj64 = label5.info;
        java.lang.Object obj65 = label5.info;
        java.lang.Object obj66 = null;
        label5.info = obj66;
        java.lang.String str68 = label5.toString();
        java.lang.Object obj69 = label5.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1157161212" + "'", str1, "L1157161212");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1157161212" + "'", str2, "L1157161212");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1157161212" + "'", str4, "L1157161212");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1246149409" + "'", str6, "L1246149409");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1246149409" + "'", str20, "L1246149409");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1246149409" + "'", str21, "L1246149409");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L842431367" + "'", str31, "L842431367");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "L1246149409" + "'", str68, "L1246149409");
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        java.lang.String str55 = label0.toString();
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector72 = byteVector66.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector74 = byteVector66.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putShort((int) (short) 10);
        label0.info = byteVector74;
        java.lang.String str78 = label0.toString();
        java.lang.Object obj79 = label0.info;
        label0.info = "L238708842";
        java.lang.String str82 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int83 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1273131524" + "'", str10, "L1273131524");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1273131524" + "'", str19, "L1273131524");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1376719397" + "'", str30, "L1376719397");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L1273131524" + "'", str55, "L1273131524");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L1273131524" + "'", str78, "L1273131524");
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L1273131524" + "'", str82, "L1273131524");
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) (short) 10);
        label0.info = (short) 10;
        java.lang.Object obj26 = label0.info;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt(0);
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putByte(100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        java.lang.Class<?> wildcardClass36 = byteVector33.getClass();
        label0.info = byteVector33;
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putInt(1);
        label0.info = byteVector50;
        java.lang.Object obj52 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2065964831" + "'", str1, "L2065964831");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector4.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1920381208");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putByte((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort(1);
        label0.info = 1;
        java.lang.Object obj17 = label0.info;
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong(0L);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (short) 1);
        label0.info = (short) 1;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L697967040" + "'", str1, "L697967040");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L697967040" + "'", str4, "L697967040");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1 + "'", obj17, 1);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.String str23 = label0.toString();
        java.lang.String str24 = label0.toString();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong(0L);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt(10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt(10);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putByte((int) (short) 1);
        label0.info = byteVector51;
        java.lang.Object obj53 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1624396995" + "'", str10, "L1624396995");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1624396995" + "'", str22, "L1624396995");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1624396995" + "'", str23, "L1624396995");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1624396995" + "'", str24, "L1624396995");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L339971864");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong((long) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.Object obj32 = null;
        label0.info = obj32;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(0L);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort(0);
        label0.info = byteVector55;
        org.mockito.asm.ByteVector byteVector58 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector60 = byteVector55.putInt((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L467475626" + "'", str10, "L467475626");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L467475626" + "'", str34, "L467475626");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str18 = label0.toString();
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int23 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L752160438" + "'", str1, "L752160438");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L752160438" + "'", str18, "L752160438");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "hi!" + "'", obj19, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L752160438" + "'", str20, "L752160438");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "hi!" + "'", obj21, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L752160438" + "'", str22, "L752160438");
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        label0.info = "L732392118";
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        label13.info = (short) 0;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label13.info = byteVector23;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putInt((int) (short) 10);
        label13.info = (short) 10;
        java.lang.Object obj39 = label13.info;
        label0.info = label13;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1313530776" + "'", str9, "L1313530776");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1313530776" + "'", str12, "L1313530776");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1900728346" + "'", str14, "L1900728346");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong(0L);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putByte((int) '4');
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("L1101244843");
        java.lang.Class<?> wildcardClass9 = byteVector8.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L629144017");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt(100);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector38 = byteVector30.putUTF8("L1029732739");
        label0.info = byteVector30;
        java.lang.String str40 = label0.toString();
        java.lang.String str41 = label0.toString();
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putLong(10L);
        label0.info = byteVector58;
        label0.info = "L915802134";
        java.lang.String str62 = label0.toString();
        java.lang.String str63 = label0.toString();
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putInt(0);
        org.mockito.asm.ByteVector byteVector70 = byteVector64.putInt(1);
        org.mockito.asm.ByteVector byteVector72 = byteVector64.putShort((int) ' ');
        label0.info = byteVector72;
        // The following exception was thrown during execution in test generation
        try {
            int int74 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1868544074" + "'", str10, "L1868544074");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1868544074" + "'", str19, "L1868544074");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1868544074" + "'", str20, "L1868544074");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1868544074" + "'", str21, "L1868544074");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1868544074" + "'", str40, "L1868544074");
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L1868544074" + "'", str41, "L1868544074");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1868544074" + "'", str62, "L1868544074");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1868544074" + "'", str63, "L1868544074");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort(10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(100);
        java.lang.Class<?> wildcardClass38 = byteVector35.getClass();
        label0.info = wildcardClass38;
        java.lang.String str40 = label0.toString();
        java.lang.String str41 = label0.toString();
        java.lang.String str42 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1723975623" + "'", str19, "L1723975623");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1723975623" + "'", str24, "L1723975623");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(wildcardClass38);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1723975623" + "'", str40, "L1723975623");
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L1723975623" + "'", str41, "L1723975623");
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1723975623" + "'", str42, "L1723975623");
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) 'a');
        java.lang.Class<?> wildcardClass21 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putUTF8("L1814945802");
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putUTF8("L487216289");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L40895705");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L146811067");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 10);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, (int) (byte) 1, 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1968915822");
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L1567272448");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort(100);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L323425812");
        java.lang.Class<?> wildcardClass27 = byteVector26.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(1L);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("L873743500");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putLong(1L);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector69 = byteVector63.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector63.putByteArray(byteArray81, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector56.putByteArray(byteArray81, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector48.putByteArray(byteArray81, 0, 1);
        org.mockito.asm.ByteVector byteVector96 = byteVector41.putByteArray(byteArray81, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector99 = byteVector16.putByteArray(byteArray81, 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putByte((int) '4');
        byte[] byteArray21 = null;
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByteArray(byteArray21, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L509727998");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        label0.info = "L1673143499";
        java.lang.Object obj21 = label0.info;
        java.lang.Object obj22 = label0.info;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putUTF8("L1082024160");
        org.mockito.asm.ByteVector byteVector35 = byteVector27.putUTF8("L1019757226");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (short) 1);
        label0.info = (short) 1;
        java.lang.Class<?> wildcardClass41 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1525827648" + "'", str10, "L1525827648");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "L1673143499" + "'", obj21, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "L1673143499" + "'", obj22, "L1673143499");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong(100L);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong(10L);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte(1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector69 = byteVector59.putByteArray(byteArray66, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector50.putByteArray(byteArray66, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector33.putByteArray(byteArray66, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector78 = byteVector18.putByteArray(byteArray66, (int) (short) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putLong((-1L));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1506838059");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putUTF8("L1102599342");
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putByte(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = byteVector26.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L761195025");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putLong(100L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("L1318068522");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((-1));
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector65 = byteVector55.putByteArray(byteArray62, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector44.putByteArray(byteArray62, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector37.putByteArray(byteArray62, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector33.putByteArray(byteArray62, 1, 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector10.putByteArray(byteArray62, (int) (short) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector80 = byteVector8.putByteArray(byteArray62, 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putInt((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L991542451" + "'", str20, "L991542451");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong(0L);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L479210684");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putUTF8("L603888960");
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putShort(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L1787183750");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong((long) (-1));
        java.lang.Class<?> wildcardClass19 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) 'a');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putUTF8("L1669961023");
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putLong(10L);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("L367940775");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(1L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) 1);
        label0.info = byteVector23;
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        label31.info = byteVector38;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) 100);
        label31.info = byteVector46;
        java.lang.Object obj50 = label31.info;
        java.lang.Object obj51 = label31.info;
        java.lang.Object obj52 = label31.info;
        java.lang.String str53 = label31.toString();
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putInt(0);
        org.mockito.asm.ByteVector byteVector60 = byteVector54.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass65 = byteVector64.getClass();
        label31.info = byteVector64;
        java.lang.String str67 = label31.toString();
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putByte(0);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putLong(1L);
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector80 = byteVector74.putInt((int) (byte) 1);
        label31.info = byteVector74;
        java.lang.String str82 = label31.toString();
        java.lang.Object obj83 = label31.info;
        java.lang.Object obj84 = label31.info;
        java.lang.Object obj85 = label31.info;
        java.lang.Object obj86 = label31.info;
        label0.info = obj86;
        java.lang.Class<?> wildcardClass88 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L27408797" + "'", str1, "L27408797");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L723400874" + "'", str53, "L723400874");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(wildcardClass65);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L723400874" + "'", str67, "L723400874");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L723400874" + "'", str82, "L723400874");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong(0L);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(0);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putLong(100L);
        label0.info = byteVector40;
        java.lang.String str48 = label0.toString();
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putLong(0L);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putLong((long) 1);
        label0.info = byteVector67;
        java.lang.String str71 = label0.toString();
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putByte((int) (short) 10);
        label0.info = byteVector84;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L951767004" + "'", str19, "L951767004");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L951767004" + "'", str48, "L951767004");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "L951767004" + "'", str71, "L951767004");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt(100);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector38 = byteVector30.putUTF8("L1029732739");
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector41 = byteVector30.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector30.putShort((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L458427539" + "'", str10, "L458427539");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L458427539" + "'", str19, "L458427539");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L458427539" + "'", str20, "L458427539");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L458427539" + "'", str21, "L458427539");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong(100L);
        label0.info = byteVector42;
        java.lang.String str48 = label0.toString();
        java.lang.String str49 = label0.toString();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong(1L);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt(1);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putInt(0);
        label0.info = byteVector66;
        org.mockito.asm.ByteVector byteVector73 = byteVector66.putByte(1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putLong((long) '#');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2082019651" + "'", str10, "L2082019651");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L2082019651" + "'", str21, "L2082019651");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L2082019651" + "'", str48, "L2082019651");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L2082019651" + "'", str49, "L2082019651");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) (short) 0);
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        java.lang.Object obj62 = label0.info;
        label0.info = 0L;
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector65.putUTF8("");
        org.mockito.asm.ByteVector byteVector73 = byteVector65.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putByte(100);
        java.lang.Class<?> wildcardClass76 = byteVector75.getClass();
        label0.info = byteVector75;
        label0.info = "L1873228566";
        java.lang.Object obj80 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int81 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L27576926" + "'", str20, "L27576926");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L2113038749" + "'", str59, "L2113038749");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L2113038749");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L2113038749");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L2113038749");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "L1873228566" + "'", obj80, "L1873228566");
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L102640438");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L1873424742");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte(10);
        byte[] byteArray19 = null;
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByteArray(byteArray19, 1, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (short) 100);
        java.lang.Class<?> wildcardClass25 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong(100L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) (short) -1);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 10);
        label0.info = byteVector12;
        org.mockito.asm.ByteVector byteVector19 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector21 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector23 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector12.putByte((int) '4');
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L908870660" + "'", str1, "L908870660");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L190384593");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(1);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector26.putByte(100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1162955630");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong(0L);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (short) 100);
        label0.info = byteVector40;
        org.mockito.asm.Label label44 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        label44.info = byteVector51;
        java.lang.Object obj53 = label44.info;
        java.lang.String str54 = label44.toString();
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong(1L);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) (short) 100);
        label44.info = byteVector69;
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putInt((int) '4');
        label44.info = byteVector75;
        java.lang.String str77 = label44.toString();
        java.lang.String str78 = label44.toString();
        java.lang.Object obj79 = label44.info;
        java.lang.String str80 = label44.toString();
        label0.info = label44;
        java.lang.Object obj82 = label0.info;
        org.mockito.asm.ByteVector byteVector83 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector89 = byteVector85.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector89.putByte((-1));
        org.mockito.asm.ByteVector byteVector93 = byteVector89.putShort(1);
        org.mockito.asm.ByteVector byteVector95 = byteVector93.putByte((int) (byte) 1);
        label0.info = (byte) 1;
        // The following exception was thrown during execution in test generation
        try {
            int int97 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2060325189" + "'", str1, "L2060325189");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2060325189" + "'", str15, "L2060325189");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L2060325189" + "'", str16, "L2060325189");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "L1404822831" + "'", obj19, "L1404822831");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L844746395" + "'", str54, "L844746395");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L844746395" + "'", str77, "L844746395");
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L844746395" + "'", str78, "L844746395");
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L844746395" + "'", str80, "L844746395");
        org.junit.Assert.assertNotNull(obj82);
// flaky:         org.junit.Assert.assertEquals(obj82.toString(), "L844746395");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "L844746395");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "L844746395");
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector95);
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        java.lang.String str54 = label53.toString();
        java.lang.Object obj55 = label53.info;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putUTF8("L90138980");
        label53.info = byteVector64;
        java.lang.Object obj66 = label53.info;
        java.lang.Object obj67 = label53.info;
        java.lang.Object obj68 = null;
        label53.info = obj68;
        java.lang.String str70 = label53.toString();
        label4.info = label53;
        java.lang.String str72 = label4.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int73 = label4.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2020927309" + "'", str1, "L2020927309");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1324066034" + "'", str14, "L1324066034");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1324066034" + "'", str23, "L1324066034");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L582180317" + "'", str54, "L582180317");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L582180317" + "'", str70, "L582180317");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L1324066034" + "'", str72, "L1324066034");
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 1);
        label0.info = (byte) 1;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putByte(1);
        org.mockito.asm.ByteVector byteVector59 = byteVector51.putByte((int) ' ');
        label0.info = byteVector51;
        java.lang.String str61 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L84101116" + "'", str1, "L84101116");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L84101116" + "'", str15, "L84101116");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L84101116" + "'", str16, "L84101116");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L84101116" + "'", str61, "L84101116");
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("L1551169447");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("L979041976");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector9 = byteVector3.putByte((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        org.mockito.asm.ByteVector byteVector6 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) (byte) -1);
        label0.info = byteVector14;
        java.lang.String str20 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L513961520" + "'", str1, "L513961520");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L513961520" + "'", str5, "L513961520");
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L513961520" + "'", str20, "L513961520");
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = label0.info;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (byte) 0);
        label0.info = (byte) 0;
        // The following exception was thrown during execution in test generation
        try {
            int int42 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L321534629");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((-1L));
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong(0L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L761195025");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putByte((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = label0.info;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector67 = byteVector57.putByteArray(byteArray64, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector57.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector57.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("L788907338");
        label20.info = "L788907338";
        label0.info = label20;
        label20.info = "L1431802735";
        java.lang.Object obj78 = label20.info;
        java.lang.Object obj79 = label20.info;
        java.lang.String str80 = label20.toString();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L30596333" + "'", str30, "L30596333");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "L1431802735" + "'", obj78, "L1431802735");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "L1431802735" + "'", obj79, "L1431802735");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L30596333" + "'", str80, "L30596333");
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L1029732739");
        org.mockito.asm.ByteVector byteVector18 = byteVector8.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector8.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector8.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L556295696");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte(100);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector63 = byteVector53.putByteArray(byteArray60, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector46.putByteArray(byteArray60, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector37.putByteArray(byteArray60, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector72 = byteVector30.putByteArray(byteArray60, (int) '4', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putLong((long) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        label0.info = "L2115642939";
        java.lang.Object obj24 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L982780099" + "'", str10, "L982780099");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L982780099" + "'", str19, "L982780099");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L982780099" + "'", str20, "L982780099");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L982780099" + "'", str21, "L982780099");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "L2115642939" + "'", obj24, "L2115642939");
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) 0);
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        label17.info = byteVector24;
        org.mockito.asm.ByteVector byteVector27 = byteVector24.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1295568222");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((-1L));
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putByte((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort(1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putUTF8("L941510936");
        byte[] byteArray77 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector80 = byteVector70.putByteArray(byteArray77, 0, 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector57.putByteArray(byteArray77, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector86 = byteVector50.putByteArray(byteArray77, 0, 0);
        org.mockito.asm.ByteVector byteVector89 = byteVector29.putByteArray(byteArray77, 0, 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector16.putByteArray(byteArray77, (int) (short) 0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.Object obj12 = label0.info;
        java.lang.String str13 = label0.toString();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (short) -1);
        label0.info = byteVector20;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L211229092" + "'", str10, "L211229092");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L211229092" + "'", str13, "L211229092");
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putInt((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        label7.info = byteVector14;
        org.mockito.asm.ByteVector byteVector17 = byteVector14.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        label0.info = byteVector19;
        org.mockito.asm.ByteVector byteVector24 = byteVector19.putUTF8("L364607495");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) '#');
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1340837050" + "'", str1, "L1340837050");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1340837050" + "'", str4, "L1340837050");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1340837050" + "'", str5, "L1340837050");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putLong((long) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putLong(100L);
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putByte(1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        label0.info = "L219136701";
        java.lang.Object obj38 = label0.info;
        label0.info = "L1509753383";
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L769741150" + "'", str10, "L769741150");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L769741150" + "'", str19, "L769741150");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "L219136701" + "'", obj38, "L219136701");
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int38 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1433595260" + "'", str22, "L1433595260");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1433595260" + "'", str36, "L1433595260");
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L1559645821");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putLong((long) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 1);
        label0.info = byteVector33;
        org.mockito.asm.ByteVector byteVector36 = byteVector33.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector33.putUTF8("L1557345184");
        java.lang.Class<?> wildcardClass39 = byteVector38.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1118137530" + "'", str1, "L1118137530");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1118137530" + "'", str15, "L1118137530");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1118137530" + "'", str16, "L1118137530");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1118137530" + "'", str19, "L1118137530");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "L1404822831" + "'", obj20, "L1404822831");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        label31.info = byteVector38;
        java.lang.Object obj40 = label31.info;
        java.lang.String str41 = label31.toString();
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector42.putShort((int) (byte) 10);
        label31.info = byteVector48;
        java.lang.Object obj50 = label31.info;
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((-1));
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putLong(10L);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("L1311753909");
        label31.info = "L1311753909";
        java.lang.Object obj63 = null;
        label31.info = obj63;
        java.lang.String str65 = label31.toString();
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putLong(0L);
        org.mockito.asm.ByteVector byteVector82 = byteVector78.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector84 = byteVector78.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putShort(0);
        label31.info = byteVector86;
        java.lang.String str88 = label31.toString();
        label0.info = label31;
        java.lang.Class<?> wildcardClass90 = label31.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L612448054" + "'", str10, "L612448054");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L612448054" + "'", str19, "L612448054");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L612448054" + "'", str22, "L612448054");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(obj40);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L419471832" + "'", str41, "L419471832");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L419471832" + "'", str65, "L419471832");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "L419471832" + "'", str88, "L419471832");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong(100L);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong(0L);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector34 = byteVector24.putByteArray(byteArray31, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector19.putByteArray(byteArray31, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector39 = byteVector19.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector19.putLong(0L);
        org.mockito.asm.ByteVector byteVector43 = byteVector19.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte(0);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector77 = byteVector67.putByteArray(byteArray74, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector80 = byteVector56.putByteArray(byteArray74, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector83 = byteVector49.putByteArray(byteArray74, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector86 = byteVector45.putByteArray(byteArray74, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector89 = byteVector12.putByteArray(byteArray74, (int) '4', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L438829987");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L747567295");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong(0L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L184022116");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L51707321");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1753265458");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt((int) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        java.lang.Object obj31 = label12.info;
        java.lang.String str32 = label12.toString();
        label12.info = 100L;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("hi!");
        label12.info = byteVector43;
        label0.info = label12;
        java.lang.Object obj46 = label12.info;
        label12.info = "L1094241036";
        label12.info = "L1823180974";
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L433368436" + "'", str1, "L433368436");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L884065789" + "'", str32, "L884065789");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong(10L);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByte((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        label7.info = byteVector14;
        org.mockito.asm.ByteVector byteVector17 = byteVector14.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        label0.info = byteVector19;
        java.lang.Object obj23 = label0.info;
        java.lang.Object obj24 = label0.info;
        java.lang.Object obj25 = label0.info;
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        label26.info = byteVector33;
        java.lang.Object obj35 = label26.info;
        java.lang.String str36 = label26.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        label26.info = "hi!";
        java.lang.Object obj41 = label26.info;
        java.lang.Object obj42 = label26.info;
        label26.info = "";
        java.lang.Object obj45 = label26.info;
        java.lang.String str46 = label26.toString();
        label0.info = label26;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong(0L);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt(10);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector72 = byteVector66.putUTF8("L219136701");
        org.mockito.asm.ByteVector byteVector74 = byteVector66.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putLong((long) ' ');
        label0.info = byteVector76;
        java.lang.Object obj78 = label0.info;
        java.lang.Class<?> wildcardClass79 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L48621787" + "'", str1, "L48621787");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L48621787" + "'", str4, "L48621787");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L48621787" + "'", str5, "L48621787");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1184649" + "'", str36, "L1184649");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "hi!" + "'", obj42, "hi!");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1184649" + "'", str46, "L1184649");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong(10L);
        label0.info = byteVector25;
        label0.info = "L1044076044";
        java.lang.Object obj29 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L584105974" + "'", str1, "L584105974");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "L1044076044" + "'", obj29, "L1044076044");
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.Object obj30 = label0.info;
        java.lang.Object obj31 = label0.info;
        java.lang.Object obj32 = label0.info;
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        label33.info = byteVector40;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putLong((long) 100);
        label33.info = byteVector48;
        java.lang.Object obj52 = label33.info;
        java.lang.Object obj53 = label33.info;
        java.lang.Object obj54 = label33.info;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("L922707703");
        label33.info = byteVector65;
        org.mockito.asm.ByteVector byteVector68 = byteVector65.putByte(0);
        org.mockito.asm.ByteVector byteVector70 = byteVector65.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putByte((int) (byte) 0);
        label0.info = byteVector72;
        java.lang.Object obj74 = label0.info;
        java.lang.Object obj75 = label0.info;
        java.lang.Object obj76 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int77 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1 + "'", obj30, 1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1 + "'", obj31, 1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1 + "'", obj32, 1);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte(10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort(1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putInt(1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort(0);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putInt((int) (byte) 100);
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector63 = byteVector49.putByteArray(byteArray60, (int) (byte) 1, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector34.putByteArray(byteArray60, 1, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector68 = byteVector34.putByte((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1479833660" + "'", str20, "L1479833660");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector34 = byteVector24.putByteArray(byteArray31, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector19.putByteArray(byteArray31, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector40 = byteVector10.putByteArray(byteArray31, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector42 = byteVector10.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong(10L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.String str16 = label15.toString();
        label15.info = (short) 0;
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) 100);
        label15.info = byteVector25;
        java.lang.Object obj29 = label15.info;
        java.lang.Object obj30 = label15.info;
        label0.info = label15;
        java.lang.String str32 = label15.toString();
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) 'a');
        label15.info = 'a';
        java.lang.String str47 = label15.toString();
        java.lang.Object obj48 = label15.info;
        java.lang.Object obj49 = label15.info;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = label15.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1039409633" + "'", str1, "L1039409633");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1039409633" + "'", str4, "L1039409633");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L412346391" + "'", str16, "L412346391");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L412346391" + "'", str32, "L412346391");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L412346391" + "'", str47, "L412346391");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 'a' + "'", obj48, 'a');
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 'a' + "'", obj49, 'a');
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) '#');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        label0.info = "L203921615";
        java.lang.String str44 = label0.toString();
        java.lang.String str45 = label0.toString();
        label0.info = "L988172356";
        // The following exception was thrown during execution in test generation
        try {
            int int48 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1375685775" + "'", str44, "L1375685775");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1375685775" + "'", str45, "L1375685775");
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        org.mockito.asm.ByteVector byteVector16 = byteVector13.putUTF8("L1432728380");
        org.mockito.asm.ByteVector byteVector18 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector19.putUTF8("L637422777");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort(1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L941510936");
        byte[] byteArray54 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector34.putByteArray(byteArray54, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector27.putByteArray(byteArray54, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector66 = byteVector18.putByteArray(byteArray54, (int) '#', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2065306240" + "'", str1, "L2065306240");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L2065306240" + "'", str4, "L2065306240");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.Object obj42 = label0.info;
        label0.info = "L1492747934";
        java.lang.Class<?> wildcardClass45 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1 + "'", obj42, 1);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putByte(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1451583337");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector33 = byteVector25.putLong(10L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong(10L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort(1);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt(100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putInt(0);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putByte((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort(1);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putUTF8("L941510936");
        byte[] byteArray83 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector86 = byteVector76.putByteArray(byteArray83, 0, 1);
        org.mockito.asm.ByteVector byteVector89 = byteVector63.putByteArray(byteArray83, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector58.putByteArray(byteArray83, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector95 = byteVector43.putByteArray(byteArray83, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector98 = byteVector22.putByteArray(byteArray83, 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector95);
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        java.lang.Object obj62 = label0.info;
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong(0L);
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector81 = byteVector75.putByte(1);
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector85 = byteVector81.putByte((int) (short) 1);
        label0.info = byteVector85;
        java.lang.String str87 = label0.toString();
        java.lang.Object obj88 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int89 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L974508200" + "'", str20, "L974508200");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1659857702" + "'", str59, "L1659857702");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L1659857702");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L1659857702");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L1659857702");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L974508200" + "'", str87, "L974508200");
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        byte[] byteArray15 = null;
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByteArray(byteArray15, (int) 'a', (int) '4');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L55944034");
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt(1);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector42.putByteArray(byteArray54, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector35.putByteArray(byteArray54, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector66 = byteVector20.putByteArray(byteArray54, (int) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector26 = byteVector12.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1032876219");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((-1));
        byte[] byteArray15 = null;
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putByteArray(byteArray15, (int) (short) 100, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L1878877976");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        label0.info = byteVector20;
        org.mockito.asm.ByteVector byteVector25 = byteVector20.putUTF8("L391931249");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 100);
        java.lang.Class<?> wildcardClass28 = byteVector25.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L742723998" + "'", str1, "L742723998");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong(0L);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        label14.info = byteVector21;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) 100);
        label14.info = byteVector29;
        java.lang.Object obj33 = label14.info;
        java.lang.Object obj34 = label14.info;
        label0.info = obj34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort(1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L439331775");
        label0.info = byteVector50;
        org.mockito.asm.ByteVector byteVector55 = byteVector50.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L839503804");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort(100);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1667345364" + "'", str1, "L1667345364");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.Object obj28 = label0.info;
        java.lang.String str29 = label0.toString();
        label0.info = "L92034654";
        java.lang.String str32 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L367306567" + "'", str11, "L367306567");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L367306567" + "'", str29, "L367306567");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L367306567" + "'", str32, "L367306567");
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong(10L);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector26 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        java.lang.String str28 = label0.toString();
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        java.lang.String str30 = label29.toString();
        label29.info = (short) 0;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) 100);
        label29.info = byteVector39;
        java.lang.Object obj43 = label29.info;
        label0.info = obj43;
        java.lang.String str45 = label0.toString();
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt(1);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putUTF8("L2130541591");
        org.mockito.asm.ByteVector byteVector68 = byteVector60.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("L368897806");
        label0.info = byteVector70;
        org.mockito.asm.ByteVector byteVector73 = byteVector70.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector70.putUTF8("L1136622015");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1807330566" + "'", str28, "L1807330566");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1625728121" + "'", str30, "L1625728121");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1807330566" + "'", str45, "L1807330566");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L102640438");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.Object obj42 = label0.info;
        label0.info = "L1492747934";
        java.lang.Object obj45 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1 + "'", obj42, 1);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "L1492747934" + "'", obj45, "L1492747934");
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        java.lang.String str17 = label0.toString();
        java.lang.String str18 = label0.toString();
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2116854317" + "'", str1, "L2116854317");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L2116854317" + "'", str17, "L2116854317");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L2116854317" + "'", str18, "L2116854317");
        org.junit.Assert.assertNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L2116854317" + "'", str20, "L2116854317");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L2116854317" + "'", str21, "L2116854317");
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt(100);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector38 = byteVector30.putUTF8("L1029732739");
        label0.info = byteVector30;
        java.lang.String str40 = label0.toString();
        java.lang.String str41 = label0.toString();
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putLong(10L);
        label0.info = byteVector58;
        label0.info = "L915802134";
        java.lang.String str62 = label0.toString();
        java.lang.Object obj63 = label0.info;
        java.lang.Object obj64 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L4596984" + "'", str10, "L4596984");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L4596984" + "'", str19, "L4596984");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L4596984" + "'", str20, "L4596984");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L4596984" + "'", str21, "L4596984");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L4596984" + "'", str40, "L4596984");
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L4596984" + "'", str41, "L4596984");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L4596984" + "'", str62, "L4596984");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "L915802134" + "'", obj63, "L915802134");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "L915802134" + "'", obj64, "L915802134");
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (short) 0);
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        label0.info = "L1663108577";
        label0.info = "L2047452507";
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte(100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(1);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(0);
        java.lang.Class<?> wildcardClass36 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.Class<?> wildcardClass38 = byteVector33.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1658557326" + "'", str16, "L1658557326");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L820720346");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label23.info;
        java.lang.Object obj55 = label23.info;
        java.lang.Object obj56 = label23.info;
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        label57.info = byteVector64;
        java.lang.Object obj66 = label57.info;
        java.lang.String str67 = label57.toString();
        java.lang.Object obj68 = label57.info;
        java.lang.String str69 = label57.toString();
        java.lang.String str70 = label57.toString();
        java.lang.Object obj71 = label57.info;
        java.lang.Object obj72 = label57.info;
        java.lang.Object obj73 = label57.info;
        label23.info = label57;
        java.lang.Object obj75 = null;
        label23.info = obj75;
        java.lang.Object obj77 = label23.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L2007705866" + "'", str22, "L2007705866");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1) + "'", obj54, (-1));
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1) + "'", obj55, (-1));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1) + "'", obj56, (-1));
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(obj66);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1179626180" + "'", str67, "L1179626180");
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1179626180" + "'", str69, "L1179626180");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1179626180" + "'", str70, "L1179626180");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        java.lang.Object obj22 = label0.info;
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        label23.info = ' ';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(0);
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector33 = byteVector30.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort(1);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '#');
        label0.info = byteVector43;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) (short) 1);
        label0.info = byteVector53;
        java.lang.Class<?> wildcardClass57 = byteVector53.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1681790250" + "'", str21, "L1681790250");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        java.lang.String str27 = label26.toString();
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        label26.info = byteVector36;
        java.lang.Object obj38 = label26.info;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putLong(0L);
        label26.info = byteVector53;
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        label55.info = ' ';
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putInt(0);
        label55.info = byteVector62;
        org.mockito.asm.ByteVector byteVector65 = byteVector62.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putShort(1);
        label26.info = byteVector69;
        label0.info = byteVector69;
        java.lang.String str72 = label0.toString();
        org.mockito.asm.ByteVector byteVector73 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector77 = byteVector73.putShort((-1));
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector79.putUTF8("L386554824");
        label0.info = byteVector79;
        label0.info = "L1628604519";
        // The following exception was thrown during execution in test generation
        try {
            int int87 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L248868346" + "'", str19, "L248868346");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L248868346" + "'", str24, "L248868346");
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L847816171" + "'", str27, "L847816171");
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L248868346" + "'", str72, "L248868346");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label0.info;
        java.lang.Object obj55 = label0.info;
        java.lang.Object obj56 = label0.info;
        java.lang.String str57 = label0.toString();
        java.lang.Object obj58 = label0.info;
        java.lang.String str59 = label0.toString();
        java.lang.String str60 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L463008527" + "'", str22, "L463008527");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals(obj54.toString(), "L139993630");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "L139993630");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "L139993630");
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "L139993630");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "L139993630");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "L139993630");
        org.junit.Assert.assertNotNull(obj56);
// flaky:         org.junit.Assert.assertEquals(obj56.toString(), "L139993630");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "L139993630");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "L139993630");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L463008527" + "'", str57, "L463008527");
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals(obj58.toString(), "L139993630");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "L139993630");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "L139993630");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L463008527" + "'", str59, "L463008527");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L463008527" + "'", str60, "L463008527");
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1612140511");
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong((-1L));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) (short) 100);
        java.lang.Class<?> wildcardClass23 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str18 = label0.toString();
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = "L665261086";
        java.lang.Object obj23 = label0.info;
        java.lang.Object obj24 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L855460874" + "'", str1, "L855460874");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L855460874" + "'", str18, "L855460874");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "hi!" + "'", obj19, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L855460874" + "'", str20, "L855460874");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "L665261086" + "'", obj23, "L665261086");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "L665261086" + "'", obj24, "L665261086");
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        label0.info = "L963025893";
        java.lang.String str18 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1747233729" + "'", str1, "L1747233729");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1747233729" + "'", str18, "L1747233729");
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L544094278");
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        label15.info = byteVector22;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) 100);
        label15.info = byteVector30;
        org.mockito.asm.ByteVector byteVector35 = byteVector30.putShort(100);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt(0);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putByte(100);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putByteArray(byteArray69, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector57.putByteArray(byteArray69, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector50.putByteArray(byteArray69, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector35.putByteArray(byteArray69, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector12.putByteArray(byteArray69, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        java.lang.String str7 = label0.toString();
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte(10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (short) 10);
        label0.info = (short) 10;
        java.lang.Object obj28 = label0.info;
        java.lang.Object obj29 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1025135502" + "'", str1, "L1025135502");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1025135502" + "'", str5, "L1025135502");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1025135502" + "'", str6, "L1025135502");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L1025135502" + "'", str7, "L1025135502");
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        label22.info = ' ';
        java.lang.String str25 = label22.toString();
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        label26.info = byteVector33;
        java.lang.Object obj35 = label26.info;
        java.lang.String str36 = label26.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putShort((int) (byte) 10);
        label26.info = byteVector43;
        java.lang.String str45 = label26.toString();
        label26.info = '4';
        java.lang.String str48 = label26.toString();
        java.lang.Object obj49 = label26.info;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putByte((-1));
        label26.info = byteVector60;
        label22.info = byteVector60;
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector81 = byteVector71.putByteArray(byteArray78, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector71.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putUTF8("L713879861");
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putUTF8("L596369166");
        label22.info = "L596369166";
        java.lang.Class<?> wildcardClass89 = label22.getClass();
        label0.info = wildcardClass89;
        // The following exception was thrown during execution in test generation
        try {
            int int91 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L599566459" + "'", str21, "L599566459");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L422368727" + "'", str25, "L422368727");
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L466583223" + "'", str36, "L466583223");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L466583223" + "'", str45, "L466583223");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L466583223" + "'", str48, "L466583223");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + '4' + "'", obj49, '4');
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L1712895736");
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("L814425893");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1443005229");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L2074845001");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt(100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L322527037");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1921020494");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector26.putUTF8("L850146792");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putUTF8("L2135335529");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector4.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector28 = byteVector4.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        label0.info = "L56937410";
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label28.info = byteVector35;
        java.lang.Object obj37 = label28.info;
        java.lang.Object obj38 = label28.info;
        java.lang.Object obj39 = label28.info;
        label0.info = label28;
        java.lang.Object obj41 = label28.info;
        java.lang.Object obj42 = label28.info;
        java.lang.String str43 = label28.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1702217510" + "'", str10, "L1702217510");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1702217510" + "'", str19, "L1702217510");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1702217510" + "'", str22, "L1702217510");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1702217510" + "'", str24, "L1702217510");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1320595409" + "'", str43, "L1320595409");
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector18 = byteVector4.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector20 = byteVector4.putUTF8("L227201287");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1805550555");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putUTF8("L344359002");
        java.lang.Class<?> wildcardClass37 = byteVector36.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L632975638" + "'", str10, "L632975638");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putByte((-1));
        label0.info = byteVector34;
        org.mockito.asm.ByteVector byteVector41 = byteVector34.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector34.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector34.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) ' ');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2079941971" + "'", str10, "L2079941971");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L2079941971" + "'", str19, "L2079941971");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L2079941971" + "'", str22, "L2079941971");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        java.lang.Object obj30 = label0.info;
        java.lang.String str31 = label0.toString();
        java.lang.Object obj32 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1642038793" + "'", str28, "L1642038793");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1642038793" + "'", str29, "L1642038793");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "L42697657" + "'", obj30, "L42697657");
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1642038793" + "'", str31, "L1642038793");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "L42697657" + "'", obj32, "L42697657");
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        java.lang.String str55 = label0.toString();
        java.lang.Object obj56 = label0.info;
        java.lang.String str57 = label0.toString();
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        java.lang.String str59 = label58.toString();
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putInt(0);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        label58.info = byteVector68;
        java.lang.Object obj70 = label58.info;
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putLong(0L);
        label58.info = byteVector85;
        java.lang.Object obj87 = null;
        label58.info = obj87;
        org.mockito.asm.Label label89 = new org.mockito.asm.Label();
        java.lang.String str90 = label89.toString();
        java.lang.Object obj91 = label89.info;
        java.lang.Object obj92 = label89.info;
        java.lang.Object obj93 = label89.info;
        label58.info = label89;
        label89.info = "L1412540007";
        label0.info = label89;
        java.lang.Object obj98 = label0.info;
        java.lang.String str99 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1652929235" + "'", str10, "L1652929235");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1652929235" + "'", str19, "L1652929235");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L2028040985" + "'", str30, "L2028040985");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L1652929235" + "'", str55, "L1652929235");
        org.junit.Assert.assertNotNull(obj56);
// flaky:         org.junit.Assert.assertEquals(obj56.toString(), "L2028040985");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "L2028040985");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "L2028040985");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L1652929235" + "'", str57, "L1652929235");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1702249838" + "'", str59, "L1702249838");
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L1363838862" + "'", str90, "L1363838862");
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(obj98);
// flaky:         org.junit.Assert.assertEquals(obj98.toString(), "L1363838862");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "L1363838862");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "L1363838862");
// flaky:         org.junit.Assert.assertEquals("'" + str99 + "' != '" + "L1652929235" + "'", str99, "L1652929235");
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 100);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte(10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L266494957");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) 0);
        java.lang.Class<?> wildcardClass11 = byteVector8.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.String str36 = label0.toString();
        java.lang.String str37 = label0.toString();
        java.lang.String str38 = label0.toString();
        java.lang.Object obj39 = label0.info;
        java.lang.Object obj40 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L560029596" + "'", str10, "L560029596");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L560029596" + "'", str19, "L560029596");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L560029596" + "'", str36, "L560029596");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L560029596" + "'", str37, "L560029596");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L560029596" + "'", str38, "L560029596");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1) + "'", obj39, (-1));
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (-1) + "'", obj40, (-1));
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong(1L);
        label0.info = byteVector32;
        java.lang.String str36 = label0.toString();
        java.lang.String str37 = label0.toString();
        java.lang.String str38 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L468349454" + "'", str20, "L468349454");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L468349454" + "'", str36, "L468349454");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L468349454" + "'", str37, "L468349454");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L468349454" + "'", str38, "L468349454");
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L1140418239");
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putUTF8("L1378462366");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        label0.info = "L1673143499";
        java.lang.String str21 = label0.toString();
        java.lang.Object obj22 = label0.info;
        java.lang.Object obj23 = label0.info;
        java.lang.Object obj24 = label0.info;
        label0.info = "L1789269091";
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1478762565" + "'", str10, "L1478762565");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1478762565" + "'", str21, "L1478762565");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "L1673143499" + "'", obj22, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "L1673143499" + "'", obj23, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "L1673143499" + "'", obj24, "L1673143499");
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        label15.info = byteVector22;
        java.lang.Object obj24 = label15.info;
        java.lang.String str25 = label15.toString();
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(1L);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) (short) 100);
        label15.info = byteVector40;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) '4');
        label15.info = byteVector46;
        java.lang.String str48 = label15.toString();
        java.lang.Object obj49 = label15.info;
        label0.info = obj49;
        java.lang.String str51 = label0.toString();
        java.lang.String str52 = label0.toString();
        label0.info = "L1339928952";
        // The following exception was thrown during execution in test generation
        try {
            int int55 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1799886602" + "'", str10, "L1799886602");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1799886602" + "'", str12, "L1799886602");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1799886602" + "'", str13, "L1799886602");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1799886602" + "'", str14, "L1799886602");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1001588819" + "'", str25, "L1001588819");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L1001588819" + "'", str48, "L1001588819");
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L1799886602" + "'", str51, "L1799886602");
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L1799886602" + "'", str52, "L1799886602");
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L230057508");
        label0.info = byteVector21;
        org.mockito.asm.ByteVector byteVector26 = byteVector21.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector21.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putUTF8("L1751853195");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1274730947" + "'", str9, "L1274730947");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1274730947" + "'", str10, "L1274730947");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putUTF8("L68276687");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putInt(1);
        org.mockito.asm.ByteVector byteVector27 = byteVector19.putInt((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector19.putShort(10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt(100);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putByte((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putByte((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort(1);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putUTF8("L941510936");
        byte[] byteArray81 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector59.putByteArray(byteArray81, (int) (short) 1, 1);
        org.mockito.asm.ByteVector byteVector90 = byteVector50.putByteArray(byteArray81, 0, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector29.putByteArray(byteArray81, 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector96 = byteVector18.putByteArray(byteArray81, (int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.String str42 = label0.toString();
        java.lang.String str43 = label0.toString();
        java.lang.String str44 = label0.toString();
        java.lang.Object obj45 = label0.info;
        java.lang.Object obj46 = label0.info;
        java.lang.Object obj47 = label0.info;
        java.lang.String str48 = label0.toString();
        java.lang.Object obj49 = label0.info;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putInt((int) 'a');
        label0.info = byteVector58;
        // The following exception was thrown during execution in test generation
        try {
            int int64 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L2095791344" + "'", str42, "L2095791344");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L2095791344" + "'", str43, "L2095791344");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L2095791344" + "'", str44, "L2095791344");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1 + "'", obj45, 1);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1 + "'", obj46, 1);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1 + "'", obj47, 1);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L2095791344" + "'", str48, "L2095791344");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1 + "'", obj49, 1);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort(1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort(10);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByte((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(100);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putByte((int) (short) -1);
        byte[] byteArray53 = new byte[] { (byte) 100, (byte) 0, (byte) 0, (byte) 10, (byte) 1, (byte) -1 };
        org.mockito.asm.ByteVector byteVector56 = byteVector46.putByteArray(byteArray53, 1, 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector31.putByteArray(byteArray53, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector62 = byteVector12.putByteArray(byteArray53, (int) ' ', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100, 0, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        java.lang.Object obj31 = label0.info;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt(1);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong(1L);
        label0.info = byteVector54;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L230792802" + "'", str10, "L230792802");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L230792802" + "'", str19, "L230792802");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L230792802" + "'", str22, "L230792802");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L27408797");
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) ' ');
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        label27.info = byteVector34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) 100);
        label27.info = byteVector42;
        java.lang.Object obj46 = label27.info;
        java.lang.String str47 = label27.toString();
        label27.info = 100L;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector58 = byteVector50.putUTF8("hi!");
        label27.info = byteVector58;
        org.mockito.asm.ByteVector byteVector61 = byteVector58.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putInt(1);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort(0);
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putInt((int) (byte) 100);
        byte[] byteArray87 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector90 = byteVector76.putByteArray(byteArray87, (int) (byte) 1, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector93 = byteVector61.putByteArray(byteArray87, 1, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector96 = byteVector26.putByteArray(byteArray87, 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1376018151" + "'", str47, "L1376018151");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 100);
        label0.info = (byte) 100;
        java.lang.String str37 = label0.toString();
        java.lang.Object obj38 = label0.info;
        java.lang.String str39 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int40 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1675655581" + "'", str1, "L1675655581");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1675655581" + "'", str37, "L1675655581");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1675655581" + "'", str39, "L1675655581");
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.Object obj32 = null;
        label0.info = obj32;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(0L);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort(0);
        label0.info = byteVector55;
        java.lang.Object obj57 = label0.info;
        java.lang.Object obj58 = label0.info;
        java.lang.String str59 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L486971642" + "'", str10, "L486971642");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L486971642" + "'", str34, "L486971642");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L486971642" + "'", str59, "L486971642");
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(1L);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("L873743500");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putLong(1L);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector69 = byteVector63.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector63.putByteArray(byteArray81, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector56.putByteArray(byteArray81, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector48.putByteArray(byteArray81, 0, 1);
        org.mockito.asm.ByteVector byteVector96 = byteVector41.putByteArray(byteArray81, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector99 = byteVector16.putByteArray(byteArray81, 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        label0.info = "L203921615";
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt(1);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector64 = byteVector58.putUTF8("L2130541591");
        label0.info = "L2130541591";
        // The following exception was thrown during execution in test generation
        try {
            int int66 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        java.lang.Object obj55 = label20.info;
        java.lang.String str56 = label20.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int57 = label20.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L563562921" + "'", str10, "L563562921");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L563562921" + "'", str19, "L563562921");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1623369801" + "'", str30, "L1623369801");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1623369801" + "'", str56, "L1623369801");
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putInt((int) (short) 100);
        java.lang.Class<?> wildcardClass27 = byteVector26.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        org.mockito.asm.ByteVector byteVector25 = byteVector22.putLong((long) (short) 1);
        java.lang.Class<?> wildcardClass26 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1954037625" + "'", str19, "L1954037625");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1443005229");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.Object obj32 = null;
        label0.info = obj32;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(0L);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort(0);
        label0.info = byteVector55;
        org.mockito.asm.ByteVector byteVector58 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector60 = byteVector55.putLong(0L);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort(0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1231422478" + "'", str10, "L1231422478");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1231422478" + "'", str34, "L1231422478");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        label0.info = "L499234616";
        java.lang.String str17 = label0.toString();
        java.lang.Object obj18 = label0.info;
        java.lang.String str19 = label0.toString();
        java.lang.Class<?> wildcardClass20 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L892714531" + "'", str1, "L892714531");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L892714531" + "'", str4, "L892714531");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L892714531" + "'", str17, "L892714531");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "L499234616" + "'", obj18, "L499234616");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L892714531" + "'", str19, "L892714531");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putUTF8("L1336941656");
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort(1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L701232933" + "'", str10, "L701232933");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector34 = byteVector26.putShort(10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort(10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte(10);
        label0.info = 10;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L510288813" + "'", str10, "L510288813");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L510288813" + "'", str19, "L510288813");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L510288813" + "'", str20, "L510288813");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) ' ');
        byte[] byteArray19 = null;
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByteArray(byteArray19, (int) (short) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt(1);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) (short) -1);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putLong(1L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) 1);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1709723141" + "'", str1, "L1709723141");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 1);
        label0.info = byteVector44;
        java.lang.Object obj48 = label0.info;
        java.lang.String str49 = label0.toString();
        java.lang.String str50 = label0.toString();
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putByte((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong((long) 'a');
        label0.info = 'a';
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L80262311" + "'", str10, "L80262311");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L80262311" + "'", str19, "L80262311");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L80262311" + "'", str49, "L80262311");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L80262311" + "'", str50, "L80262311");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = null;
        label0.info = obj23;
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        label25.info = byteVector32;
        java.lang.Object obj34 = label25.info;
        java.lang.String str35 = label25.toString();
        java.lang.Object obj36 = label25.info;
        java.lang.String str37 = label25.toString();
        java.lang.String str38 = label25.toString();
        java.lang.String str39 = label25.toString();
        label0.info = str39;
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putInt(1);
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong((long) (short) 1);
        label0.info = byteVector65;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1807126734" + "'", str10, "L1807126734");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1807126734" + "'", str20, "L1807126734");
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1807126734" + "'", str22, "L1807126734");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(obj34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1431789204" + "'", str35, "L1431789204");
        org.junit.Assert.assertNotNull(obj36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1431789204" + "'", str37, "L1431789204");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1431789204" + "'", str38, "L1431789204");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1431789204" + "'", str39, "L1431789204");
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.String str13 = label0.toString();
        label0.info = "L368366164";
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) 100);
        label16.info = byteVector31;
        java.lang.String str35 = label16.toString();
        java.lang.Object obj36 = label16.info;
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector(1);
        label16.info = byteVector38;
        org.mockito.asm.ByteVector byteVector41 = byteVector38.putLong((long) (short) 1);
        label0.info = byteVector38;
        java.lang.Object obj43 = label0.info;
        java.lang.String str44 = label0.toString();
        java.lang.Object obj45 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int46 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1780582768" + "'", str1, "L1780582768");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1780582768" + "'", str13, "L1780582768");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1915228931" + "'", str35, "L1915228931");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1780582768" + "'", str44, "L1780582768");
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(10);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector42.putByteArray(byteArray54, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector33.putByteArray(byteArray54, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector22.putByteArray(byteArray54, 0, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector68 = byteVector22.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector22.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putInt((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector5.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector13 = byteVector5.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong(0L);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt(1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putInt(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putByte(100);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector73 = byteVector63.putByteArray(byteArray70, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector76 = byteVector58.putByteArray(byteArray70, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector79 = byteVector51.putByteArray(byteArray70, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector82 = byteVector34.putByteArray(byteArray70, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector85 = byteVector15.putByteArray(byteArray70, (int) (byte) 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label23.info;
        java.lang.Object obj55 = label23.info;
        java.lang.Object obj56 = label23.info;
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        label57.info = byteVector64;
        java.lang.Object obj66 = label57.info;
        java.lang.String str67 = label57.toString();
        java.lang.Object obj68 = label57.info;
        java.lang.String str69 = label57.toString();
        java.lang.Object obj70 = label57.info;
        java.lang.String str71 = label57.toString();
        java.lang.Object obj72 = label57.info;
        label23.info = obj72;
        // The following exception was thrown during execution in test generation
        try {
            int int74 = label23.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1654833448" + "'", str22, "L1654833448");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1) + "'", obj54, (-1));
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1) + "'", obj55, (-1));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1) + "'", obj56, (-1));
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(obj66);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1536412895" + "'", str67, "L1536412895");
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1536412895" + "'", str69, "L1536412895");
        org.junit.Assert.assertNotNull(obj70);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "L1536412895" + "'", str71, "L1536412895");
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L190384593");
        label0.info = byteVector34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        label0.info = byteVector36;
        org.mockito.asm.ByteVector byteVector41 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort((int) '4');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L2081946850" + "'", str11, "L2081946850");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        java.lang.Object obj62 = label0.info;
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong(0L);
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector81 = byteVector75.putByte(1);
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector85 = byteVector81.putByte((int) (short) 1);
        label0.info = byteVector85;
        org.mockito.asm.ByteVector byteVector88 = byteVector85.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector90 = byteVector85.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector92 = byteVector90.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1757737653" + "'", str20, "L1757737653");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L156913552" + "'", str59, "L156913552");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L156913552");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L156913552");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L156913552");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L465592951");
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L966497915");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((-1L));
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort(1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putUTF8("L941510936");
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector54 = byteVector30.putByteArray(byteArray48, (int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.String str19 = label0.toString();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector30.putByteArray(byteArray48, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector23.putByteArray(byteArray48, (int) (short) 0, 0);
        label0.info = (short) 0;
        java.lang.Object obj59 = label0.info;
        java.lang.String str60 = label0.toString();
        java.lang.String str61 = label0.toString();
        java.lang.String str62 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L158357689" + "'", str1, "L158357689");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L158357689" + "'", str15, "L158357689");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L158357689" + "'", str16, "L158357689");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L158357689" + "'", str19, "L158357689");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 0 + "'", obj59, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L158357689" + "'", str60, "L158357689");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L158357689" + "'", str61, "L158357689");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L158357689" + "'", str62, "L158357689");
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (short) 1);
        label0.info = (short) 1;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((int) (short) -1);
        label0.info = byteVector66;
        java.lang.Object obj72 = null;
        label0.info = obj72;
        label0.info = "L414506444";
        // The following exception was thrown during execution in test generation
        try {
            int int76 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L42063262" + "'", str10, "L42063262");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L42063262" + "'", str33, "L42063262");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L42063262" + "'", str34, "L42063262");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort(1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort(10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) ' ');
        label0.info = byteVector47;
        java.lang.Object obj51 = label0.info;
        label0.info = "L1535802744";
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1280681965" + "'", str20, "L1280681965");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label16.info = ' ';
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector26 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(1);
        label0.info = byteVector26;
        org.mockito.asm.ByteVector byteVector33 = byteVector26.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("L705146502");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1090877881" + "'", str10, "L1090877881");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1090877881" + "'", str12, "L1090877881");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1090877881" + "'", str15, "L1090877881");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str15 = label0.toString();
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        java.lang.Object obj27 = label17.info;
        label0.info = label17;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort(1);
        label17.info = byteVector41;
        java.lang.String str43 = label17.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int44 = label17.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1637174928" + "'", str10, "L1637174928");
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1637174928" + "'", str15, "L1637174928");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1558977049" + "'", str26, "L1558977049");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1558977049" + "'", str43, "L1558977049");
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        label22.info = byteVector29;
        java.lang.Object obj31 = label22.info;
        java.lang.String str32 = label22.toString();
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label22.info = "hi!";
        java.lang.Object obj37 = label22.info;
        java.lang.Object obj38 = label22.info;
        label22.info = "";
        java.lang.Object obj41 = label22.info;
        java.lang.Object obj42 = label22.info;
        java.lang.Object obj43 = label22.info;
        java.lang.String str44 = label22.toString();
        java.lang.String str45 = label22.toString();
        java.lang.String str46 = label22.toString();
        label0.info = str46;
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        label48.info = byteVector55;
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong((long) 100);
        label48.info = byteVector63;
        org.mockito.asm.ByteVector byteVector68 = byteVector63.putShort(1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putLong(100L);
        org.mockito.asm.ByteVector byteVector74 = byteVector68.putUTF8("L1310345801");
        org.mockito.asm.ByteVector byteVector76 = byteVector68.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector68.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong(0L);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putUTF8("L569370564");
        org.mockito.asm.ByteVector byteVector86 = byteVector82.putShort((int) (short) -1);
        label0.info = byteVector86;
        org.mockito.asm.ByteVector byteVector89 = byteVector86.putInt(0);
        java.lang.Class<?> wildcardClass90 = byteVector89.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1275938937" + "'", str10, "L1275938937");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1275938937" + "'", str19, "L1275938937");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1429570793" + "'", str32, "L1429570793");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "hi!" + "'", obj37, "hi!");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "hi!" + "'", obj38, "hi!");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1429570793" + "'", str44, "L1429570793");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1429570793" + "'", str45, "L1429570793");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1429570793" + "'", str46, "L1429570793");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putInt(0);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putByte(100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector61.putByteArray(byteArray73, 1, (int) (short) 0);
        label20.info = (short) 0;
        java.lang.Object obj81 = label20.info;
        // The following exception was thrown during execution in test generation
        try {
            int int82 = label20.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L252925655" + "'", str10, "L252925655");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L252925655" + "'", str19, "L252925655");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L2127874749" + "'", str30, "L2127874749");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 0 + "'", obj81, (short) 0);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putUTF8("L100265572");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) (short) 10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1104546982" + "'", str10, "L1104546982");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        java.lang.Class<?> wildcardClass7 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 1);
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putInt(0);
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putByte(100);
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector43 = byteVector33.putByteArray(byteArray40, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector46 = byteVector28.putByteArray(byteArray40, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector49 = byteVector21.putByteArray(byteArray40, 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector52 = byteVector4.putByteArray(byteArray40, (int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L1939309443");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L855288385");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(1L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1292372490");
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt((-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(10);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(0);
        java.lang.Class<?> wildcardClass43 = byteVector40.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1236325485" + "'", str20, "L1236325485");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        java.lang.Object obj12 = label0.info;
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        label13.info = byteVector20;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 100);
        label13.info = byteVector28;
        java.lang.Object obj32 = label13.info;
        java.lang.String str33 = label13.toString();
        label13.info = 100L;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte(100);
        label13.info = byteVector40;
        java.lang.Object obj44 = label13.info;
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        label0.info = wildcardClass45;
        java.lang.String str47 = label0.toString();
        java.lang.Class<?> wildcardClass48 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L422275903" + "'", str9, "L422275903");
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L422275903" + "'", str11, "L422275903");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L100604888" + "'", str33, "L100604888");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L422275903" + "'", str47, "L422275903");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(100);
        label0.info = byteVector33;
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        label35.info = byteVector42;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) 100);
        label35.info = byteVector50;
        org.mockito.asm.ByteVector byteVector55 = byteVector50.putShort(100);
        org.mockito.asm.ByteVector byteVector57 = byteVector50.putByte((int) (byte) 10);
        label0.info = byteVector57;
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector59.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putLong((long) 0);
        label0.info = byteVector67;
        org.mockito.asm.ByteVector byteVector76 = byteVector67.putInt(10);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putByte((int) (short) 1);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2047013542" + "'", str1, "L2047013542");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L2047013542" + "'", str16, "L2047013542");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label16.info = ' ';
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector26 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(1);
        label0.info = byteVector26;
        java.lang.Object obj32 = label0.info;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt(1);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L1318068522");
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector55 = byteVector47.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putUTF8("L216946776");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putInt((int) ' ');
        label0.info = byteVector57;
        java.lang.Object obj61 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L44076653" + "'", str10, "L44076653");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L44076653" + "'", str12, "L44076653");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L44076653" + "'", str15, "L44076653");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.String str14 = label0.toString();
        java.lang.String str15 = label0.toString();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1443005229");
        label0.info = byteVector30;
        java.lang.Object obj32 = label0.info;
        java.lang.Object obj33 = label0.info;
        java.lang.Object obj34 = label0.info;
        java.lang.Object obj35 = label0.info;
        java.lang.Object obj36 = label0.info;
        java.lang.Object obj37 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1825410748" + "'", str1, "L1825410748");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1825410748" + "'", str14, "L1825410748");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1825410748" + "'", str15, "L1825410748");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1338754817");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector22.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L982171835");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putInt(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector7.putInt((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte((int) (byte) 1);
        label0.info = (byte) 1;
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putInt(0);
        org.mockito.asm.ByteVector byteVector68 = byteVector62.putInt(1);
        org.mockito.asm.ByteVector byteVector70 = byteVector62.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putLong((long) (byte) 1);
        label0.info = byteVector72;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L1216780350");
        java.lang.Class<?> wildcardClass21 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1192610767");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) 'a');
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putByte(100);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector49 = byteVector39.putByteArray(byteArray46, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector52 = byteVector34.putByteArray(byteArray46, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector55 = byteVector27.putByteArray(byteArray46, 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector58 = byteVector16.putByteArray(byteArray46, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L1769419158");
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte(100);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByteArray(byteArray35, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector23.putByteArray(byteArray35, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector23.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector23.putLong(0L);
        org.mockito.asm.ByteVector byteVector47 = byteVector23.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector81 = byteVector71.putByteArray(byteArray78, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector84 = byteVector60.putByteArray(byteArray78, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector53.putByteArray(byteArray78, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector49.putByteArray(byteArray78, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector93 = byteVector16.putByteArray(byteArray78, (int) '#', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        java.lang.Object obj19 = label17.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L90138980");
        label17.info = byteVector28;
        java.lang.Object obj30 = label17.info;
        java.lang.Object obj31 = label17.info;
        java.lang.Object obj32 = null;
        label17.info = obj32;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong(10L);
        label17.info = byteVector42;
        org.mockito.asm.ByteVector byteVector45 = byteVector42.putUTF8("L573057893");
        label0.info = byteVector45;
        java.lang.String str47 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2094631518" + "'", str10, "L2094631518");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L2094631518" + "'", str12, "L2094631518");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2094631518" + "'", str15, "L2094631518");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L2094631518" + "'", str16, "L2094631518");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1945360792" + "'", str18, "L1945360792");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L2094631518" + "'", str47, "L2094631518");
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        java.lang.Object obj45 = label0.info;
        java.lang.Object obj46 = label0.info;
        java.lang.String str47 = label0.toString();
        java.lang.Object obj48 = label0.info;
        label0.info = "L639264477";
        label0.info = "L689598327";
        java.lang.Object obj53 = label0.info;
        java.lang.Object obj54 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int55 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L44734276" + "'", str3, "L44734276");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L838596434" + "'", str14, "L838596434");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L838596434" + "'", str23, "L838596434");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L838596434" + "'", str26, "L838596434");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L44734276" + "'", str47, "L44734276");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "L689598327" + "'", obj53, "L689598327");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "L689598327" + "'", obj54, "L689598327");
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L602115599");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label12.info = byteVector37;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '4');
        label12.info = byteVector43;
        java.lang.String str45 = label12.toString();
        java.lang.Object obj46 = label12.info;
        java.lang.Object obj47 = label12.info;
        label0.info = label12;
        org.mockito.asm.Label label49 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        label49.info = byteVector56;
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putLong((long) 100);
        label49.info = byteVector64;
        java.lang.Object obj68 = label49.info;
        java.lang.String str69 = label49.toString();
        label49.info = 100L;
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector72.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong(1L);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putByte((int) (short) 100);
        label49.info = (short) 100;
        java.lang.Object obj88 = label49.info;
        java.lang.String str89 = label49.toString();
        label0.info = label49;
        java.lang.String str91 = label49.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int92 = label49.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L927988999" + "'", str1, "L927988999");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1491514739" + "'", str22, "L1491514739");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1491514739" + "'", str45, "L1491514739");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1960595524" + "'", str69, "L1960595524");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (short) 100 + "'", obj88, (short) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L1960595524" + "'", str89, "L1960595524");
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "L1960595524" + "'", str91, "L1960595524");
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        java.lang.Object obj13 = label11.info;
        java.lang.Class<?> wildcardClass14 = label11.getClass();
        label0.info = wildcardClass14;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(100);
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putInt(0);
        java.lang.Class<?> wildcardClass36 = byteVector29.getClass();
        label0.info = byteVector29;
        java.lang.Object obj38 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1498614121" + "'", str12, "L1498614121");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1319763455" + "'", str16, "L1319763455");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt(100);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) (byte) -1);
        label0.info = byteVector35;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte(100);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putByte(10);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putShort(0);
        label0.info = byteVector57;
        java.lang.String str59 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int60 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L281798957" + "'", str10, "L281798957");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L281798957" + "'", str59, "L281798957");
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector32 = byteVector27.putLong((long) (-1));
        byte[] byteArray33 = null;
        org.mockito.asm.ByteVector byteVector36 = byteVector27.putByteArray(byteArray33, (int) (short) 100, (int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong(0L);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector60 = byteVector38.putByteArray(byteArray54, (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L894301070" + "'", str10, "L894301070");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L894301070" + "'", str19, "L894301070");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L894301070" + "'", str22, "L894301070");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(100);
        label0.info = byteVector33;
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        label35.info = byteVector42;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) 100);
        label35.info = byteVector50;
        org.mockito.asm.ByteVector byteVector55 = byteVector50.putShort(100);
        org.mockito.asm.ByteVector byteVector57 = byteVector50.putByte((int) (byte) 10);
        label0.info = byteVector57;
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (short) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("L940563630");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt(1);
        label0.info = byteVector64;
        org.mockito.asm.ByteVector byteVector67 = byteVector64.putInt((-1));
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1104770002" + "'", str1, "L1104770002");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1104770002" + "'", str16, "L1104770002");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong(10L);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte(1);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector61 = byteVector51.putByteArray(byteArray58, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector42.putByteArray(byteArray58, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector25.putByteArray(byteArray58, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector10.putByteArray(byteArray58, 1, 0);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putByte(0);
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putUTF8("L57994313");
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector4.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong(100L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putUTF8("L1102599342");
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putByte(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(100);
        java.lang.Class<?> wildcardClass29 = byteVector26.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt(10);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector7 = byteVector1.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putShort(1);
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte(1);
        org.mockito.asm.ByteVector byteVector13 = byteVector7.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putShort((int) ' ');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        label0.info = "L1673143499";
        java.lang.Object obj21 = label0.info;
        java.lang.Object obj22 = label0.info;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putUTF8("L1082024160");
        org.mockito.asm.ByteVector byteVector35 = byteVector27.putUTF8("L1019757226");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (short) 1);
        label0.info = (short) 1;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1640701218" + "'", str10, "L1640701218");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "L1673143499" + "'", obj21, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "L1673143499" + "'", obj22, "L1673143499");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector12.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector26 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector12.putUTF8("L1640803533");
        org.mockito.asm.ByteVector byteVector30 = byteVector12.putInt((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L51234570");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putInt((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector16.putInt((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = byteVector26.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putByte(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector10.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L102640438");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 1);
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector35 = byteVector30.putInt(10);
        org.mockito.asm.ByteVector byteVector37 = byteVector30.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1350702368" + "'", str10, "L1350702368");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1350702368" + "'", str21, "L1350702368");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        java.lang.String str26 = label0.toString();
        java.lang.String str27 = label0.toString();
        java.lang.Object obj28 = label0.info;
        java.lang.Class<?> wildcardClass29 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L245913383" + "'", str19, "L245913383");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L245913383" + "'", str24, "L245913383");
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L245913383" + "'", str26, "L245913383");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L245913383" + "'", str27, "L245913383");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L769754150");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1910093133");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 10);
        label0.info = byteVector12;
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        label18.info = byteVector25;
        java.lang.Object obj27 = label18.info;
        java.lang.Object obj28 = label18.info;
        java.lang.Object obj29 = label18.info;
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong((long) 100);
        label18.info = byteVector40;
        label0.info = label18;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putLong((long) 100);
        label18.info = 100;
        java.lang.Object obj59 = label18.info;
        java.lang.Object obj60 = null;
        label18.info = obj60;
        // The following exception was thrown during execution in test generation
        try {
            int int62 = label18.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1949966322" + "'", str1, "L1949966322");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100 + "'", obj59, 100);
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("L1318068522");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        java.lang.String str28 = label0.toString();
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        java.lang.String str30 = label29.toString();
        label29.info = (short) 0;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) 100);
        label29.info = byteVector39;
        java.lang.Object obj43 = label29.info;
        label0.info = obj43;
        java.lang.String str45 = label0.toString();
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt(1);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putUTF8("L2130541591");
        org.mockito.asm.ByteVector byteVector68 = byteVector60.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("L368897806");
        label0.info = byteVector70;
        org.mockito.asm.ByteVector byteVector73 = byteVector70.putByte((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L377213825" + "'", str28, "L377213825");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L621776124" + "'", str30, "L621776124");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L377213825" + "'", str45, "L377213825");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L1025130750");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L2095387472");
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) (short) 1);
        label0.info = byteVector21;
        java.lang.Object obj23 = null;
        label0.info = obj23;
        java.lang.Object obj25 = label0.info;
        java.lang.Object obj26 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1040020551" + "'", str1, "L1040020551");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 0);
        java.lang.Class<?> wildcardClass29 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        java.lang.Object obj62 = label0.info;
        label0.info = 0L;
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector65.putUTF8("");
        org.mockito.asm.ByteVector byteVector73 = byteVector65.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putByte(100);
        java.lang.Class<?> wildcardClass76 = byteVector75.getClass();
        label0.info = byteVector75;
        java.lang.String str78 = label0.toString();
        java.lang.Object obj79 = label0.info;
        java.lang.Object obj80 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L696541180" + "'", str20, "L696541180");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1573626268" + "'", str59, "L1573626268");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L1573626268");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L1573626268");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L1573626268");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(wildcardClass76);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L696541180" + "'", str78, "L696541180");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L941510936");
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putByteArray(byteArray17, 0, 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1309162730");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L910264151");
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putLong(100L);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort(100);
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector58 = byteVector50.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector50.putShort(1);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte(100);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector65.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector50.putByteArray(byteArray79, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector91 = byteVector31.putByteArray(byteArray79, (int) (byte) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector94 = byteVector26.putByteArray(byteArray79, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        label16.info = byteVector23;
        java.lang.Object obj25 = label16.info;
        java.lang.String str26 = label16.toString();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putShort((int) (byte) 10);
        label16.info = byteVector33;
        java.lang.Object obj35 = label16.info;
        java.lang.Object obj36 = label16.info;
        java.lang.String str37 = label16.toString();
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector38.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) ' ');
        label16.info = byteVector46;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte(10);
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putLong(100L);
        label16.info = byteVector58;
        java.lang.Object obj64 = label16.info;
        label0.info = label16;
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector84 = byteVector80.putLong((long) (short) -1);
        label0.info = (short) -1;
        // The following exception was thrown during execution in test generation
        try {
            int int86 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L732259374" + "'", str10, "L732259374");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L732259374" + "'", str12, "L732259374");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L732259374" + "'", str15, "L732259374");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L621356647" + "'", str26, "L621356647");
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L621356647" + "'", str37, "L621356647");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (short) 100);
        java.lang.Class<?> wildcardClass25 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L448841421");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putByte(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        java.lang.Object obj22 = label0.info;
        java.lang.Object obj23 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1354789080" + "'", str10, "L1354789080");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1354789080" + "'", str20, "L1354789080");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1354789080" + "'", str21, "L1354789080");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        byte[] byteArray3 = null;
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByteArray(byteArray3, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector2.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector2.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 10);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        label31.info = byteVector38;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) 100);
        label31.info = byteVector46;
        java.lang.Object obj50 = label31.info;
        java.lang.String str51 = label31.toString();
        label31.info = 100L;
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector54.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector62 = byteVector54.putUTF8("hi!");
        label31.info = byteVector62;
        label0.info = label31;
        java.lang.String str65 = label31.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1710864517" + "'", str10, "L1710864517");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1710864517" + "'", str19, "L1710864517");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1710864517" + "'", str22, "L1710864517");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(obj50);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L917004640" + "'", str51, "L917004640");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L917004640" + "'", str65, "L917004640");
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        label38.info = ' ';
        java.lang.Object obj41 = label38.info;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putLong((long) 'a');
        label38.info = byteVector46;
        java.lang.String str54 = label38.toString();
        java.lang.Object obj55 = label38.info;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putLong((long) (short) 10);
        label38.info = byteVector68;
        label0.info = label38;
        java.lang.String str71 = label38.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int72 = label38.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2084148668" + "'", str10, "L2084148668");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L2084148668" + "'", str33, "L2084148668");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L2084148668" + "'", str34, "L2084148668");
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L2084148668" + "'", str36, "L2084148668");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + ' ' + "'", obj41, ' ');
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L675764989" + "'", str54, "L675764989");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "L675764989" + "'", str71, "L675764989");
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L1029732739");
        org.mockito.asm.ByteVector byteVector18 = byteVector8.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector8.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector8.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte(0);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector60 = byteVector54.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector75 = byteVector65.putByteArray(byteArray72, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector54.putByteArray(byteArray72, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector81 = byteVector47.putByteArray(byteArray72, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector43.putByteArray(byteArray72, 1, 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector24.putByteArray(byteArray72, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector89 = byteVector87.putByte((-1));
        org.mockito.asm.ByteVector byteVector91 = byteVector89.putByte(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) 0);
        byte[] byteArray13 = null;
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByteArray(byteArray13, 0, (int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putUTF8("L941510936");
        byte[] byteArray45 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector48 = byteVector38.putByteArray(byteArray45, 0, 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector27.putByteArray(byteArray45, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector54 = byteVector12.putByteArray(byteArray45, 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) '#');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector1.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt((int) (byte) 100);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector34 = byteVector20.putByteArray(byteArray31, (int) (byte) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector37 = byteVector1.putByteArray(byteArray31, 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L190384593");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(1);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector26.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector36 = byteVector26.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        label7.info = byteVector14;
        org.mockito.asm.ByteVector byteVector17 = byteVector14.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        label0.info = byteVector19;
        java.lang.Object obj23 = label0.info;
        java.lang.Object obj24 = label0.info;
        java.lang.String str25 = label0.toString();
        label0.info = "L1261139762";
        // The following exception was thrown during execution in test generation
        try {
            int int28 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1355543594" + "'", str1, "L1355543594");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1355543594" + "'", str4, "L1355543594");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1355543594" + "'", str5, "L1355543594");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1355543594" + "'", str25, "L1355543594");
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 1);
        label0.info = byteVector33;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        label0.info = byteVector39;
        java.lang.Object obj43 = label0.info;
        label0.info = "L265190307";
        // The following exception was thrown during execution in test generation
        try {
            int int46 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L80903956" + "'", str1, "L80903956");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L80903956" + "'", str15, "L80903956");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L80903956" + "'", str16, "L80903956");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L80903956" + "'", str19, "L80903956");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "L1404822831" + "'", obj20, "L1404822831");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) 100);
        label16.info = byteVector31;
        java.lang.Object obj35 = label16.info;
        java.lang.Object obj36 = label16.info;
        java.lang.Object obj37 = label16.info;
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("L922707703");
        label16.info = byteVector48;
        label0.info = byteVector48;
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putByte(1);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("L1114450590");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L200666770" + "'", str10, "L200666770");
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L200666770" + "'", str15, "L200666770");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
    }
}
