import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test02001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02001");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        label4.info = ' ';
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putInt(0);
        label4.info = byteVector11;
        org.mockito.asm.ByteVector byteVector14 = byteVector11.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong(0L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) (byte) -1);
        label0.info = byteVector16;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L819409125" + "'", str1, "L819409125");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test02002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02002");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.Object obj32 = null;
        label0.info = obj32;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(0L);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort(0);
        label0.info = byteVector55;
        java.lang.String str57 = label0.toString();
        java.lang.Object obj58 = label0.info;
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1382890027" + "'", str10, "L1382890027");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1382890027" + "'", str34, "L1382890027");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L1382890027" + "'", str57, "L1382890027");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test02003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02003");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L1288163568");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((-1L));
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong(0L);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort(0);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putInt(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putByte(100);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector73 = byteVector63.putByteArray(byteArray70, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector76 = byteVector58.putByteArray(byteArray70, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector79 = byteVector49.putByteArray(byteArray70, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector82 = byteVector24.putByteArray(byteArray70, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test02004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02004");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("L439331775");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L412371688");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1110345741");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02005");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort(1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02006");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong(1L);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putLong(0L);
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putInt((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02007");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putInt(10);
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt(1);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putInt(0);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putByte(100);
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector81 = byteVector71.putByteArray(byteArray78, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector84 = byteVector66.putByteArray(byteArray78, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector59.putByteArray(byteArray78, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector90 = byteVector40.putByteArray(byteArray78, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector25.putByteArray(byteArray78, (int) (byte) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector96 = byteVector8.putByteArray(byteArray78, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test02008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02008");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector4.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector28 = byteVector4.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector4.putShort((int) '#');
        java.lang.Class<?> wildcardClass31 = byteVector30.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test02009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02009");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putInt(10);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt(0);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putByte(100);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putByteArray(byteArray69, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector57.putByteArray(byteArray69, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector50.putByteArray(byteArray69, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector31.putByteArray(byteArray69, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector20.putByteArray(byteArray69, (-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test02010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02010");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        java.lang.Object obj13 = label11.info;
        java.lang.Class<?> wildcardClass14 = label11.getClass();
        label0.info = wildcardClass14;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        byte[] byteArray26 = null;
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByteArray(byteArray26, (int) (byte) 100, 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putByte((int) (short) 1);
        label0.info = byteVector31;
        java.lang.Object obj33 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int34 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1615090065" + "'", str12, "L1615090065");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class org.mockito.asm.Label");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class org.mockito.asm.Label");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class org.mockito.asm.Label");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test02011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02011");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 0);
        label0.info = (short) 0;
        java.lang.String str27 = label0.toString();
        java.lang.String str28 = label0.toString();
        java.lang.Object obj29 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L776735728" + "'", str10, "L776735728");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L776735728" + "'", str12, "L776735728");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L776735728" + "'", str27, "L776735728");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L776735728" + "'", str28, "L776735728");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 0 + "'", obj29, (short) 0);
    }

    @Test
    public void test02012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02012");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (short) -1);
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02013");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 100);
        label5.info = byteVector60;
        java.lang.String str64 = label5.toString();
        java.lang.Object obj65 = label5.info;
        java.lang.Object obj66 = label5.info;
        java.lang.Object obj67 = label5.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L269854111" + "'", str1, "L269854111");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L269854111" + "'", str2, "L269854111");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L269854111" + "'", str4, "L269854111");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1246819611" + "'", str6, "L1246819611");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1246819611" + "'", str20, "L1246819611");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1246819611" + "'", str21, "L1246819611");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L577431585" + "'", str31, "L577431585");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L1246819611" + "'", str64, "L1246819611");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test02014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02014");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putLong((long) (short) 10);
        label0.info = byteVector46;
        java.lang.Object obj48 = label0.info;
        java.lang.String str49 = label0.toString();
        java.lang.Object obj50 = label0.info;
        java.lang.Object obj51 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int52 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L548562381" + "'", str10, "L548562381");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L548562381" + "'", str19, "L548562381");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L548562381" + "'", str49, "L548562381");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test02015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02015");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        label22.info = byteVector29;
        java.lang.Object obj31 = label22.info;
        java.lang.Object obj32 = label22.info;
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        java.lang.String str34 = label33.toString();
        java.lang.Object obj35 = label33.info;
        java.lang.Class<?> wildcardClass36 = label33.getClass();
        label22.info = wildcardClass36;
        java.lang.String str38 = label22.toString();
        java.lang.Class<?> wildcardClass39 = label22.getClass();
        label0.info = label22;
        java.lang.Object obj41 = label0.info;
        java.lang.Object obj42 = label0.info;
        java.lang.String str43 = label0.toString();
        java.lang.Object obj44 = label0.info;
        java.lang.Object obj45 = label0.info;
        java.lang.String str46 = label0.toString();
        java.lang.Class<?> wildcardClass47 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L783336600" + "'", str10, "L783336600");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L783336600" + "'", str19, "L783336600");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L360427979" + "'", str34, "L360427979");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1036465144" + "'", str38, "L1036465144");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj41);
// flaky:         org.junit.Assert.assertEquals(obj41.toString(), "L1036465144");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "L1036465144");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "L1036465144");
        org.junit.Assert.assertNotNull(obj42);
// flaky:         org.junit.Assert.assertEquals(obj42.toString(), "L1036465144");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "L1036465144");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "L1036465144");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L783336600" + "'", str43, "L783336600");
        org.junit.Assert.assertNotNull(obj44);
// flaky:         org.junit.Assert.assertEquals(obj44.toString(), "L1036465144");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "L1036465144");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "L1036465144");
        org.junit.Assert.assertNotNull(obj45);
// flaky:         org.junit.Assert.assertEquals(obj45.toString(), "L1036465144");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "L1036465144");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "L1036465144");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L783336600" + "'", str46, "L783336600");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test02016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02016");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        java.lang.String str26 = label0.toString();
        java.lang.Object obj27 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int28 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1365789761" + "'", str26, "L1365789761");
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test02017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02017");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L2130541591");
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L368897806");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02018");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L396091554" + "'", str10, "L396091554");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L396091554" + "'", str20, "L396091554");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L396091554" + "'", str21, "L396091554");
    }

    @Test
    public void test02019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02019");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1154477694");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L1325221534");
        java.lang.Class<?> wildcardClass23 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02020");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((-1));
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putInt(1);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putInt((-1));
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector31.putByteArray(byteArray43, 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector52 = byteVector20.putByteArray(byteArray43, (int) (byte) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
    }

    @Test
    public void test02021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02021");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt(1);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte(100);
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector80 = byteVector70.putByteArray(byteArray77, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector63.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector86 = byteVector54.putByteArray(byteArray77, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector89 = byteVector49.putByteArray(byteArray77, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector92 = byteVector32.putByteArray(byteArray77, (int) (short) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1304355247" + "'", str10, "L1304355247");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
    }

    @Test
    public void test02022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02022");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        java.lang.Class<?> wildcardClass5 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test02023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02023");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector5.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) '4');
        java.lang.Class<?> wildcardClass14 = byteVector11.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02024");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putByte((int) (short) 0);
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        label19.info = byteVector26;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong((long) 100);
        label19.info = byteVector34;
        org.mockito.asm.ByteVector byteVector39 = byteVector34.putShort(100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt(1);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putInt(0);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putByte(100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector61.putByteArray(byteArray73, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector54.putByteArray(byteArray73, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector39.putByteArray(byteArray73, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector18.putByteArray(byteArray73, (-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test02025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02025");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong(100L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((-1));
        java.lang.Class<?> wildcardClass27 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02026");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        label0.info = "L963025893";
        java.lang.Object obj18 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1090979971" + "'", str1, "L1090979971");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "L963025893" + "'", obj18, "L963025893");
    }

    @Test
    public void test02027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02027");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        java.lang.Object obj31 = label12.info;
        java.lang.String str32 = label12.toString();
        label12.info = 100L;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("hi!");
        label12.info = byteVector43;
        label0.info = label12;
        org.mockito.asm.Label label46 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        label46.info = byteVector53;
        java.lang.Object obj55 = label46.info;
        java.lang.String str56 = label46.toString();
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putShort((int) (byte) 10);
        label46.info = byteVector63;
        java.lang.String str65 = label46.toString();
        label46.info = '4';
        java.lang.String str68 = label46.toString();
        java.lang.Object obj69 = label46.info;
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putInt((int) (byte) 0);
        label46.info = byteVector80;
        label0.info = label46;
        java.lang.String str83 = label46.toString();
        label46.info = "L186080720";
        java.lang.String str86 = label46.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1785398679" + "'", str1, "L1785398679");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L451063421" + "'", str32, "L451063421");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L408453614" + "'", str56, "L408453614");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L408453614" + "'", str65, "L408453614");
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "L408453614" + "'", str68, "L408453614");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + '4' + "'", obj69, '4');
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L408453614" + "'", str83, "L408453614");
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L408453614" + "'", str86, "L408453614");
    }

    @Test
    public void test02028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02028");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02029");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        // The following exception was thrown during execution in test generation
        try {
            int int34 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L659790826" + "'", str10, "L659790826");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L659790826" + "'", str21, "L659790826");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02030");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        java.lang.Object obj30 = label0.info;
        java.lang.String str31 = label0.toString();
        java.lang.Class<?> wildcardClass32 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L537917715" + "'", str11, "L537917715");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L537917715" + "'", str28, "L537917715");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L537917715" + "'", str29, "L537917715");
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L537917715" + "'", str31, "L537917715");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test02031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02031");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        label35.info = ' ';
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putInt(0);
        label35.info = byteVector42;
        org.mockito.asm.ByteVector byteVector45 = byteVector42.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort(1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector70 = byteVector64.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        byte[] byteArray82 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector85 = byteVector75.putByteArray(byteArray82, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector88 = byteVector64.putByteArray(byteArray82, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector57.putByteArray(byteArray82, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector94 = byteVector53.putByteArray(byteArray82, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector97 = byteVector34.putByteArray(byteArray82, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector99 = byteVector34.putInt(0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L206893422" + "'", str20, "L206893422");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector94);
        org.junit.Assert.assertNotNull(byteVector97);
        org.junit.Assert.assertNotNull(byteVector99);
    }

    @Test
    public void test02032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02032");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str15 = label0.toString();
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        java.lang.Object obj27 = label17.info;
        label0.info = label17;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort(1);
        label17.info = byteVector41;
        java.lang.String str43 = label17.toString();
        java.lang.Object obj44 = label17.info;
        java.lang.Object obj45 = null;
        label17.info = obj45;
        java.lang.String str47 = label17.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1156966704" + "'", str10, "L1156966704");
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1156966704" + "'", str15, "L1156966704");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1154189449" + "'", str26, "L1154189449");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1154189449" + "'", str43, "L1154189449");
        org.junit.Assert.assertNotNull(obj44);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1154189449" + "'", str47, "L1154189449");
    }

    @Test
    public void test02033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02033");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        label0.info = (-1);
        java.lang.Object obj39 = label0.info;
        java.lang.Object obj40 = null;
        label0.info = obj40;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1596731743" + "'", str19, "L1596731743");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1596731743" + "'", str20, "L1596731743");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1) + "'", obj39, (-1));
    }

    @Test
    public void test02034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02034");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        label23.info = "L63967468";
        java.lang.Object obj56 = null;
        label23.info = obj56;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1851355340" + "'", str22, "L1851355340");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02035");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(1);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putByte(100);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector36.putByteArray(byteArray48, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector29.putByteArray(byteArray48, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector60 = byteVector14.putByteArray(byteArray48, (int) (short) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test02036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02036");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        java.lang.Class<?> wildcardClass9 = byteVector8.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test02037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02037");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        label0.info = "L56937410";
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label28.info = byteVector35;
        java.lang.Object obj37 = label28.info;
        java.lang.Object obj38 = label28.info;
        java.lang.Object obj39 = label28.info;
        label0.info = label28;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L972010418" + "'", str10, "L972010418");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L972010418" + "'", str19, "L972010418");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L972010418" + "'", str22, "L972010418");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L972010418" + "'", str24, "L972010418");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test02038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02038");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.String str17 = label0.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        label18.info = byteVector25;
        java.lang.Object obj27 = label18.info;
        java.lang.String str28 = label18.toString();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        label18.info = byteVector35;
        java.lang.String str37 = label18.toString();
        label18.info = '4';
        java.lang.String str40 = label18.toString();
        java.lang.Object obj41 = label18.info;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putByte((-1));
        label18.info = byteVector52;
        org.mockito.asm.ByteVector byteVector59 = byteVector52.putInt((int) (byte) -1);
        label0.info = byteVector59;
        java.lang.String str61 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int62 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L216552888" + "'", str17, "L216552888");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1532148080" + "'", str28, "L1532148080");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1532148080" + "'", str37, "L1532148080");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1532148080" + "'", str40, "L1532148080");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + '4' + "'", obj41, '4');
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L216552888" + "'", str61, "L216552888");
    }

    @Test
    public void test02039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02039");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt(10);
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt((int) (byte) 1);
        label0.info = (byte) 1;
        java.lang.String str25 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L53682829" + "'", str1, "L53682829");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L53682829" + "'", str2, "L53682829");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L53682829" + "'", str5, "L53682829");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L53682829" + "'", str25, "L53682829");
    }

    @Test
    public void test02040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02040");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1150804603");
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02041");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.String str13 = label0.toString();
        label0.info = "L368366164";
        java.lang.String str16 = label0.toString();
        java.lang.String str17 = label0.toString();
        java.lang.String str18 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1101138346" + "'", str1, "L1101138346");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1101138346" + "'", str13, "L1101138346");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1101138346" + "'", str16, "L1101138346");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1101138346" + "'", str17, "L1101138346");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1101138346" + "'", str18, "L1101138346");
    }

    @Test
    public void test02042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02042");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putByte(100);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector40 = byteVector30.putByteArray(byteArray37, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector25.putByteArray(byteArray37, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector46 = byteVector18.putByteArray(byteArray37, (int) ' ', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
    }

    @Test
    public void test02043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02043");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = null;
        label0.info = obj18;
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        label20.info = ' ';
        java.lang.String str23 = label20.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        label24.info = byteVector31;
        java.lang.Object obj33 = label24.info;
        java.lang.String str34 = label24.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        label24.info = byteVector41;
        java.lang.String str43 = label24.toString();
        label24.info = '4';
        java.lang.String str46 = label24.toString();
        java.lang.Object obj47 = label24.info;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putByte((-1));
        label24.info = byteVector58;
        label20.info = byteVector58;
        java.lang.Object obj65 = label20.info;
        label0.info = obj65;
        java.lang.Object obj67 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int68 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L364524886" + "'", str1, "L364524886");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L364524886" + "'", str15, "L364524886");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L364524886" + "'", str16, "L364524886");
        org.junit.Assert.assertNotNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1561306467" + "'", str23, "L1561306467");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1086318945" + "'", str34, "L1086318945");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1086318945" + "'", str43, "L1086318945");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1086318945" + "'", str46, "L1086318945");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + '4' + "'", obj47, '4');
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test02044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02044");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putInt(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1167115696");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L2025840233");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) (short) 0);
        java.lang.Class<?> wildcardClass25 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02045");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 1);
        label0.info = byteVector44;
        java.lang.Object obj48 = label0.info;
        java.lang.Class<?> wildcardClass49 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L69209855" + "'", str10, "L69209855");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L69209855" + "'", str19, "L69209855");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test02046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02046");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.Object obj10 = label0.info;
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte(0);
        label0.info = 0;
        java.lang.String str27 = label0.toString();
        java.lang.Object obj28 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L623720755" + "'", str9, "L623720755");
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L623720755" + "'", str27, "L623720755");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
    }

    @Test
    public void test02047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02047");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(10);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02048");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        label8.info = byteVector15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label8.info = byteVector23;
        java.lang.Object obj27 = label8.info;
        java.lang.Object obj28 = label8.info;
        java.lang.Object obj29 = label8.info;
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L922707703");
        label8.info = byteVector40;
        java.lang.Class<?> wildcardClass42 = byteVector40.getClass();
        label0.info = byteVector40;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort(100);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector56.putInt((int) (short) -1);
        label0.info = byteVector56;
        // The following exception was thrown during execution in test generation
        try {
            int int68 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1686035884" + "'", str1, "L1686035884");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
    }

    @Test
    public void test02049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02049");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L2094203655");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector14.putUTF8("");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02050");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02051");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L989414102");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02052");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L1029732739");
        org.mockito.asm.ByteVector byteVector18 = byteVector8.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector8.putUTF8("");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L333672923");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02053");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        java.lang.Class<?> wildcardClass21 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02054");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) (short) 10);
        label0.info = (short) 10;
        java.lang.Object obj26 = label0.info;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt(0);
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putByte(100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        java.lang.Class<?> wildcardClass36 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.Class<?> wildcardClass38 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L400060369" + "'", str1, "L400060369");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test02055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02055");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector9 = byteVector3.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte(1);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) (short) 100);
        java.lang.Class<?> wildcardClass14 = byteVector11.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02056");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort(1);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02057");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putShort((int) (byte) 100);
        java.lang.Class<?> wildcardClass21 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02058");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putShort((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
    }

    @Test
    public void test02059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02059");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02060");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt(10);
        java.lang.Class<?> wildcardClass11 = byteVector6.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02061");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (byte) 1);
        label0.info = (byte) 1;
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        label9.info = byteVector16;
        java.lang.Object obj18 = label9.info;
        java.lang.String str19 = label9.toString();
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (byte) 10);
        label9.info = byteVector26;
        java.lang.String str28 = label9.toString();
        java.lang.String str29 = label9.toString();
        label0.info = label9;
        label0.info = "L168731437";
        label0.info = "L205916576";
        // The following exception was thrown during execution in test generation
        try {
            int int35 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1374657395" + "'", str19, "L1374657395");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1374657395" + "'", str28, "L1374657395");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1374657395" + "'", str29, "L1374657395");
    }

    @Test
    public void test02062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02062");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte(100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector35 = byteVector25.putByteArray(byteArray32, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector20.putByteArray(byteArray32, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(0);
        label0.info = 0;
        // The following exception was thrown during execution in test generation
        try {
            int int44 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1770597538" + "'", str1, "L1770597538");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test02063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02063");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        java.lang.Object obj34 = label5.info;
        // The following exception was thrown during execution in test generation
        try {
            int int35 = label5.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1297343346" + "'", str1, "L1297343346");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1297343346" + "'", str2, "L1297343346");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1297343346" + "'", str4, "L1297343346");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1584109526" + "'", str6, "L1584109526");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1584109526" + "'", str20, "L1584109526");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1584109526" + "'", str21, "L1584109526");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1291851502" + "'", str31, "L1291851502");
// flaky:         org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "L1291851502" + "'", obj34, "L1291851502");
    }

    @Test
    public void test02064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02064");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str15 = label0.toString();
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        java.lang.Object obj27 = label17.info;
        label0.info = label17;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort(1);
        label17.info = byteVector41;
        java.lang.String str43 = label17.toString();
        java.lang.Class<?> wildcardClass44 = label17.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1952313164" + "'", str10, "L1952313164");
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1952313164" + "'", str15, "L1952313164");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L742425045" + "'", str26, "L742425045");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L742425045" + "'", str43, "L742425045");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test02065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02065");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.Object obj5 = label0.info;
        org.mockito.asm.ByteVector byteVector6 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        label0.info = (short) 10;
        java.lang.String str18 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L325418103" + "'", str1, "L325418103");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L325418103" + "'", str4, "L325418103");
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 0 + "'", obj5, (short) 0);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L325418103" + "'", str18, "L325418103");
    }

    @Test
    public void test02066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02066");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putLong((long) ' ');
        java.lang.Class<?> wildcardClass10 = byteVector9.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02067");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 0);
        label0.info = (short) 0;
        java.lang.String str27 = label0.toString();
        java.lang.Object obj28 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L300950029" + "'", str10, "L300950029");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L300950029" + "'", str12, "L300950029");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L300950029" + "'", str27, "L300950029");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 0 + "'", obj28, (short) 0);
    }

    @Test
    public void test02068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02068");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector13 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector15 = byteVector7.putLong(10L);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt(100);
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putLong((long) 'a');
        label0.info = byteVector23;
        java.lang.Object obj25 = label0.info;
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        label26.info = byteVector33;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) 100);
        label26.info = byteVector41;
        java.lang.Object obj45 = label26.info;
        java.lang.String str46 = label26.toString();
        label26.info = 100L;
        java.lang.Object obj49 = label26.info;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong(1L);
        label26.info = byteVector58;
        org.mockito.asm.ByteVector byteVector63 = byteVector58.putLong((long) 100);
        label0.info = 100;
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector65.putShort(10);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putShort(0);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putInt((int) (short) 10);
        label0.info = byteVector75;
        // The following exception was thrown during execution in test generation
        try {
            int int79 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L920339940" + "'", str1, "L920339940");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L920339940" + "'", str4, "L920339940");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L920339940" + "'", str5, "L920339940");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L920339940" + "'", str6, "L920339940");
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(obj45);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L719777356" + "'", str46, "L719777356");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02069");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L761195025");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02070");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        byte[] byteArray17 = null;
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByteArray(byteArray17, (int) '4', (int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02071");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        java.lang.String str53 = label4.toString();
        java.lang.Object obj54 = label4.info;
        // The following exception was thrown during execution in test generation
        try {
            int int55 = label4.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1631355705" + "'", str1, "L1631355705");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L577727731" + "'", str14, "L577727731");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L577727731" + "'", str23, "L577727731");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L577727731" + "'", str53, "L577727731");
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test02072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02072");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort(0);
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02073");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02074");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.Object obj36 = label0.info;
        java.lang.Object obj37 = null;
        label0.info = obj37;
        java.lang.Object obj39 = label0.info;
        java.lang.String str40 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1320486093" + "'", str22, "L1320486093");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(obj39);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1320486093" + "'", str40, "L1320486093");
    }

    @Test
    public void test02075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02075");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.Object obj28 = label0.info;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong(1L);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector53;
        // The following exception was thrown during execution in test generation
        try {
            int int55 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L848136096" + "'", str1, "L848136096");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L848136096" + "'", str15, "L848136096");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L848136096" + "'", str16, "L848136096");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L2002447964" + "'", str26, "L2002447964");
// flaky:         org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "L2002447964" + "'", obj28, "L2002447964");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
    }

    @Test
    public void test02076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02076");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        java.lang.Object obj31 = label12.info;
        java.lang.String str32 = label12.toString();
        label12.info = 100L;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("hi!");
        label12.info = byteVector43;
        label0.info = label12;
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        label12.info = byteVector46;
        org.mockito.asm.ByteVector byteVector49 = byteVector46.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1987414100" + "'", str1, "L1987414100");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L684220946" + "'", str32, "L684220946");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02077");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putInt((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putInt((int) '4');
        label0.info = '4';
        java.lang.String str54 = label0.toString();
        java.lang.Object obj55 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int56 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L684929317" + "'", str54, "L684929317");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + '4' + "'", obj55, '4');
    }

    @Test
    public void test02078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02078");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str15 = label0.toString();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByte(100);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector37 = byteVector27.putByteArray(byteArray34, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector22.putByteArray(byteArray34, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) (byte) 100);
        label0.info = byteVector42;
        java.lang.String str46 = label0.toString();
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong(1L);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("L1752958545");
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("L592163852");
        label0.info = byteVector63;
        org.mockito.asm.ByteVector byteVector66 = byteVector63.putLong(100L);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L497078567" + "'", str10, "L497078567");
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L497078567" + "'", str15, "L497078567");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L497078567" + "'", str46, "L497078567");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
    }

    @Test
    public void test02079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02079");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        label26.info = byteVector33;
        java.lang.Object obj35 = label26.info;
        java.lang.String str36 = label26.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong(1L);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) (short) 100);
        label26.info = byteVector51;
        org.mockito.asm.ByteVector byteVector54 = byteVector51.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector51.putLong(0L);
        org.mockito.asm.ByteVector byteVector58 = byteVector51.putUTF8("");
        org.mockito.asm.ByteVector byteVector60 = byteVector51.putByte((int) (byte) -1);
        label0.info = byteVector60;
        org.mockito.asm.ByteVector byteVector63 = byteVector60.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) (byte) -1);
        java.lang.Class<?> wildcardClass66 = byteVector63.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1409363943" + "'", str19, "L1409363943");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1409363943" + "'", str24, "L1409363943");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L670691380" + "'", str36, "L670691380");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test02080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02080");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("L1551169447");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putInt(0);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector9 = byteVector3.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte(100);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(1);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putByte(100);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector36.putByteArray(byteArray48, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector27.putByteArray(byteArray48, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector10.putByteArray(byteArray48, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector63 = byteVector9.putByteArray(byteArray48, (int) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
    }

    @Test
    public void test02081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02081");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putInt(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1167115696");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L2025840233");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) 0);
        byte[] byteArray22 = new byte[] { (byte) 10 };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector25 = byteVector20.putByteArray(byteArray22, (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10]");
    }

    @Test
    public void test02082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02082");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02083");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putByte((-1));
        label0.info = byteVector34;
        org.mockito.asm.ByteVector byteVector41 = byteVector34.putInt((int) (byte) -1);
        java.lang.Class<?> wildcardClass42 = byteVector34.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1553981501" + "'", str10, "L1553981501");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1553981501" + "'", str19, "L1553981501");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1553981501" + "'", str22, "L1553981501");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test02084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02084");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt(100);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putUTF8("L898404690");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (byte) 10);
        label0.info = byteVector33;
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        label37.info = byteVector44;
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) 100);
        label37.info = byteVector52;
        org.mockito.asm.ByteVector byteVector57 = byteVector52.putShort(100);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putUTF8("L966497915");
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector65 = byteVector57.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((-1L));
        java.lang.Class<?> wildcardClass68 = byteVector65.getClass();
        label0.info = wildcardClass68;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1033699821" + "'", str10, "L1033699821");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test02085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02085");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte(10);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putByte((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02086");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        java.lang.Object obj31 = label12.info;
        java.lang.String str32 = label12.toString();
        label12.info = 100L;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("hi!");
        label12.info = byteVector43;
        label0.info = label12;
        java.lang.Object obj46 = label12.info;
        java.lang.String str47 = label12.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int48 = label12.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L664314816" + "'", str1, "L664314816");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1061066058" + "'", str32, "L1061066058");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1061066058" + "'", str47, "L1061066058");
    }

    @Test
    public void test02087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02087");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(1);
        label0.info = byteVector21;
        java.lang.Object obj25 = label0.info;
        java.lang.String str26 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L420226072" + "'", str1, "L420226072");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L420226072" + "'", str15, "L420226072");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L420226072" + "'", str26, "L420226072");
    }

    @Test
    public void test02088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02088");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt((int) ' ');
        java.lang.Class<?> wildcardClass21 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02089");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        label0.info = byteVector20;
        java.lang.Object obj24 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1616762515" + "'", str1, "L1616762515");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test02090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02090");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L423871624" + "'", str10, "L423871624");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L423871624" + "'", str19, "L423871624");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L423871624" + "'", str20, "L423871624");
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L423871624" + "'", str22, "L423871624");
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test02091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02091");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02092");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort(10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L239625386");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong((long) '4');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02093");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L193054640" + "'", str22, "L193054640");
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test02094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02094");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (byte) 1);
        label0.info = (byte) 1;
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        label9.info = byteVector16;
        java.lang.Object obj18 = label9.info;
        java.lang.String str19 = label9.toString();
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (byte) 10);
        label9.info = byteVector26;
        java.lang.String str28 = label9.toString();
        java.lang.String str29 = label9.toString();
        label0.info = label9;
        java.lang.String str31 = label0.toString();
        label0.info = "L1519817410";
        // The following exception was thrown during execution in test generation
        try {
            int int34 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L900754601" + "'", str19, "L900754601");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L900754601" + "'", str28, "L900754601");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L900754601" + "'", str29, "L900754601");
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1390122117" + "'", str31, "L1390122117");
    }

    @Test
    public void test02095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02095");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putUTF8("L327667548");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02096");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02097");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 10);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, (int) (byte) 1, 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L191399149");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L326373616");
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((-1L));
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putInt(0);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort(1);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putUTF8("L941510936");
        byte[] byteArray68 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putByteArray(byteArray68, 0, 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector48.putByteArray(byteArray68, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector41.putByteArray(byteArray68, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector80 = byteVector18.putByteArray(byteArray68, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02098");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L307033792");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02099");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (short) -1);
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02100");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector9 = byteVector3.putByte((int) (byte) 10);
        java.lang.Class<?> wildcardClass10 = byteVector9.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02101");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putByte((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) (short) 10);
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector35 = byteVector32.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector37 = byteVector32.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("L1895501535");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1240723609" + "'", str10, "L1240723609");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1240723609" + "'", str19, "L1240723609");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1240723609" + "'", str20, "L1240723609");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1240723609" + "'", str21, "L1240723609");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
    }

    @Test
    public void test02102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02102");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putInt(100);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putUTF8("");
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putLong(10L);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong(10L);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector65.putByteArray(byteArray81, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector90 = byteVector48.putByteArray(byteArray81, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector93 = byteVector33.putByteArray(byteArray81, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector96 = byteVector16.putByteArray(byteArray81, (-1), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test02103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02103");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        label0.info = (-1);
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        java.lang.Object obj48 = label39.info;
        java.lang.String str49 = label39.toString();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        label39.info = "hi!";
        java.lang.Object obj54 = label39.info;
        java.lang.Object obj55 = label39.info;
        label39.info = "";
        java.lang.Object obj58 = label39.info;
        java.lang.Object obj59 = label39.info;
        java.lang.Object obj60 = label39.info;
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putLong(1L);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector77 = byteVector73.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putUTF8("L1150804603");
        label39.info = byteVector79;
        label0.info = byteVector79;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L334654074" + "'", str19, "L334654074");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L334654074" + "'", str20, "L334654074");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1514860963" + "'", str49, "L1514860963");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "hi!" + "'", obj54, "hi!");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "hi!" + "'", obj55, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test02104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02104");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((-1));
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02105");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(100);
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector37 = byteVector29.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector29.putLong(1L);
        label0.info = 1L;
        java.lang.Class<?> wildcardClass41 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1929995857" + "'", str10, "L1929995857");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1929995857" + "'", str16, "L1929995857");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test02106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02106");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L2130541591");
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putShort((int) (short) -1);
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02107");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L465592951");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong(10L);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02108");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        java.lang.Object obj31 = label12.info;
        java.lang.String str32 = label12.toString();
        label12.info = 100L;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("hi!");
        label12.info = byteVector43;
        label0.info = label12;
        java.lang.Object obj46 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int47 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L78005300" + "'", str1, "L78005300");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L358011428" + "'", str32, "L358011428");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals(obj46.toString(), "L358011428");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "L358011428");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "L358011428");
    }

    @Test
    public void test02109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02109");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) (-1));
        label0.info = byteVector17;
        org.mockito.asm.ByteVector byteVector20 = byteVector17.putUTF8("L1640776053");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L596369166");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort(1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02110");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.Object obj22 = label0.info;
        java.lang.String str23 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1516088037" + "'", str10, "L1516088037");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1516088037" + "'", str20, "L1516088037");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1516088037" + "'", str23, "L1516088037");
    }

    @Test
    public void test02111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02111");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L2094203655");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02112");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1024735804");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02113");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L184022116");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((-1L));
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putInt(1);
        org.mockito.asm.ByteVector byteVector23 = byteVector15.putInt((-1));
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByteArray(byteArray35, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector23.putByteArray(byteArray35, 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector44 = byteVector14.putByteArray(byteArray35, (int) (byte) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test02114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02114");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02115");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putShort((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02116");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1752958545");
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort(10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt(1);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putInt(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putByte(100);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector60 = byteVector50.putByteArray(byteArray57, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector63 = byteVector45.putByteArray(byteArray57, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector36.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector25.putByteArray(byteArray57, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector72 = byteVector14.putByteArray(byteArray57, (int) (short) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test02117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02117");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putInt(10);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt(1);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putInt(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putByte(100);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector70 = byteVector60.putByteArray(byteArray67, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector73 = byteVector55.putByteArray(byteArray67, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector76 = byteVector48.putByteArray(byteArray67, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector29.putByteArray(byteArray67, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector82 = byteVector18.putByteArray(byteArray67, (int) (byte) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test02118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02118");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02119");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        label0.info = "L637422777";
        java.lang.Object obj25 = label0.info;
        java.lang.Class<?> wildcardClass26 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L640467569" + "'", str22, "L640467569");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "L637422777" + "'", obj25, "L637422777");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test02120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02120");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '#');
        java.lang.Class<?> wildcardClass9 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test02121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02121");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putUTF8("");
        org.mockito.asm.ByteVector byteVector19 = byteVector11.putLong(10L);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong(10L);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte(1);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putByteArray(byteArray69, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector53.putByteArray(byteArray69, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector36.putByteArray(byteArray69, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector21.putByteArray(byteArray69, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector10.putByteArray(byteArray69, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test02122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02122");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(1L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) 1);
        label0.info = byteVector23;
        java.lang.Object obj31 = null;
        label0.info = obj31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int35 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L677982587" + "'", str1, "L677982587");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L677982587" + "'", str33, "L677982587");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L677982587" + "'", str34, "L677982587");
    }

    @Test
    public void test02123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02123");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L281063096");
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02124");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putLong(0L);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02125");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.Object obj28 = label0.info;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong(1L);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector53;
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        label55.info = byteVector62;
        java.lang.Object obj64 = label55.info;
        java.lang.String str65 = label55.toString();
        java.lang.Object obj66 = label55.info;
        java.lang.String str67 = label55.toString();
        java.lang.String str68 = label55.toString();
        java.lang.String str69 = label55.toString();
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector70.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector82 = byteVector76.putByte((int) 'a');
        label55.info = byteVector76;
        java.lang.Object obj84 = label55.info;
        org.mockito.asm.ByteVector byteVector85 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector89 = byteVector85.putInt(0);
        org.mockito.asm.ByteVector byteVector91 = byteVector85.putInt(1);
        org.mockito.asm.ByteVector byteVector93 = byteVector85.putInt((-1));
        label55.info = (-1);
        label0.info = label55;
        // The following exception was thrown during execution in test generation
        try {
            int int96 = label55.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L59561019" + "'", str1, "L59561019");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L59561019" + "'", str15, "L59561019");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L59561019" + "'", str16, "L59561019");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L756756034" + "'", str26, "L756756034");
// flaky:         org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "L756756034" + "'", obj28, "L756756034");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L1568718042" + "'", str65, "L1568718042");
        org.junit.Assert.assertNotNull(obj66);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1568718042" + "'", str67, "L1568718042");
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "L1568718042" + "'", str68, "L1568718042");
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1568718042" + "'", str69, "L1568718042");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test02126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02126");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 100);
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02127");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = null;
        label0.info = obj18;
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        label20.info = ' ';
        java.lang.String str23 = label20.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        label24.info = byteVector31;
        java.lang.Object obj33 = label24.info;
        java.lang.String str34 = label24.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        label24.info = byteVector41;
        java.lang.String str43 = label24.toString();
        label24.info = '4';
        java.lang.String str46 = label24.toString();
        java.lang.Object obj47 = label24.info;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putByte((-1));
        label24.info = byteVector58;
        label20.info = byteVector58;
        java.lang.Object obj65 = label20.info;
        label0.info = obj65;
        java.lang.Object obj67 = label0.info;
        java.lang.String str68 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int69 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2104827800" + "'", str1, "L2104827800");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2104827800" + "'", str15, "L2104827800");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L2104827800" + "'", str16, "L2104827800");
        org.junit.Assert.assertNotNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L2106472712" + "'", str23, "L2106472712");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L300346258" + "'", str34, "L300346258");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L300346258" + "'", str43, "L300346258");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L300346258" + "'", str46, "L300346258");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + '4' + "'", obj47, '4');
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "L2104827800" + "'", str68, "L2104827800");
    }

    @Test
    public void test02128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02128");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02129");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Class<?> wildcardClass2 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1945472844" + "'", str1, "L1945472844");
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test02130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02130");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putInt((-1));
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putInt(0);
        org.mockito.asm.ByteVector byteVector13 = byteVector7.putByte(100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt(1);
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte(100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector54 = byteVector44.putByteArray(byteArray51, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector37.putByteArray(byteArray51, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector28.putByteArray(byteArray51, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector63 = byteVector23.putByteArray(byteArray51, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector66 = byteVector6.putByteArray(byteArray51, (int) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test02131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02131");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        java.lang.Object obj21 = label19.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L90138980");
        label19.info = byteVector30;
        java.lang.Object obj32 = label19.info;
        java.lang.Object obj33 = label19.info;
        java.lang.Object obj34 = null;
        label19.info = obj34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        label19.info = byteVector44;
        org.mockito.asm.ByteVector byteVector47 = byteVector44.putLong(100L);
        label0.info = byteVector47;
        java.lang.String str49 = label0.toString();
        java.lang.String str50 = label0.toString();
        java.lang.String str51 = label0.toString();
        java.lang.Object obj52 = label0.info;
        label0.info = "L1960743888";
        java.lang.String str55 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int56 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L404937259" + "'", str10, "L404937259");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L66137377" + "'", str20, "L66137377");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L404937259" + "'", str49, "L404937259");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L404937259" + "'", str50, "L404937259");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L404937259" + "'", str51, "L404937259");
        org.junit.Assert.assertNotNull(obj52);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L404937259" + "'", str55, "L404937259");
    }

    @Test
    public void test02132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02132");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putInt(10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (short) 100);
        java.lang.Class<?> wildcardClass29 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02133");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        label0.info = "L499234616";
        java.lang.String str17 = label0.toString();
        java.lang.Object obj18 = label0.info;
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        label19.info = (short) 0;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        label19.info = wildcardClass25;
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        label27.info = byteVector34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) 100);
        label27.info = byteVector42;
        java.lang.Object obj46 = label27.info;
        java.lang.Object obj47 = label27.info;
        java.lang.Object obj48 = label27.info;
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L922707703");
        label27.info = byteVector59;
        java.lang.Class<?> wildcardClass61 = byteVector59.getClass();
        label19.info = byteVector59;
        label0.info = label19;
        // The following exception was thrown during execution in test generation
        try {
            int int64 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1311637795" + "'", str1, "L1311637795");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1311637795" + "'", str4, "L1311637795");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1311637795" + "'", str17, "L1311637795");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "L499234616" + "'", obj18, "L499234616");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1069511070" + "'", str20, "L1069511070");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test02134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02134");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putShort(10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt(1);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt(0);
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putByte(100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector58 = byteVector48.putByteArray(byteArray55, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector43.putByteArray(byteArray55, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector64 = byteVector34.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector23.putByteArray(byteArray55, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector70 = byteVector12.putByteArray(byteArray55, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
    }

    @Test
    public void test02135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02135");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.Object obj28 = label0.info;
        java.lang.Object obj29 = label0.info;
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong(0L);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector48 = byteVector42.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("L1466454467");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte((int) (byte) 10);
        label0.info = byteVector54;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L875963489" + "'", str11, "L875963489");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
    }

    @Test
    public void test02136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02136");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((-1));
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putUTF8("");
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putLong(10L);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong(10L);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector65.putByteArray(byteArray81, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector90 = byteVector48.putByteArray(byteArray81, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector93 = byteVector33.putByteArray(byteArray81, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector96 = byteVector20.putByteArray(byteArray81, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test02137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02137");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.String str36 = label0.toString();
        java.lang.String str37 = label0.toString();
        java.lang.String str38 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int39 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1472697894" + "'", str10, "L1472697894");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1472697894" + "'", str19, "L1472697894");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1472697894" + "'", str36, "L1472697894");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1472697894" + "'", str37, "L1472697894");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1472697894" + "'", str38, "L1472697894");
    }

    @Test
    public void test02138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02138");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) '#');
        java.lang.Class<?> wildcardClass27 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02139");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong(10L);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L2055400366");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test02140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02140");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.Object obj28 = label0.info;
        java.lang.Object obj29 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1911178334" + "'", str11, "L1911178334");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test02141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02141");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L1432728380");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02142");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.Object obj36 = label0.info;
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) '4');
        label0.info = '4';
        java.lang.Class<?> wildcardClass43 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1584409654" + "'", str10, "L1584409654");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1584409654" + "'", str19, "L1584409654");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1) + "'", obj36, (-1));
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test02143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02143");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putUTF8("L1082024160");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) (short) 10);
        java.lang.Class<?> wildcardClass13 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02144");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putByte((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
    }

    @Test
    public void test02145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02145");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort(10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("L230057508");
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) 100 };
        org.mockito.asm.ByteVector byteVector57 = byteVector49.putByteArray(byteArray54, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector60 = byteVector38.putByteArray(byteArray54, (int) ' ', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 100]");
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test02146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02146");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) 'a');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector7 = byteVector1.putUTF8("L513182391");
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putUTF8("");
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong(10L);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte(1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector69 = byteVector59.putByteArray(byteArray66, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector50.putByteArray(byteArray66, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector33.putByteArray(byteArray66, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector18.putByteArray(byteArray66, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector81 = byteVector1.putByteArray(byteArray66, (int) '4', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test02147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02147");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1481910834");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L1168003705");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1904403129");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((int) '#');
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02148");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        label0.info = "L732392118";
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = label0.info;
        label0.info = "L1522897946";
        // The following exception was thrown during execution in test generation
        try {
            int int16 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1132644070" + "'", str9, "L1132644070");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1132644070" + "'", str12, "L1132644070");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "L732392118" + "'", obj13, "L732392118");
    }

    @Test
    public void test02149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02149");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        java.lang.Class<?> wildcardClass9 = byteVector6.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test02150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02150");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str15 = label0.toString();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByte(100);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector37 = byteVector27.putByteArray(byteArray34, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector22.putByteArray(byteArray34, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) (byte) 100);
        label0.info = byteVector42;
        java.lang.String str46 = label0.toString();
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong(1L);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("L1752958545");
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("L592163852");
        label0.info = byteVector63;
        org.mockito.asm.ByteVector byteVector66 = byteVector63.putLong(100L);
        org.mockito.asm.ByteVector byteVector68 = byteVector63.putInt(10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L971874204" + "'", str10, "L971874204");
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L971874204" + "'", str15, "L971874204");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L971874204" + "'", str46, "L971874204");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
    }

    @Test
    public void test02151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02151");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L1083998948");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) -1);
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02152");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L190384593");
        label0.info = byteVector34;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong(0L);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector51;
        org.mockito.asm.ByteVector byteVector56 = byteVector51.putUTF8("L334258890");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putByte((int) (byte) 0);
        java.lang.Class<?> wildcardClass61 = byteVector60.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L277607696" + "'", str11, "L277607696");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L277607696" + "'", str36, "L277607696");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test02153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02153");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L898404690");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt(0);
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putByte(100);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte(10);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong(100L);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt(1);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector69 = byteVector63.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector63.putByteArray(byteArray81, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector56.putByteArray(byteArray81, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector52.putByteArray(byteArray81, 1, 0);
        org.mockito.asm.ByteVector byteVector96 = byteVector29.putByteArray(byteArray81, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector99 = byteVector18.putByteArray(byteArray81, 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
    }

    @Test
    public void test02154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02154");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02155");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) ' ');
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02156");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 10);
        label0.info = byteVector16;
        label0.info = "L454126987";
        java.lang.Object obj20 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1939784697" + "'", str3, "L1939784697");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "L454126987" + "'", obj20, "L454126987");
    }

    @Test
    public void test02157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02157");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L2130541591");
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (byte) 100);
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02158");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.Object obj22 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int23 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1113784404" + "'", str10, "L1113784404");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test02159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02159");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label12.info = byteVector37;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '4');
        label12.info = byteVector43;
        java.lang.String str45 = label12.toString();
        java.lang.Object obj46 = label12.info;
        java.lang.Object obj47 = label12.info;
        label0.info = label12;
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putUTF8("");
        org.mockito.asm.ByteVector byteVector57 = byteVector49.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putUTF8("L917836053");
        label12.info = byteVector49;
        // The following exception was thrown during execution in test generation
        try {
            int int61 = label12.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1479599166" + "'", str1, "L1479599166");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L863641937" + "'", str22, "L863641937");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L863641937" + "'", str45, "L863641937");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02160");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort((int) (short) -1);
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        label21.info = ' ';
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        label21.info = byteVector28;
        org.mockito.asm.ByteVector byteVector31 = byteVector28.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort(1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putByteArray(byteArray68, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector50.putByteArray(byteArray68, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector43.putByteArray(byteArray68, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector80 = byteVector39.putByteArray(byteArray68, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector83 = byteVector14.putByteArray(byteArray68, (int) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
    }

    @Test
    public void test02161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02161");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (short) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("L940563630");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(1);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt(0);
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putByte(100);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector42 = byteVector32.putByteArray(byteArray39, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector27.putByteArray(byteArray39, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector48 = byteVector18.putByteArray(byteArray39, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector51 = byteVector5.putByteArray(byteArray39, (int) (short) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
    }

    @Test
    public void test02162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02162");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02163");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 0);
        label0.info = (short) 0;
        java.lang.String str27 = label0.toString();
        java.lang.Object obj28 = label0.info;
        label0.info = "L1091898525";
        java.lang.Object obj31 = label0.info;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putShort(0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L1378462366");
        label0.info = byteVector42;
        java.lang.Object obj46 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int47 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L91130599" + "'", str10, "L91130599");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L91130599" + "'", str12, "L91130599");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L91130599" + "'", str27, "L91130599");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 0 + "'", obj28, (short) 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "L1091898525" + "'", obj31, "L1091898525");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test02164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02164");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L713879861");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort(100);
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putShort(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02165");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putUTF8("L917752574");
        java.lang.Class<?> wildcardClass8 = byteVector7.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test02166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02166");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt(0);
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putByte(100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((int) ' ');
        label0.info = byteVector41;
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        label43.info = byteVector50;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) 100);
        label43.info = byteVector58;
        java.lang.Object obj62 = label43.info;
        java.lang.String str63 = label43.toString();
        label43.info = 100L;
        java.lang.Object obj66 = label43.info;
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong(1L);
        label43.info = byteVector75;
        org.mockito.asm.ByteVector byteVector80 = byteVector75.putShort((int) (short) 10);
        label0.info = (short) 10;
        label0.info = "L1587738251";
        java.lang.Class<?> wildcardClass84 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L517285492" + "'", str1, "L517285492");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1238925121" + "'", str63, "L1238925121");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test02167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02167");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L475512202");
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt(100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) '#');
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        java.lang.String str31 = label30.toString();
        java.lang.Object obj32 = label30.info;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putUTF8("L90138980");
        label30.info = byteVector41;
        java.lang.Object obj43 = label30.info;
        java.lang.Object obj44 = label30.info;
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte(0);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((-1));
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector55.putByteArray(byteArray73, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector48.putByteArray(byteArray73, (int) (short) 0, 0);
        label30.info = byteArray73;
        org.mockito.asm.ByteVector byteVector86 = byteVector29.putByteArray(byteArray73, (int) (short) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector89 = byteVector12.putByteArray(byteArray73, (int) (byte) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L688568894" + "'", str31, "L688568894");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector86);
    }

    @Test
    public void test02168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02168");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        java.lang.Object obj31 = label12.info;
        java.lang.String str32 = label12.toString();
        label12.info = 100L;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("hi!");
        label12.info = byteVector43;
        label0.info = label12;
        java.lang.Object obj46 = label12.info;
        java.lang.Class<?> wildcardClass47 = label12.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1861884359" + "'", str1, "L1861884359");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L2089034646" + "'", str32, "L2089034646");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test02169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02169");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L941510936");
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02170");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte(10);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector56 = byteVector46.putByteArray(byteArray53, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector37.putByteArray(byteArray53, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector62 = byteVector24.putByteArray(byteArray53, (-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02171");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02172");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.String str32 = label0.toString();
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.String str35 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1906058825" + "'", str10, "L1906058825");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1906058825" + "'", str32, "L1906058825");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1906058825" + "'", str33, "L1906058825");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1906058825" + "'", str34, "L1906058825");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1906058825" + "'", str35, "L1906058825");
    }

    @Test
    public void test02173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02173");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector5.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt(100);
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte((int) (short) -1);
        byte[] byteArray26 = new byte[] { (byte) 100, (byte) 0, (byte) 0, (byte) 10, (byte) 1, (byte) -1 };
        org.mockito.asm.ByteVector byteVector29 = byteVector19.putByteArray(byteArray26, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector32 = byteVector0.putByteArray(byteArray26, (int) (short) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100, 0, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(byteVector29);
    }

    @Test
    public void test02174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02174");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt(1);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector48 = byteVector42.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector63 = byteVector53.putByteArray(byteArray60, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector42.putByteArray(byteArray60, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector35.putByteArray(byteArray60, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector72 = byteVector31.putByteArray(byteArray60, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector75 = byteVector12.putByteArray(byteArray60, (-1), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test02175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02175");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label0.info;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte(0);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte(100);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putUTF8("L855288385");
        label0.info = byteVector65;
        org.mockito.asm.ByteVector byteVector68 = byteVector65.putLong(1L);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L383276907" + "'", str22, "L383276907");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals(obj54.toString(), "L979292505");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "L979292505");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "L979292505");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
    }

    @Test
    public void test02176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02176");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putShort(0);
        java.lang.Class<?> wildcardClass17 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02177");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        java.lang.Object obj26 = label0.info;
        java.lang.Class<?> wildcardClass27 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1265025838" + "'", str19, "L1265025838");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1265025838" + "'", str24, "L1265025838");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02178");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (short) 1);
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02179");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (byte) 0);
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02180");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putUTF8("L512853346");
        org.mockito.asm.ByteVector byteVector12 = byteVector0.putUTF8("L332577830");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02181");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 100);
        label0.info = (byte) 100;
        java.lang.String str37 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int38 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1788982486" + "'", str1, "L1788982486");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1788982486" + "'", str37, "L1788982486");
    }

    @Test
    public void test02182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02182");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L855288385");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L212441124");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte(0);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02183");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (short) 1);
        label0.info = (short) 1;
        java.lang.Object obj56 = label0.info;
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector75 = byteVector69.putLong((-1L));
        org.mockito.asm.ByteVector byteVector77 = byteVector69.putInt((int) (byte) 10);
        label0.info = byteVector77;
        java.lang.Object obj79 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int80 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1124423024" + "'", str10, "L1124423024");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1124423024" + "'", str33, "L1124423024");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1124423024" + "'", str34, "L1124423024");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 1 + "'", obj56, (short) 1);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test02184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02184");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) '#');
        java.lang.Class<?> wildcardClass21 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02185");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Class<?> wildcardClass6 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L600825134" + "'", str1, "L600825134");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L600825134" + "'", str4, "L600825134");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L600825134" + "'", str5, "L600825134");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test02186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02186");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putUTF8("L1923921447");
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByte((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02187");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort(1);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putUTF8("L941510936");
        byte[] byteArray24 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector27 = byteVector17.putByteArray(byteArray24, 0, 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector4.putByteArray(byteArray24, (int) (byte) 0, 0);
        java.lang.Class<?> wildcardClass31 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test02188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02188");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        java.lang.Object obj22 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L11807126" + "'", str10, "L11807126");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L11807126" + "'", str21, "L11807126");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
    }

    @Test
    public void test02189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02189");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02190");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.Object obj33 = label0.info;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.String str36 = label35.toString();
        label35.info = (short) 0;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass41 = byteVector40.getClass();
        label35.info = wildcardClass41;
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        label43.info = byteVector50;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) 100);
        label43.info = byteVector58;
        java.lang.Object obj62 = label43.info;
        java.lang.Object obj63 = label43.info;
        java.lang.Object obj64 = label43.info;
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("L922707703");
        label43.info = byteVector75;
        java.lang.Class<?> wildcardClass77 = byteVector75.getClass();
        label35.info = byteVector75;
        java.lang.Object obj79 = null;
        label35.info = obj79;
        label0.info = label35;
        java.lang.Object obj82 = label35.info;
        java.lang.Object obj83 = label35.info;
        java.lang.Object obj84 = null;
        label35.info = obj84;
        java.lang.Object obj86 = label35.info;
        java.lang.String str87 = label35.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L491580868" + "'", str10, "L491580868");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L491580868" + "'", str34, "L491580868");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L363779841" + "'", str36, "L363779841");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj86);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L363779841" + "'", str87, "L363779841");
    }

    @Test
    public void test02191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02191");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt(1);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putByte(100);
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector45 = byteVector35.putByteArray(byteArray42, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector30.putByteArray(byteArray42, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector51 = byteVector21.putByteArray(byteArray42, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector54 = byteVector6.putByteArray(byteArray42, (-1), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02192");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((-1L));
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02193");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 100);
        label0.info = byteVector40;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) 1);
        label0.info = 1;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt(10);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((int) (byte) 100);
        label0.info = (byte) 100;
        java.lang.Object obj56 = label0.info;
        java.lang.Object obj57 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1040972612" + "'", str10, "L1040972612");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1040972612" + "'", str21, "L1040972612");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
    }

    @Test
    public void test02194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02194");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L2039482370");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt((int) (short) 100);
        java.lang.Class<?> wildcardClass21 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02195");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1154477694");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong(1L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector54 = byteVector44.putByteArray(byteArray51, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector35.putByteArray(byteArray51, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector60 = byteVector22.putByteArray(byteArray51, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test02196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02196");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 'a');
        java.lang.Class<?> wildcardClass13 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02197");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L230057508");
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 100 };
        org.mockito.asm.ByteVector byteVector35 = byteVector27.putByteArray(byteArray32, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector38 = byteVector14.putByteArray(byteArray32, (int) (short) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 100]");
        org.junit.Assert.assertNotNull(byteVector35);
    }

    @Test
    public void test02198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02198");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 10);
        label0.info = byteVector12;
        org.mockito.asm.ByteVector byteVector19 = byteVector12.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort(100);
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putInt((int) (byte) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1470964265" + "'", str1, "L1470964265");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
    }

    @Test
    public void test02199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02199");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L596369166");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt(1);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putByte(100);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector53 = byteVector43.putByteArray(byteArray50, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector38.putByteArray(byteArray50, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector29.putByteArray(byteArray50, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector62 = byteVector18.putByteArray(byteArray50, (int) ' ', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02200");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int22 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L700818166" + "'", str10, "L700818166");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L700818166" + "'", str20, "L700818166");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
    }

    @Test
    public void test02201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02201");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.Object obj7 = label0.info;
        java.lang.String str8 = label0.toString();
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L164412258" + "'", str1, "L164412258");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L164412258" + "'", str4, "L164412258");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L164412258" + "'", str5, "L164412258");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 0 + "'", obj7, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L164412258" + "'", str8, "L164412258");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 0 + "'", obj9, (short) 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 0 + "'", obj10, (short) 0);
    }

    @Test
    public void test02202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02202");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong(0L);
        java.lang.Class<?> wildcardClass7 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test02203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02203");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) -1);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByteArray(byteArray11, (int) (short) -1, (int) '4');
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02204");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putByte(100);
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt(1);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putByte(100);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector56 = byteVector46.putByteArray(byteArray53, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector41.putByteArray(byteArray53, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector62 = byteVector32.putByteArray(byteArray53, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector65 = byteVector15.putByteArray(byteArray53, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putInt(0);
        org.mockito.asm.ByteVector byteVector72 = byteVector66.putByte(100);
        org.mockito.asm.ByteVector byteVector73 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector77 = byteVector73.putShort((-1));
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putUTF8("hi!");
        byte[] byteArray84 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector87 = byteVector77.putByteArray(byteArray84, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector90 = byteVector72.putByteArray(byteArray84, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector15.putByteArray(byteArray84, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector96 = byteVector14.putByteArray(byteArray84, (int) (short) 1, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector98 = byteVector96.putUTF8("L602115599");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test02205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02205");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(100);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector37 = byteVector27.putByteArray(byteArray34, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByteArray(byteArray34, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector11.putByteArray(byteArray34, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector46 = byteVector6.putByteArray(byteArray34, 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
    }

    @Test
    public void test02206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02206");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("L45150108");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putByte(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02207");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte(100);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt(100);
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((-1));
        label0.info = byteVector47;
        org.mockito.asm.ByteVector byteVector52 = byteVector47.putLong((long) '4');
        java.lang.Class<?> wildcardClass53 = byteVector47.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1819575973" + "'", str20, "L1819575973");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test02208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02208");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int17 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L458964084" + "'", str1, "L458964084");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L458964084" + "'", str4, "L458964084");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test02209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02209");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) -1);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByteArray(byteArray11, (int) (short) -1, (int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong((-1L));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1623475694");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putInt(10);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt(0);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putByte(100);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putByteArray(byteArray69, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector57.putByteArray(byteArray69, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector50.putByteArray(byteArray69, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector31.putByteArray(byteArray69, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector18.putByteArray(byteArray69, (int) '4', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test02210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02210");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label16.info = ' ';
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector26 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(1);
        label0.info = byteVector26;
        org.mockito.asm.ByteVector byteVector33 = byteVector26.putByte(0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L708307267" + "'", str10, "L708307267");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L708307267" + "'", str12, "L708307267");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L708307267" + "'", str15, "L708307267");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
    }

    @Test
    public void test02211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02211");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        java.lang.String str53 = label0.toString();
        org.mockito.asm.Label label54 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        label54.info = byteVector61;
        java.lang.Object obj63 = label54.info;
        java.lang.Object obj64 = label54.info;
        java.lang.String str65 = label54.toString();
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector76 = byteVector70.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector78 = byteVector70.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("L596369166");
        label54.info = byteVector78;
        java.lang.String str82 = label54.toString();
        java.lang.Object obj83 = label54.info;
        label0.info = label54;
        java.lang.Class<?> wildcardClass85 = label54.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1546772438" + "'", str1, "L1546772438");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1196186243" + "'", str14, "L1196186243");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1196186243" + "'", str23, "L1196186243");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L1546772438" + "'", str53, "L1546772438");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L212230428" + "'", str65, "L212230428");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L212230428" + "'", str82, "L212230428");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test02212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02212");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L46931455");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putUTF8("L1412540007");
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putUTF8("L1612577973");
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (byte) 100);
        java.lang.Class<?> wildcardClass37 = byteVector34.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test02213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02213");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1149339365");
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector44 = byteVector34.putByteArray(byteArray41, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector47 = byteVector23.putByteArray(byteArray41, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector50 = byteVector14.putByteArray(byteArray41, (-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
    }

    @Test
    public void test02214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02214");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02215");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort(1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L941510936");
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector42 = byteVector32.putByteArray(byteArray39, 0, 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector19.putByteArray(byteArray39, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector48 = byteVector14.putByteArray(byteArray39, 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass49 = byteArray39.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test02216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02216");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        label0.info = "L637422777";
        java.lang.Object obj25 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int26 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1579503500" + "'", str22, "L1579503500");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "L637422777" + "'", obj25, "L637422777");
    }

    @Test
    public void test02217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02217");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort(10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(100);
        java.lang.Class<?> wildcardClass38 = byteVector35.getClass();
        label0.info = wildcardClass38;
        java.lang.String str40 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1839452877" + "'", str19, "L1839452877");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1839452877" + "'", str24, "L1839452877");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(wildcardClass38);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1839452877" + "'", str40, "L1839452877");
    }

    @Test
    public void test02218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02218");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 10);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, (int) (byte) 1, 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(1);
        java.lang.Class<?> wildcardClass23 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02219");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) 100);
        label20.info = byteVector35;
        java.lang.Object obj39 = label20.info;
        java.lang.Object obj40 = label20.info;
        java.lang.Object obj41 = label20.info;
        java.lang.String str42 = label20.toString();
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putInt(0);
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass54 = byteVector53.getClass();
        label20.info = byteVector53;
        java.lang.String str56 = label20.toString();
        java.lang.Object obj57 = label20.info;
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        label58.info = ' ';
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putInt(0);
        label58.info = byteVector65;
        org.mockito.asm.ByteVector byteVector68 = byteVector65.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort(1);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putInt((int) (short) 1);
        label20.info = byteVector72;
        label0.info = byteVector72;
        java.lang.Class<?> wildcardClass79 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L638021745" + "'", str1, "L638021745");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L638021745" + "'", str15, "L638021745");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L638021745" + "'", str16, "L638021745");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "L1404822831" + "'", obj19, "L1404822831");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L634498249" + "'", str42, "L634498249");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(wildcardClass54);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L634498249" + "'", str56, "L634498249");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test02220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02220");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort(0);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort(0);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte(0);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((-1));
        label0.info = byteVector50;
        java.lang.Object obj52 = label0.info;
        java.lang.Class<?> wildcardClass53 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L695657076" + "'", str11, "L695657076");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L695657076" + "'", str28, "L695657076");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L695657076" + "'", str29, "L695657076");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test02221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02221");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) 'a');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putByte(0);
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putUTF8("L1663430528");
        java.lang.Class<?> wildcardClass10 = byteVector9.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02222");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector4.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong(100L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("L374832530");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putInt(0);
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putInt(1);
        org.mockito.asm.ByteVector byteVector48 = byteVector40.putInt((-1));
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector63 = byteVector53.putByteArray(byteArray60, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector48.putByteArray(byteArray60, 1, 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector37.putByteArray(byteArray60, (int) (byte) 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector72 = byteVector24.putByteArray(byteArray60, (int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test02223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02223");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong(10L);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector52 = byteVector42.putByteArray(byteArray49, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector31.putByteArray(byteArray49, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector58 = byteVector25.putByteArray(byteArray49, (int) (byte) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1926459255" + "'", str1, "L1926459255");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test02224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02224");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.String str19 = label0.toString();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector30.putByteArray(byteArray48, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector23.putByteArray(byteArray48, (int) (short) 0, 0);
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putInt((int) (byte) 100);
        label0.info = byteVector71;
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector78 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector82 = byteVector78.putShort((-1));
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putUTF8("hi!");
        label77.info = byteVector84;
        java.lang.Object obj86 = label77.info;
        java.lang.String str87 = label77.toString();
        org.mockito.asm.ByteVector byteVector88 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector90 = byteVector88.putUTF8("hi!");
        label77.info = "hi!";
        java.lang.Object obj92 = label77.info;
        java.lang.String str93 = label77.toString();
        java.lang.String str94 = label77.toString();
        label0.info = label77;
        java.lang.Class<?> wildcardClass96 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1993820213" + "'", str1, "L1993820213");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1993820213" + "'", str15, "L1993820213");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1993820213" + "'", str16, "L1993820213");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1993820213" + "'", str19, "L1993820213");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(obj86);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L1351895580" + "'", str87, "L1351895580");
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + "hi!" + "'", obj92, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "L1351895580" + "'", str93, "L1351895580");
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L1351895580" + "'", str94, "L1351895580");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test02225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02225");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) ' ');
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        label29.info = ' ';
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt(0);
        label29.info = byteVector36;
        org.mockito.asm.ByteVector byteVector39 = byteVector36.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((-1L));
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort(0);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte(100);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector67 = byteVector57.putByteArray(byteArray64, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector73 = byteVector45.putByteArray(byteArray64, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector76 = byteVector26.putByteArray(byteArray64, (int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02226");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        java.lang.Object obj26 = label0.info;
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L399635101" + "'", str10, "L399635101");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L399635101" + "'", str19, "L399635101");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L399635101" + "'", str22, "L399635101");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L399635101" + "'", str24, "L399635101");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + '4' + "'", obj26, '4');
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02227");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.String str30 = label0.toString();
        java.lang.Object obj31 = label0.info;
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L352919100" + "'", str30, "L352919100");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1 + "'", obj31, 1);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test02228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02228");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        label0.info = "L159729243";
        // The following exception was thrown during execution in test generation
        try {
            int int47 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1493313849" + "'", str3, "L1493313849");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L285888122" + "'", str14, "L285888122");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L285888122" + "'", str23, "L285888122");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L285888122" + "'", str26, "L285888122");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test02229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02229");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putUTF8("L1332878305");
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector10.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector24 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector33 = byteVector25.putLong(10L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte(1);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putUTF8("hi!");
        byte[] byteArray83 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector86 = byteVector76.putByteArray(byteArray83, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector89 = byteVector67.putByteArray(byteArray83, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector92 = byteVector50.putByteArray(byteArray83, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector95 = byteVector35.putByteArray(byteArray83, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector98 = byteVector10.putByteArray(byteArray83, (int) '4', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector95);
    }

    @Test
    public void test02230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02230");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt(10);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt(1);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putInt(0);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putByte(100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector61.putByteArray(byteArray73, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector54.putByteArray(byteArray73, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector35.putByteArray(byteArray73, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector24.putByteArray(byteArray73, (int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test02231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02231");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1853087546");
        java.lang.Class<?> wildcardClass21 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02232");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str15 = label0.toString();
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        java.lang.Object obj27 = label17.info;
        label0.info = label17;
        java.lang.String str29 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L70971394" + "'", str10, "L70971394");
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L70971394" + "'", str15, "L70971394");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1703680583" + "'", str26, "L1703680583");
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L70971394" + "'", str29, "L70971394");
    }

    @Test
    public void test02233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02233");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1716327418");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02234");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong(100L);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02235");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1515679778");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02236");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        java.lang.String str39 = label0.toString();
        java.lang.Object obj40 = label0.info;
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        java.lang.Class<?> wildcardClass44 = byteVector43.getClass();
        label0.info = wildcardClass44;
        java.lang.String str46 = label0.toString();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        label47.info = ' ';
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt(0);
        label47.info = byteVector54;
        org.mockito.asm.ByteVector byteVector57 = byteVector54.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putLong((-1L));
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort(0);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putByte(100);
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        byte[] byteArray82 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector85 = byteVector75.putByteArray(byteArray82, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector88 = byteVector68.putByteArray(byteArray82, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector63.putByteArray(byteArray82, 0, 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector91.putByte((int) (byte) 100);
        label0.info = byteVector91;
        label0.info = "L609273528";
        // The following exception was thrown during execution in test generation
        try {
            int int97 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L83106431" + "'", str20, "L83106431");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L83106431" + "'", str39, "L83106431");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 100 + "'", obj40, (short) 100);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(wildcardClass44);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L83106431" + "'", str46, "L83106431");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test02237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02237");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        label7.info = byteVector14;
        org.mockito.asm.ByteVector byteVector17 = byteVector14.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        label0.info = byteVector19;
        org.mockito.asm.ByteVector byteVector24 = byteVector19.putUTF8("L364607495");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (byte) -1);
        java.lang.Class<?> wildcardClass27 = byteVector24.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1168501125" + "'", str1, "L1168501125");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1168501125" + "'", str4, "L1168501125");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1168501125" + "'", str5, "L1168501125");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02238");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        java.lang.String str23 = label0.toString();
        java.lang.Object obj24 = label0.info;
        java.lang.Object obj25 = label0.info;
        java.lang.Object obj26 = label0.info;
        java.lang.String str27 = label0.toString();
        java.lang.Object obj28 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L887163163" + "'", str20, "L887163163");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L887163163" + "'", str23, "L887163163");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L887163163" + "'", str27, "L887163163");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
    }

    @Test
    public void test02239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02239");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (byte) 10);
        java.lang.Class<?> wildcardClass23 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02240");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02241");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(1);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putByte(100);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector53 = byteVector43.putByteArray(byteArray50, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector38.putByteArray(byteArray50, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector31.putByteArray(byteArray50, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector62 = byteVector12.putByteArray(byteArray50, (int) (byte) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02242");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong(1L);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putInt((int) (byte) 1);
        label0.info = byteVector43;
        java.lang.String str51 = label0.toString();
        java.lang.Object obj52 = label0.info;
        java.lang.Object obj53 = label0.info;
        java.lang.Object obj54 = label0.info;
        java.lang.Object obj55 = label0.info;
        java.lang.Object obj56 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int57 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1908374490" + "'", str22, "L1908374490");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1908374490" + "'", str36, "L1908374490");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L1908374490" + "'", str51, "L1908374490");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test02243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02243");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putByte(0);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putShort((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
    }

    @Test
    public void test02244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02244");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort(1);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label13.info = ' ';
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt(0);
        label13.info = byteVector20;
        org.mockito.asm.ByteVector byteVector23 = byteVector20.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector48 = byteVector42.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector63 = byteVector53.putByteArray(byteArray60, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector42.putByteArray(byteArray60, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector35.putByteArray(byteArray60, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector72 = byteVector31.putByteArray(byteArray60, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector75 = byteVector10.putByteArray(byteArray60, (int) (short) 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test02245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02245");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.Object obj33 = label0.info;
        java.lang.Object obj34 = label0.info;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putUTF8("");
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putLong(10L);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt(100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort(1);
        label0.info = byteVector49;
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        label51.info = byteVector58;
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putLong((long) 100);
        label51.info = byteVector66;
        org.mockito.asm.ByteVector byteVector71 = byteVector66.putShort(1);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putLong(100L);
        org.mockito.asm.ByteVector byteVector77 = byteVector71.putUTF8("L1310345801");
        label0.info = byteVector71;
        org.mockito.asm.ByteVector byteVector80 = byteVector71.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector82 = byteVector71.putUTF8("L715281679");
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putLong((long) (short) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1557006132" + "'", str10, "L1557006132");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
    }

    @Test
    public void test02246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02246");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((-1L));
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        label19.info = byteVector26;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong((long) 100);
        label19.info = byteVector34;
        java.lang.Object obj38 = label19.info;
        java.lang.String str39 = label19.toString();
        label19.info = 100L;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector42.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector42.putUTF8("hi!");
        label19.info = byteVector50;
        org.mockito.asm.ByteVector byteVector53 = byteVector50.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putInt(1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putShort(0);
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putInt((int) (byte) 100);
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector68.putByteArray(byteArray79, (int) (byte) 1, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector53.putByteArray(byteArray79, 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector18.putByteArray(byteArray79, (int) (short) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(obj38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L142561284" + "'", str39, "L142561284");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test02247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02247");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putByte((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) -1);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector32 = byteVector27.putInt(1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L494260209" + "'", str10, "L494260209");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02248");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putLong((-1L));
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt(0);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putByte((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort(1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putUTF8("L941510936");
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector78 = byteVector68.putByteArray(byteArray75, 0, 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector55.putByteArray(byteArray75, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector48.putByteArray(byteArray75, 0, 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector25.putByteArray(byteArray75, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector90 = byteVector16.putByteArray(byteArray75, (int) (short) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test02249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02249");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '4');
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02250");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        java.lang.Object obj38 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int39 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L114652193" + "'", str10, "L114652193");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L114652193" + "'", str19, "L114652193");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L114652193" + "'", str36, "L114652193");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1) + "'", obj37, (-1));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1) + "'", obj38, (-1));
    }

    @Test
    public void test02251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02251");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '#');
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02252");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.String str30 = label0.toString();
        java.lang.Object obj31 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1910401702" + "'", str30, "L1910401702");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1 + "'", obj31, 1);
    }

    @Test
    public void test02253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02253");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putByteArray(byteArray56, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector49.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("L713879861");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("L596369166");
        label0.info = "L596369166";
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        label67.info = byteVector74;
        java.lang.Object obj76 = label67.info;
        java.lang.String str77 = label67.toString();
        org.mockito.asm.ByteVector byteVector78 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        label67.info = "hi!";
        java.lang.Object obj82 = label67.info;
        java.lang.Object obj83 = label67.info;
        label67.info = "";
        java.lang.Object obj86 = label67.info;
        java.lang.String str87 = label67.toString();
        label0.info = label67;
        label0.info = "L260370228";
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L499947450" + "'", str3, "L499947450");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1010365074" + "'", str14, "L1010365074");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1010365074" + "'", str23, "L1010365074");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1010365074" + "'", str26, "L1010365074");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(obj76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1188231604" + "'", str77, "L1188231604");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L1188231604" + "'", str87, "L1188231604");
    }

    @Test
    public void test02254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02254");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong(10L);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L829880968");
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02255");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.Object obj36 = label0.info;
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) '4');
        label0.info = '4';
        java.lang.String str43 = label0.toString();
        java.lang.String str44 = label0.toString();
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("L769754150");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte((int) (byte) 100);
        label0.info = (byte) 100;
        // The following exception was thrown during execution in test generation
        try {
            int int59 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1121724136" + "'", str10, "L1121724136");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1121724136" + "'", str19, "L1121724136");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1) + "'", obj36, (-1));
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1121724136" + "'", str43, "L1121724136");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1121724136" + "'", str44, "L1121724136");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test02256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02256");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1752958545");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L592163852");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (byte) 10);
        java.lang.Class<?> wildcardClass23 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02257");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(10L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02258");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        java.lang.Class<?> wildcardClass6 = byteVector3.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test02259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02259");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L2094203655");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1207852355");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02260");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L298231111" + "'", str21, "L298231111");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L298231111" + "'", str22, "L298231111");
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L298231111" + "'", str24, "L298231111");
    }

    @Test
    public void test02261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02261");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((-1L));
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong(10L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte(1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector75 = byteVector65.putByteArray(byteArray72, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector56.putByteArray(byteArray72, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector39.putByteArray(byteArray72, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector24.putByteArray(byteArray72, 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test02262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02262");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte(10);
        java.lang.Class<?> wildcardClass37 = byteVector34.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test02263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02263");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        java.lang.String str34 = label5.toString();
        java.lang.String str35 = label5.toString();
        java.lang.Object obj36 = label5.info;
        java.lang.Object obj37 = label5.info;
        // The following exception was thrown during execution in test generation
        try {
            int int38 = label5.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L732058064" + "'", str1, "L732058064");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L732058064" + "'", str2, "L732058064");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L732058064" + "'", str4, "L732058064");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1237072899" + "'", str6, "L1237072899");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1237072899" + "'", str20, "L1237072899");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1237072899" + "'", str21, "L1237072899");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L412057552" + "'", str31, "L412057552");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1237072899" + "'", str34, "L1237072899");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1237072899" + "'", str35, "L1237072899");
// flaky:         org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "L412057552" + "'", obj36, "L412057552");
// flaky:         org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "L412057552" + "'", obj37, "L412057552");
    }

    @Test
    public void test02264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02264");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong(0L);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) 1);
        label0.info = byteVector43;
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        label45.info = byteVector52;
        java.lang.Object obj54 = label45.info;
        java.lang.String str55 = label45.toString();
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) (byte) 10);
        label45.info = byteVector62;
        java.lang.String str64 = label45.toString();
        label45.info = '4';
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putLong((long) (-1));
        label45.info = (-1);
        org.mockito.asm.ByteVector byteVector81 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector85 = byteVector81.putShort((-1));
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putUTF8("");
        org.mockito.asm.ByteVector byteVector89 = byteVector85.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector91 = byteVector85.putLong((long) (short) 10);
        label45.info = byteVector91;
        java.lang.Object obj93 = label45.info;
        java.lang.String str94 = label45.toString();
        java.lang.Object obj95 = label45.info;
        label0.info = label45;
        java.lang.String str97 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1772614163" + "'", str10, "L1772614163");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1772614163" + "'", str22, "L1772614163");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L627413677" + "'", str55, "L627413677");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L627413677" + "'", str64, "L627413677");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(obj93);
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L627413677" + "'", str94, "L627413677");
        org.junit.Assert.assertNotNull(obj95);
// flaky:         org.junit.Assert.assertEquals("'" + str97 + "' != '" + "L1772614163" + "'", str97, "L1772614163");
    }

    @Test
    public void test02265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02265");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L289255380");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) (byte) 100);
        java.lang.Class<?> wildcardClass27 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02266");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) '4');
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02267");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt(0);
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putByte(100);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putInt(0);
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putByte(100);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        byte[] byteArray59 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector62 = byteVector52.putByteArray(byteArray59, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector47.putByteArray(byteArray59, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector68 = byteVector38.putByteArray(byteArray59, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector21.putByteArray(byteArray59, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector74 = byteVector18.putByteArray(byteArray59, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
    }

    @Test
    public void test02268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02268");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putUTF8("L1102599342");
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L102057911");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong(100L);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong((long) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02269");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L477291235");
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02270");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort(1);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putUTF8("L941510936");
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector47 = byteVector37.putByteArray(byteArray44, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector50 = byteVector26.putByteArray(byteArray44, (int) (byte) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector47);
    }

    @Test
    public void test02271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02271");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong(0L);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(0);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putLong(100L);
        label0.info = byteVector40;
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        label48.info = byteVector55;
        java.lang.Object obj57 = label48.info;
        java.lang.String str58 = label48.toString();
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector59.putShort((int) (byte) 10);
        label48.info = byteVector65;
        java.lang.String str67 = label48.toString();
        label48.info = '4';
        java.lang.String str70 = label48.toString();
        java.lang.Object obj71 = label48.info;
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector82 = byteVector78.putInt((int) (byte) 0);
        label48.info = byteVector82;
        label0.info = byteVector82;
        org.mockito.asm.ByteVector byteVector86 = byteVector82.putUTF8("L248435636");
        org.mockito.asm.ByteVector byteVector88 = byteVector82.putUTF8("L1070241559");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1282133371" + "'", str19, "L1282133371");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(obj57);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L1310708699" + "'", str58, "L1310708699");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1310708699" + "'", str67, "L1310708699");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1310708699" + "'", str70, "L1310708699");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + '4' + "'", obj71, '4');
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
    }

    @Test
    public void test02272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02272");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putLong((long) (short) 10);
        label0.info = byteVector46;
        java.lang.Object obj48 = label0.info;
        org.mockito.asm.Label label49 = new org.mockito.asm.Label();
        java.lang.String str50 = label49.toString();
        java.lang.Object obj51 = label49.info;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putUTF8("L90138980");
        label49.info = byteVector60;
        java.lang.Object obj62 = label49.info;
        java.lang.Object obj63 = label49.info;
        java.lang.String str64 = label49.toString();
        label0.info = label49;
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putInt(0);
        org.mockito.asm.ByteVector byteVector72 = byteVector66.putByte(100);
        org.mockito.asm.ByteVector byteVector73 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector77 = byteVector73.putShort((-1));
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putUTF8("hi!");
        byte[] byteArray84 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector87 = byteVector77.putByteArray(byteArray84, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector90 = byteVector72.putByteArray(byteArray84, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector72.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector94 = byteVector92.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector96 = byteVector92.putByte(0);
        label49.info = byteVector96;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1362993774" + "'", str10, "L1362993774");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1362993774" + "'", str19, "L1362993774");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L702512648" + "'", str50, "L702512648");
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L702512648" + "'", str64, "L702512648");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector94);
        org.junit.Assert.assertNotNull(byteVector96);
    }

    @Test
    public void test02273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02273");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putInt(0);
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putByte(100);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector61 = byteVector51.putByteArray(byteArray58, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector46.putByteArray(byteArray58, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector39.putByteArray(byteArray58, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector70 = byteVector22.putByteArray(byteArray58, (int) (byte) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
    }

    @Test
    public void test02274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02274");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L190384593");
        label0.info = byteVector34;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong(0L);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector51;
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        label55.info = ' ';
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        label58.info = byteVector65;
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putLong((long) 100);
        label58.info = byteVector73;
        org.mockito.asm.ByteVector byteVector78 = byteVector73.putShort(1);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putLong((long) 100);
        label55.info = 100;
        label0.info = 100;
        // The following exception was thrown during execution in test generation
        try {
            int int83 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1743936887" + "'", str11, "L1743936887");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1743936887" + "'", str36, "L1743936887");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
    }

    @Test
    public void test02275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02275");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putByte((int) 'a');
        label0.info = byteVector21;
        java.lang.String str29 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1735912315" + "'", str10, "L1735912315");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1735912315" + "'", str12, "L1735912315");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1735912315" + "'", str13, "L1735912315");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1735912315" + "'", str14, "L1735912315");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1735912315" + "'", str29, "L1735912315");
    }

    @Test
    public void test02276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02276");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        java.lang.Object obj7 = label0.info;
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L512683190" + "'", str1, "L512683190");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L512683190" + "'", str4, "L512683190");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L512683190" + "'", str5, "L512683190");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L512683190" + "'", str6, "L512683190");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 0 + "'", obj7, (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test02277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02277");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        java.lang.Object obj10 = label7.info;
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putLong((long) 'a');
        label7.info = byteVector15;
        java.lang.String str23 = label7.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        label24.info = ' ';
        java.lang.String str27 = label24.toString();
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label28.info = byteVector35;
        java.lang.Object obj37 = label28.info;
        java.lang.String str38 = label28.toString();
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) (byte) 10);
        label28.info = byteVector45;
        java.lang.String str47 = label28.toString();
        label28.info = '4';
        java.lang.String str50 = label28.toString();
        java.lang.Object obj51 = label28.info;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putByte((-1));
        label28.info = byteVector62;
        label24.info = byteVector62;
        java.lang.Object obj69 = label24.info;
        label7.info = label24;
        java.lang.Object obj71 = label24.info;
        label0.info = label24;
        java.lang.Object obj73 = label24.info;
        java.lang.String str74 = label24.toString();
        org.mockito.asm.ByteVector byteVector75 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putShort((-1));
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector87 = byteVector83.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector89 = byteVector87.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector91 = byteVector89.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector93 = byteVector91.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector95 = byteVector93.putInt((int) (byte) -1);
        label24.info = byteVector95;
        java.lang.Class<?> wildcardClass97 = byteVector95.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1865595649" + "'", str1, "L1865595649");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1865595649" + "'", str5, "L1865595649");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1865595649" + "'", str6, "L1865595649");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + ' ' + "'", obj10, ' ');
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L16220862" + "'", str23, "L16220862");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1496416626" + "'", str27, "L1496416626");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(obj37);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L228075599" + "'", str38, "L228075599");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L228075599" + "'", str47, "L228075599");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L228075599" + "'", str50, "L228075599");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + '4' + "'", obj51, '4');
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1496416626" + "'", str74, "L1496416626");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test02278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02278");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putByteArray(byteArray56, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector49.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("L713879861");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("L596369166");
        label0.info = "L596369166";
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        label67.info = byteVector74;
        java.lang.Object obj76 = label67.info;
        java.lang.String str77 = label67.toString();
        org.mockito.asm.ByteVector byteVector78 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        label67.info = "hi!";
        java.lang.Object obj82 = label67.info;
        java.lang.Object obj83 = label67.info;
        label67.info = "";
        java.lang.Object obj86 = label67.info;
        java.lang.String str87 = label67.toString();
        label0.info = label67;
        java.lang.String str89 = label67.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L712993382" + "'", str3, "L712993382");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1003621504" + "'", str14, "L1003621504");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1003621504" + "'", str23, "L1003621504");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1003621504" + "'", str26, "L1003621504");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(obj76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L477153439" + "'", str77, "L477153439");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L477153439" + "'", str87, "L477153439");
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L477153439" + "'", str89, "L477153439");
    }

    @Test
    public void test02279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02279");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.String str13 = label0.toString();
        label0.info = "L368366164";
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) 100);
        label16.info = byteVector31;
        java.lang.String str35 = label16.toString();
        java.lang.Object obj36 = label16.info;
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector(1);
        label16.info = byteVector38;
        org.mockito.asm.ByteVector byteVector41 = byteVector38.putLong((long) (short) 1);
        label0.info = byteVector38;
        java.lang.Object obj43 = label0.info;
        java.lang.String str44 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int45 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1746704227" + "'", str1, "L1746704227");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1746704227" + "'", str13, "L1746704227");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1553166427" + "'", str35, "L1553166427");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1746704227" + "'", str44, "L1746704227");
    }

    @Test
    public void test02280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02280");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByte((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02281");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) '#');
        java.lang.Class<?> wildcardClass19 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02282");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1911581425");
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(1);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L503224541");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02283");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02284");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 10);
        label0.info = byteVector12;
        org.mockito.asm.ByteVector byteVector19 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putUTF8("");
        org.mockito.asm.ByteVector byteVector32 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putLong(10L);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte(1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        byte[] byteArray82 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector85 = byteVector75.putByteArray(byteArray82, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector88 = byteVector66.putByteArray(byteArray82, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector91 = byteVector49.putByteArray(byteArray82, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector94 = byteVector34.putByteArray(byteArray82, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector97 = byteVector23.putByteArray(byteArray82, 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1926297342" + "'", str1, "L1926297342");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector94);
    }

    @Test
    public void test02285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02285");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong(1L);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putInt((int) (byte) 1);
        label0.info = byteVector43;
        java.lang.String str51 = label0.toString();
        java.lang.Object obj52 = label0.info;
        java.lang.Object obj53 = label0.info;
        org.mockito.asm.Label label54 = new org.mockito.asm.Label();
        java.lang.String str55 = label54.toString();
        label54.info = (short) 0;
        java.lang.String str58 = label54.toString();
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putInt(10);
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putLong((long) '4');
        label54.info = byteVector67;
        label0.info = label54;
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        label70.info = byteVector77;
        java.lang.Object obj79 = label70.info;
        java.lang.Object obj80 = label70.info;
        java.lang.Object obj81 = label70.info;
        label0.info = label70;
        java.lang.String str83 = label70.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int84 = label70.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L481120051" + "'", str22, "L481120051");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L481120051" + "'", str36, "L481120051");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L481120051" + "'", str51, "L481120051");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L1472803183" + "'", str55, "L1472803183");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L1472803183" + "'", str58, "L1472803183");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L1355841083" + "'", str83, "L1355841083");
    }

    @Test
    public void test02286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02286");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L365983649");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02287");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putShort((int) (short) 0);
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        label17.info = byteVector24;
        org.mockito.asm.ByteVector byteVector27 = byteVector24.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((-1L));
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(0);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray52, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector33.putByteArray(byteArray52, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector64 = byteVector10.putByteArray(byteArray52, (int) (byte) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test02288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02288");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putLong((-1L));
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
    }

    @Test
    public void test02289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02289");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("");
        byte[] byteArray21 = null;
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByteArray(byteArray21, 1, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02290");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        java.lang.Object obj9 = null;
        label0.info = obj9;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector33 = byteVector23.putByteArray(byteArray30, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector36 = byteVector18.putByteArray(byteArray30, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector38 = byteVector18.putUTF8("L1482577042");
        org.mockito.asm.ByteVector byteVector40 = byteVector18.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (short) 10);
        label0.info = byteVector42;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt(1);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putByte((int) (short) 100);
        label0.info = byteVector64;
        // The following exception was thrown during execution in test generation
        try {
            int int68 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1715857174" + "'", str11, "L1715857174");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
    }

    @Test
    public void test02291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02291");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        byte[] byteArray13 = null;
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByteArray(byteArray13, 100, (int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02292");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putUTF8("");
        org.mockito.asm.ByteVector byteVector23 = byteVector15.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt(1);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putInt(1);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putInt(0);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putByte(100);
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector81 = byteVector71.putByteArray(byteArray78, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector84 = byteVector66.putByteArray(byteArray78, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector57.putByteArray(byteArray78, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector44.putByteArray(byteArray78, 0, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector27.putByteArray(byteArray78, 0, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector96 = byteVector12.putByteArray(byteArray78, 1, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector98 = byteVector12.putUTF8("");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(byteVector96);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test02293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02293");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L941510936");
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putByteArray(byteArray17, 0, 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1309162730");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort(100);
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02294");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        label7.info = byteVector14;
        java.lang.Object obj16 = label7.info;
        java.lang.String str17 = label7.toString();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putShort((int) (byte) 10);
        label7.info = byteVector24;
        java.lang.Object obj26 = label7.info;
        java.lang.Object obj27 = label7.info;
        java.lang.String str28 = label7.toString();
        java.lang.String str29 = label7.toString();
        label0.info = str29;
        java.lang.Object obj31 = label0.info;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong(0L);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putInt((int) ' ');
        label0.info = byteVector48;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L185089592" + "'", str1, "L185089592");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L185089592" + "'", str4, "L185089592");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L185089592" + "'", str5, "L185089592");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1710036726" + "'", str17, "L1710036726");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1710036726" + "'", str28, "L1710036726");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1710036726" + "'", str29, "L1710036726");
// flaky:         org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "L1710036726" + "'", obj31, "L1710036726");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
    }

    @Test
    public void test02295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02295");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        java.lang.String str23 = label0.toString();
        java.lang.Object obj24 = label0.info;
        java.lang.String str25 = label0.toString();
        java.lang.Class<?> wildcardClass26 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1666372357" + "'", str20, "L1666372357");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1666372357" + "'", str23, "L1666372357");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1666372357" + "'", str25, "L1666372357");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test02296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02296");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putShort(0);
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong(10L);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector54 = byteVector44.putByteArray(byteArray51, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector35.putByteArray(byteArray51, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector18.putByteArray(byteArray51, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector63 = byteVector3.putByteArray(byteArray51, (int) '#', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
    }

    @Test
    public void test02297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02297");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1556884366");
        label0.info = byteVector29;
        org.mockito.asm.ByteVector byteVector34 = byteVector29.putUTF8("L1620842203");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L950202447" + "'", str10, "L950202447");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L950202447" + "'", str20, "L950202447");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test02298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02298");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort(10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(100);
        java.lang.Class<?> wildcardClass38 = byteVector35.getClass();
        label0.info = wildcardClass38;
        // The following exception was thrown during execution in test generation
        try {
            int int40 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L395454384" + "'", str19, "L395454384");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L395454384" + "'", str24, "L395454384");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test02299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02299");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putUTF8("L1482577042");
        org.mockito.asm.ByteVector byteVector28 = byteVector6.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (short) 10);
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        label31.info = ' ';
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        label31.info = byteVector38;
        org.mockito.asm.ByteVector byteVector41 = byteVector38.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort(1);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector81 = byteVector71.putByteArray(byteArray78, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector84 = byteVector60.putByteArray(byteArray78, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector53.putByteArray(byteArray78, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector49.putByteArray(byteArray78, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector93 = byteVector30.putByteArray(byteArray78, (int) 'a', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
    }

    @Test
    public void test02300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02300");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector34 = byteVector24.putByteArray(byteArray31, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector19.putByteArray(byteArray31, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector40 = byteVector10.putByteArray(byteArray31, (int) (short) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
    }

    @Test
    public void test02301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02301");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        label7.info = byteVector14;
        org.mockito.asm.ByteVector byteVector17 = byteVector14.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        label0.info = byteVector19;
        java.lang.Object obj23 = label0.info;
        java.lang.Object obj24 = label0.info;
        java.lang.Object obj25 = label0.info;
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        label26.info = byteVector33;
        java.lang.Object obj35 = label26.info;
        java.lang.String str36 = label26.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        label26.info = "hi!";
        java.lang.Object obj41 = label26.info;
        java.lang.Object obj42 = label26.info;
        label26.info = "";
        java.lang.Object obj45 = label26.info;
        java.lang.String str46 = label26.toString();
        label0.info = label26;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector48.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector60 = byteVector54.putByte((int) 'a');
        label26.info = 'a';
        java.lang.String str62 = label26.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int63 = label26.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L474467886" + "'", str1, "L474467886");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L474467886" + "'", str4, "L474467886");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L474467886" + "'", str5, "L474467886");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L183135794" + "'", str36, "L183135794");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "hi!" + "'", obj42, "hi!");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L183135794" + "'", str46, "L183135794");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L183135794" + "'", str62, "L183135794");
    }

    @Test
    public void test02302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02302");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        java.lang.Object obj21 = label19.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L90138980");
        label19.info = byteVector30;
        java.lang.Object obj32 = label19.info;
        java.lang.Object obj33 = label19.info;
        java.lang.Object obj34 = null;
        label19.info = obj34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        label19.info = byteVector44;
        org.mockito.asm.ByteVector byteVector47 = byteVector44.putLong(100L);
        label0.info = byteVector47;
        java.lang.String str49 = label0.toString();
        java.lang.String str50 = label0.toString();
        java.lang.String str51 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int52 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L493412239" + "'", str10, "L493412239");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1472290732" + "'", str20, "L1472290732");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L493412239" + "'", str49, "L493412239");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L493412239" + "'", str50, "L493412239");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L493412239" + "'", str51, "L493412239");
    }

    @Test
    public void test02303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02303");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector25.putByteArray(byteArray43, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector52 = byteVector18.putByteArray(byteArray43, (int) (short) 0, 0);
        label0.info = byteArray43;
        java.lang.Object obj54 = null;
        label0.info = obj54;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putInt(0);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector56.putInt(1);
        org.mockito.asm.ByteVector byteVector68 = byteVector56.putUTF8("L672499662");
        org.mockito.asm.ByteVector byteVector70 = byteVector56.putInt((int) (short) 10);
        label0.info = byteVector56;
        org.mockito.asm.ByteVector byteVector73 = byteVector56.putShort((int) (byte) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L479475200" + "'", str1, "L479475200");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02304");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("L2112460052");
        java.lang.Class<?> wildcardClass10 = byteVector9.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02305");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        label15.info = byteVector22;
        java.lang.Object obj24 = label15.info;
        java.lang.String str25 = label15.toString();
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(1L);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) (short) 100);
        label15.info = byteVector40;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) '4');
        label15.info = byteVector46;
        java.lang.String str48 = label15.toString();
        java.lang.Object obj49 = label15.info;
        label0.info = obj49;
        java.lang.String str51 = label0.toString();
        java.lang.String str52 = label0.toString();
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        label53.info = byteVector60;
        java.lang.Object obj62 = label53.info;
        java.lang.String str63 = label53.toString();
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector64.putShort((int) (byte) 10);
        label53.info = byteVector70;
        label53.info = "L1673143499";
        java.lang.String str74 = label53.toString();
        java.lang.Object obj75 = label53.info;
        java.lang.Object obj76 = label53.info;
        label0.info = label53;
        java.lang.Object obj78 = label0.info;
        java.lang.Object obj79 = label0.info;
        org.mockito.asm.ByteVector byteVector80 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector84 = byteVector80.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector88 = byteVector84.putLong((long) (-1));
        java.lang.Class<?> wildcardClass89 = byteVector84.getClass();
        label0.info = wildcardClass89;
        // The following exception was thrown during execution in test generation
        try {
            int int91 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L610462470" + "'", str10, "L610462470");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L610462470" + "'", str12, "L610462470");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L610462470" + "'", str13, "L610462470");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L610462470" + "'", str14, "L610462470");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L335951693" + "'", str25, "L335951693");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L335951693" + "'", str48, "L335951693");
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L610462470" + "'", str51, "L610462470");
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L610462470" + "'", str52, "L610462470");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1405823533" + "'", str63, "L1405823533");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1405823533" + "'", str74, "L1405823533");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "L1673143499" + "'", obj75, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "L1673143499" + "'", obj76, "L1673143499");
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals(obj78.toString(), "L1405823533");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "L1405823533");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "L1405823533");
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals(obj79.toString(), "L1405823533");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "L1405823533");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "L1405823533");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test02306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02306");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        java.lang.String str17 = label0.toString();
        java.lang.String str18 = label0.toString();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        java.lang.Object obj21 = label19.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L90138980");
        label19.info = byteVector30;
        java.lang.Object obj32 = label19.info;
        java.lang.Object obj33 = label19.info;
        java.lang.Object obj34 = null;
        label19.info = obj34;
        java.lang.String str36 = label19.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) (byte) 10);
        label19.info = (byte) 10;
        label0.info = label19;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = label19.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1306815610" + "'", str10, "L1306815610");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1306815610" + "'", str17, "L1306815610");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1306815610" + "'", str18, "L1306815610");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L188449341" + "'", str20, "L188449341");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L188449341" + "'", str36, "L188449341");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test02307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02307");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(100);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByteArray(byteArray35, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector21.putByteArray(byteArray35, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector16.putByteArray(byteArray35, 0, 0);
        org.mockito.asm.ByteVector byteVector46 = byteVector16.putInt((int) (byte) -1);
        java.lang.Class<?> wildcardClass47 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test02308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02308");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(0L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort(0);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector31.putByteArray(byteArray52, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector64 = byteVector6.putByteArray(byteArray52, 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test02309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02309");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L365983649");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L1163489210");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02310");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putUTF8("L960335382");
        java.lang.Class<?> wildcardClass21 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02311");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L1029732739");
        org.mockito.asm.ByteVector byteVector18 = byteVector8.putByte((int) (byte) 10);
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02312");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 100);
        label0.info = byteVector40;
        org.mockito.asm.ByteVector byteVector45 = byteVector40.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector47 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte(0);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putByte((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L324639690" + "'", str10, "L324639690");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L324639690" + "'", str21, "L324639690");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02313");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02314");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putByte(0);
        java.lang.Class<?> wildcardClass35 = byteVector31.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L772531806" + "'", str10, "L772531806");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02315");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong(0L);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putUTF8("L337930282");
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putInt((-1));
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L230057508");
        byte[] byteArray36 = new byte[] { (byte) 0, (byte) 100 };
        org.mockito.asm.ByteVector byteVector39 = byteVector31.putByteArray(byteArray36, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector42 = byteVector20.putByteArray(byteArray36, (int) (short) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(byteVector39);
    }

    @Test
    public void test02316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02316");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label0.info;
        java.lang.String str55 = label0.toString();
        java.lang.Object obj56 = label0.info;
        java.lang.Object obj57 = null;
        label0.info = obj57;
        java.lang.Class<?> wildcardClass59 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L2136617071" + "'", str22, "L2136617071");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals(obj54.toString(), "L289984446");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "L289984446");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "L289984446");
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L2136617071" + "'", str55, "L2136617071");
        org.junit.Assert.assertNotNull(obj56);
// flaky:         org.junit.Assert.assertEquals(obj56.toString(), "L289984446");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "L289984446");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "L289984446");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test02317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02317");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02318");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (short) 1);
        label0.info = (short) 1;
        java.lang.Object obj56 = label0.info;
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector75 = byteVector69.putLong((-1L));
        org.mockito.asm.ByteVector byteVector77 = byteVector69.putInt((int) (byte) 10);
        label0.info = byteVector77;
        java.lang.Object obj79 = label0.info;
        java.lang.Object obj80 = null;
        label0.info = obj80;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1597618312" + "'", str10, "L1597618312");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1597618312" + "'", str33, "L1597618312");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1597618312" + "'", str34, "L1597618312");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 1 + "'", obj56, (short) 1);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test02319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02319");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong((long) (short) -1);
        java.lang.Class<?> wildcardClass11 = byteVector6.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02320");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        label0.info = "L1673143499";
        java.lang.String str21 = label0.toString();
        java.lang.Object obj22 = label0.info;
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        label24.info = byteVector31;
        java.lang.Object obj33 = label24.info;
        java.lang.String str34 = label24.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        label24.info = byteVector41;
        java.lang.Object obj43 = label24.info;
        java.lang.Object obj44 = label24.info;
        java.lang.String str45 = label24.toString();
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) ' ');
        label24.info = byteVector54;
        label0.info = byteVector54;
        // The following exception was thrown during execution in test generation
        try {
            int int59 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L310159963" + "'", str10, "L310159963");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L310159963" + "'", str21, "L310159963");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "L1673143499" + "'", obj22, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "L1673143499" + "'", obj23, "L1673143499");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1257644893" + "'", str34, "L1257644893");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1257644893" + "'", str45, "L1257644893");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
    }

    @Test
    public void test02321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02321");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        label17.info = byteVector24;
        org.mockito.asm.ByteVector byteVector27 = byteVector24.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort(1);
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putUTF8("L2111816718");
        label0.info = "L2111816718";
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putInt((int) ' ');
        label0.info = byteVector45;
        // The following exception was thrown during execution in test generation
        try {
            int int47 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1810832851" + "'", str16, "L1810832851");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
    }

    @Test
    public void test02322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02322");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.String str42 = label0.toString();
        java.lang.String str43 = label0.toString();
        java.lang.Object obj44 = label0.info;
        java.lang.String str45 = label0.toString();
        java.lang.String str46 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int47 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1037163546" + "'", str42, "L1037163546");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1037163546" + "'", str43, "L1037163546");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1 + "'", obj44, 1);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1037163546" + "'", str45, "L1037163546");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1037163546" + "'", str46, "L1037163546");
    }

    @Test
    public void test02323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02323");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.String str28 = label0.toString();
        label0.info = "L1888293067";
        // The following exception was thrown during execution in test generation
        try {
            int int31 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1813474300" + "'", str1, "L1813474300");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1813474300" + "'", str15, "L1813474300");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1813474300" + "'", str16, "L1813474300");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1854970441" + "'", str26, "L1854970441");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1813474300" + "'", str28, "L1813474300");
    }

    @Test
    public void test02324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02324");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L614057309" + "'", str1, "L614057309");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test02325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02325");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L1630230037");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) (byte) 0);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02326");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1515679778");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L413506503");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02327");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector6.putLong(0L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L974910321");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02328");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) 100);
        label4.info = byteVector19;
        org.mockito.asm.ByteVector byteVector24 = byteVector19.putShort(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(100L);
        label0.info = 100L;
        label0.info = "L720089309";
        // The following exception was thrown during execution in test generation
        try {
            int int32 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1576577838" + "'", str1, "L1576577838");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02329");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(10);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector42.putByteArray(byteArray54, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector33.putByteArray(byteArray54, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector22.putByteArray(byteArray54, 0, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector68 = byteVector22.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putLong((long) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test02330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02330");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02331");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02332");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02333");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putByte((int) 'a');
        label0.info = byteVector21;
        java.lang.String str29 = label0.toString();
        java.lang.String str30 = label0.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L815469913");
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector49.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putInt((int) (short) 10);
        label0.info = (short) 10;
        java.lang.Class<?> wildcardClass61 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1560518142" + "'", str10, "L1560518142");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1560518142" + "'", str12, "L1560518142");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1560518142" + "'", str13, "L1560518142");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1560518142" + "'", str14, "L1560518142");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1560518142" + "'", str29, "L1560518142");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1560518142" + "'", str30, "L1560518142");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test02334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02334");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putInt(0);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putByte(100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector61.putByteArray(byteArray73, 1, (int) (short) 0);
        label20.info = (short) 0;
        java.lang.String str81 = label20.toString();
        java.lang.Class<?> wildcardClass82 = label20.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1564810772" + "'", str10, "L1564810772");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1564810772" + "'", str19, "L1564810772");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1262697756" + "'", str30, "L1262697756");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1262697756" + "'", str81, "L1262697756");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test02335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02335");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L338502703");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (byte) 0);
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02336");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L289255380");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putUTF8("L85310275");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(0);
        java.lang.Class<?> wildcardClass29 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02337");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label16.info = ' ';
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector26 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(1);
        label0.info = byteVector26;
        org.mockito.asm.ByteVector byteVector33 = byteVector26.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector26.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("L1720549071");
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt(1);
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putByte(100);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector74 = byteVector64.putByteArray(byteArray71, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector59.putByteArray(byteArray71, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector80 = byteVector52.putByteArray(byteArray71, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector83 = byteVector37.putByteArray(byteArray71, (int) (short) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2004030255" + "'", str10, "L2004030255");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L2004030255" + "'", str12, "L2004030255");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2004030255" + "'", str15, "L2004030255");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
    }

    @Test
    public void test02338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02338");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (byte) 10);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02339");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.Object obj22 = label0.info;
        java.lang.String str23 = label0.toString();
        java.lang.Object obj24 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1903611886" + "'", str10, "L1903611886");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1903611886" + "'", str20, "L1903611886");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1903611886" + "'", str23, "L1903611886");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
    }

    @Test
    public void test02340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02340");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1233895225");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02341");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        label0.info = (-1);
        java.lang.String str39 = label0.toString();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putUTF8("L1083998948");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte(100);
        label0.info = 100;
        // The following exception was thrown during execution in test generation
        try {
            int int52 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L537442766" + "'", str19, "L537442766");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L537442766" + "'", str20, "L537442766");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L537442766" + "'", str39, "L537442766");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
    }

    @Test
    public void test02342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02342");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1121825314");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02343");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        label38.info = ' ';
        java.lang.Object obj41 = label38.info;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putLong((long) 'a');
        label38.info = byteVector46;
        java.lang.String str54 = label38.toString();
        java.lang.Object obj55 = label38.info;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putLong((long) (short) 10);
        label38.info = byteVector68;
        label0.info = label38;
        java.lang.Object obj71 = label38.info;
        // The following exception was thrown during execution in test generation
        try {
            int int72 = label38.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L427015526" + "'", str10, "L427015526");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L427015526" + "'", str33, "L427015526");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L427015526" + "'", str34, "L427015526");
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L427015526" + "'", str36, "L427015526");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + ' ' + "'", obj41, ' ');
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L2060127387" + "'", str54, "L2060127387");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test02344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02344");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        label15.info = byteVector22;
        java.lang.Object obj24 = label15.info;
        java.lang.String str25 = label15.toString();
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(1L);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) (short) 100);
        label15.info = byteVector40;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) '4');
        label15.info = byteVector46;
        java.lang.String str48 = label15.toString();
        java.lang.Object obj49 = label15.info;
        label0.info = obj49;
        java.lang.String str51 = label0.toString();
        java.lang.String str52 = label0.toString();
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        label53.info = byteVector60;
        java.lang.Object obj62 = label53.info;
        java.lang.String str63 = label53.toString();
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector64.putShort((int) (byte) 10);
        label53.info = byteVector70;
        label53.info = "L1673143499";
        java.lang.String str74 = label53.toString();
        java.lang.Object obj75 = label53.info;
        java.lang.Object obj76 = label53.info;
        label0.info = label53;
        java.lang.Object obj78 = label0.info;
        java.lang.Object obj79 = label0.info;
        java.lang.String str80 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int81 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L766166016" + "'", str10, "L766166016");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L766166016" + "'", str12, "L766166016");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L766166016" + "'", str13, "L766166016");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L766166016" + "'", str14, "L766166016");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L397127266" + "'", str25, "L397127266");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L397127266" + "'", str48, "L397127266");
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L766166016" + "'", str51, "L766166016");
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L766166016" + "'", str52, "L766166016");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1946253145" + "'", str63, "L1946253145");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1946253145" + "'", str74, "L1946253145");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "L1673143499" + "'", obj75, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "L1673143499" + "'", obj76, "L1673143499");
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals(obj78.toString(), "L1946253145");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "L1946253145");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "L1946253145");
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals(obj79.toString(), "L1946253145");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "L1946253145");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "L1946253145");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L766166016" + "'", str80, "L766166016");
    }

    @Test
    public void test02345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02345");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt(0);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putUTF8("L941510936");
        byte[] byteArray45 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector48 = byteVector38.putByteArray(byteArray45, 0, 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector25.putByteArray(byteArray45, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector54 = byteVector18.putByteArray(byteArray45, 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02346");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector32 = byteVector27.putLong((long) (-1));
        java.lang.Class<?> wildcardClass33 = byteVector27.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L411930154" + "'", str10, "L411930154");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L411930154" + "'", str19, "L411930154");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L411930154" + "'", str22, "L411930154");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02347");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.String str42 = label0.toString();
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        label43.info = byteVector50;
        java.lang.Object obj52 = label43.info;
        java.lang.String str53 = label43.toString();
        java.lang.Object obj54 = label43.info;
        java.lang.String str55 = label43.toString();
        java.lang.String str56 = label43.toString();
        java.lang.String str57 = label43.toString();
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector58.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector70 = byteVector64.putByte((int) 'a');
        label43.info = byteVector64;
        label0.info = label43;
        java.lang.String str73 = label43.toString();
        label43.info = "L120212947";
        // The following exception was thrown during execution in test generation
        try {
            int int76 = label43.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L36537453" + "'", str42, "L36537453");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(obj52);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L2022274388" + "'", str53, "L2022274388");
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L2022274388" + "'", str55, "L2022274388");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L2022274388" + "'", str56, "L2022274388");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L2022274388" + "'", str57, "L2022274388");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L2022274388" + "'", str73, "L2022274388");
    }

    @Test
    public void test02348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02348");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L922707703");
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong((long) (byte) 0);
        label0.info = byteVector46;
        java.lang.String str48 = label0.toString();
        java.lang.Object obj49 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L205154612" + "'", str48, "L205154612");
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test02349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02349");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putLong(0L);
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02350");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L102640438");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L523837937");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02351");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte(10);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L1927890440");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02352");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02353");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.Object obj10 = label0.info;
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte(0);
        label0.info = 0;
        java.lang.String str27 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int28 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1913604108" + "'", str9, "L1913604108");
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1913604108" + "'", str27, "L1913604108");
    }

    @Test
    public void test02354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02354");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte(100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(1);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte(100);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector64 = byteVector54.putByteArray(byteArray61, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector47.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector70 = byteVector38.putByteArray(byteArray61, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector73 = byteVector33.putByteArray(byteArray61, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector76 = byteVector12.putByteArray(byteArray61, (int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02355");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((-1L));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) 100);
        java.lang.Class<?> wildcardClass21 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02356");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label12.info = byteVector37;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '4');
        label12.info = byteVector43;
        java.lang.String str45 = label12.toString();
        java.lang.Object obj46 = label12.info;
        java.lang.Object obj47 = label12.info;
        label0.info = label12;
        org.mockito.asm.Label label49 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        label49.info = byteVector56;
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putLong((long) 100);
        label49.info = byteVector64;
        java.lang.Object obj68 = label49.info;
        java.lang.String str69 = label49.toString();
        label49.info = 100L;
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector72.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong(1L);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putByte((int) (short) 100);
        label49.info = (short) 100;
        java.lang.Object obj88 = label49.info;
        java.lang.String str89 = label49.toString();
        label0.info = label49;
        java.lang.Object obj91 = label49.info;
        // The following exception was thrown during execution in test generation
        try {
            int int92 = label49.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1678625792" + "'", str1, "L1678625792");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1237645185" + "'", str22, "L1237645185");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1237645185" + "'", str45, "L1237645185");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L725565743" + "'", str69, "L725565743");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (short) 100 + "'", obj88, (short) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L725565743" + "'", str89, "L725565743");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 100 + "'", obj91, (short) 100);
    }

    @Test
    public void test02357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02357");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        label7.info = byteVector14;
        java.lang.Object obj16 = label7.info;
        java.lang.String str17 = label7.toString();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putShort((int) (byte) 10);
        label7.info = byteVector24;
        java.lang.Object obj26 = label7.info;
        java.lang.Object obj27 = label7.info;
        java.lang.String str28 = label7.toString();
        java.lang.String str29 = label7.toString();
        label0.info = str29;
        java.lang.Object obj31 = label0.info;
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        label32.info = byteVector39;
        java.lang.Object obj41 = label32.info;
        java.lang.Object obj42 = label32.info;
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        java.lang.String str44 = label43.toString();
        java.lang.Object obj45 = label43.info;
        java.lang.Class<?> wildcardClass46 = label43.getClass();
        label32.info = wildcardClass46;
        java.lang.String str48 = label32.toString();
        label0.info = str48;
        java.lang.String str50 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int51 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L321427835" + "'", str1, "L321427835");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L321427835" + "'", str4, "L321427835");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L321427835" + "'", str5, "L321427835");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1829568341" + "'", str17, "L1829568341");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1829568341" + "'", str28, "L1829568341");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1829568341" + "'", str29, "L1829568341");
// flaky:         org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "L1829568341" + "'", obj31, "L1829568341");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1471683052" + "'", str44, "L1471683052");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L1564779033" + "'", str48, "L1564779033");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L321427835" + "'", str50, "L321427835");
    }

    @Test
    public void test02358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02358");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 1);
        label0.info = byteVector33;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        label0.info = byteVector39;
        label0.info = "L1629281037";
        java.lang.Class<?> wildcardClass45 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2051688967" + "'", str1, "L2051688967");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2051688967" + "'", str15, "L2051688967");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L2051688967" + "'", str16, "L2051688967");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L2051688967" + "'", str19, "L2051688967");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "L1404822831" + "'", obj20, "L1404822831");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test02359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02359");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        label0.info = "L219136701";
        java.lang.Object obj38 = label0.info;
        label0.info = "L1509753383";
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        label41.info = ' ';
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putInt(0);
        label41.info = byteVector48;
        java.lang.String str50 = label41.toString();
        java.lang.Object obj51 = label41.info;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putInt(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putByte(100);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector73 = byteVector63.putByteArray(byteArray70, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector76 = byteVector58.putByteArray(byteArray70, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector58.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong((-1L));
        label41.info = byteVector82;
        org.mockito.asm.ByteVector byteVector85 = byteVector82.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putInt((int) (byte) -1);
        label0.info = byteVector85;
        java.lang.Class<?> wildcardClass89 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1538942477" + "'", str10, "L1538942477");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1538942477" + "'", str19, "L1538942477");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "L219136701" + "'", obj38, "L219136701");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L121334162" + "'", str50, "L121334162");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test02360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02360");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02361");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putByte(100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte(10);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(100L);
        label0.info = byteVector36;
        label0.info = "L484427935";
        java.lang.String str40 = label0.toString();
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt(100);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector57 = byteVector49.putUTF8("L1029732739");
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putInt(1);
        org.mockito.asm.ByteVector byteVector61 = byteVector49.putUTF8("");
        label0.info = byteVector61;
        java.lang.String str63 = label0.toString();
        java.lang.Object obj64 = label0.info;
        java.lang.String str65 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int66 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1582601797" + "'", str10, "L1582601797");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1582601797" + "'", str19, "L1582601797");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1582601797" + "'", str22, "L1582601797");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1582601797" + "'", str40, "L1582601797");
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1582601797" + "'", str63, "L1582601797");
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L1582601797" + "'", str65, "L1582601797");
    }

    @Test
    public void test02362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02362");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector36 = byteVector26.putByteArray(byteArray33, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector15.putByteArray(byteArray33, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector42 = byteVector10.putByteArray(byteArray33, (int) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
    }

    @Test
    public void test02363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02363");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.String str42 = label0.toString();
        java.lang.String str43 = label0.toString();
        java.lang.String str44 = label0.toString();
        java.lang.Object obj45 = label0.info;
        java.lang.String str46 = label0.toString();
        label0.info = "L1670946156";
        // The following exception was thrown during execution in test generation
        try {
            int int49 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L583578814" + "'", str42, "L583578814");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L583578814" + "'", str43, "L583578814");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L583578814" + "'", str44, "L583578814");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1 + "'", obj45, 1);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L583578814" + "'", str46, "L583578814");
    }

    @Test
    public void test02364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02364");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) 'a');
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02365");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector0.putUTF8("L767797823");
        org.mockito.asm.ByteVector byteVector14 = byteVector0.putByte((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02366");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        java.lang.String str53 = label0.toString();
        java.lang.Object obj54 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int55 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L343475821" + "'", str1, "L343475821");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L152743378" + "'", str14, "L152743378");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L152743378" + "'", str23, "L152743378");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L343475821" + "'", str53, "L343475821");
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals(obj54.toString(), "L152743378");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "L152743378");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "L152743378");
    }

    @Test
    public void test02367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02367");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L966497915");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L1924324562");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putLong(1L);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02368");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong(100L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt(1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putInt(0);
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putByte(100);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector61 = byteVector51.putByteArray(byteArray58, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector46.putByteArray(byteArray58, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector37.putByteArray(byteArray58, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector70 = byteVector24.putByteArray(byteArray58, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
    }

    @Test
    public void test02369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02369");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        byte[] byteArray3 = null;
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByteArray(byteArray3, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putUTF8("L306302498");
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong(0L);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putByte(100);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt(1);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putInt(0);
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putByte(100);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector67 = byteVector57.putByteArray(byteArray64, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector52.putByteArray(byteArray64, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector73 = byteVector43.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector76 = byteVector26.putByteArray(byteArray64, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector79 = byteVector21.putByteArray(byteArray64, (int) (byte) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector82 = byteVector2.putByteArray(byteArray64, (int) 'a', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test02370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02370");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 100);
        label5.info = byteVector60;
        java.lang.Object obj64 = label5.info;
        java.lang.String str65 = label5.toString();
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putByte(0);
        label5.info = 0;
        // The following exception was thrown during execution in test generation
        try {
            int int74 = label5.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1907319587" + "'", str1, "L1907319587");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1907319587" + "'", str2, "L1907319587");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1907319587" + "'", str4, "L1907319587");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L703013144" + "'", str6, "L703013144");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L703013144" + "'", str20, "L703013144");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L703013144" + "'", str21, "L703013144");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L2051993893" + "'", str31, "L2051993893");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L703013144" + "'", str65, "L703013144");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test02371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02371");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray54, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector35.putByteArray(byteArray54, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector66 = byteVector18.putByteArray(byteArray54, (int) 'a', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test02372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02372");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L209084309");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByte((int) (short) -1);
        java.lang.Class<?> wildcardClass25 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02373");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        java.lang.Object obj19 = label17.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L90138980");
        label17.info = byteVector28;
        java.lang.Object obj30 = label17.info;
        java.lang.Object obj31 = label17.info;
        java.lang.Object obj32 = null;
        label17.info = obj32;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong(10L);
        label17.info = byteVector42;
        org.mockito.asm.ByteVector byteVector45 = byteVector42.putUTF8("L573057893");
        label0.info = byteVector45;
        org.mockito.asm.ByteVector byteVector48 = byteVector45.putByte(0);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1124600187" + "'", str10, "L1124600187");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1124600187" + "'", str12, "L1124600187");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1124600187" + "'", str15, "L1124600187");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1124600187" + "'", str16, "L1124600187");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L483129357" + "'", str18, "L483129357");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
    }

    @Test
    public void test02374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02374");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1556884366");
        label0.info = byteVector29;
        java.lang.Object obj33 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int34 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1509452072" + "'", str10, "L1509452072");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1509452072" + "'", str20, "L1509452072");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test02375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02375");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02376");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong(0L);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1584637390");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02377");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 100);
        java.lang.Class<?> wildcardClass23 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02378");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong(0L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02379");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1599450691");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02380");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02381");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02382");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong(0L);
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02383");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong(0L);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt(10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(10);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt(1);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt(0);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putByte(100);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putByteArray(byteArray69, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector57.putByteArray(byteArray69, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector48.putByteArray(byteArray69, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector81 = byteVector37.putByteArray(byteArray69, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector12.putByteArray(byteArray69, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test02384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02384");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02385");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.Object obj28 = label0.info;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong(1L);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector53;
        org.mockito.asm.ByteVector byteVector56 = byteVector53.putShort(100);
        java.lang.Class<?> wildcardClass57 = byteVector53.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L978540006" + "'", str1, "L978540006");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L978540006" + "'", str15, "L978540006");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L978540006" + "'", str16, "L978540006");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L172308998" + "'", str26, "L172308998");
// flaky:         org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "L172308998" + "'", obj28, "L172308998");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test02386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02386");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        label0.info = "L159729243";
        java.lang.Object obj47 = null;
        label0.info = obj47;
        // The following exception was thrown during execution in test generation
        try {
            int int49 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L992830244" + "'", str3, "L992830244");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L721977024" + "'", str14, "L721977024");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L721977024" + "'", str23, "L721977024");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L721977024" + "'", str26, "L721977024");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test02387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02387");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) ' ');
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02388");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02389");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L159729243");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort(100);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1479125142");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong((long) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02390");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L592534812");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector48 = byteVector38.putByteArray(byteArray45, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector27.putByteArray(byteArray45, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector54 = byteVector22.putByteArray(byteArray45, (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02391");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '#');
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02392");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.Object obj22 = label0.info;
        java.lang.Object obj23 = label0.info;
        java.lang.Class<?> wildcardClass24 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L905524704" + "'", str10, "L905524704");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test02393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02393");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putUTF8("L429124580");
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putUTF8("L74649782");
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort(0);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector42.putByteArray(byteArray54, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector33.putByteArray(byteArray54, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector66 = byteVector4.putByteArray(byteArray54, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test02394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02394");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test02395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02395");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong(1L);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02396");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong(0L);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) 10);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02397");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 100);
        label0.info = byteVector40;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) 1);
        label0.info = 1;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt(10);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((int) (byte) 100);
        label0.info = (byte) 100;
        java.lang.Object obj56 = label0.info;
        java.lang.Object obj57 = label0.info;
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        java.lang.String str59 = label58.toString();
        label58.info = (short) 0;
        java.lang.String str62 = label58.toString();
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt(10);
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putLong((long) '4');
        label58.info = byteVector71;
        org.mockito.asm.ByteVector byteVector74 = byteVector71.putUTF8("L1432728380");
        org.mockito.asm.ByteVector byteVector76 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector71.putInt((int) (byte) -1);
        label0.info = byteVector78;
        // The following exception was thrown during execution in test generation
        try {
            int int80 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L380221357" + "'", str10, "L380221357");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L380221357" + "'", str21, "L380221357");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1710165304" + "'", str59, "L1710165304");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1710165304" + "'", str62, "L1710165304");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test02398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02398");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02399");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 100);
        label5.info = byteVector60;
        org.mockito.asm.ByteVector byteVector65 = byteVector60.putLong(10L);
        java.lang.Class<?> wildcardClass66 = byteVector65.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L728921019" + "'", str1, "L728921019");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L728921019" + "'", str2, "L728921019");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L728921019" + "'", str4, "L728921019");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1767627667" + "'", str6, "L1767627667");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1767627667" + "'", str20, "L1767627667");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1767627667" + "'", str21, "L1767627667");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1949892671" + "'", str31, "L1949892671");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test02400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02400");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putByte(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L312985222");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2124944219" + "'", str10, "L2124944219");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
    }

    @Test
    public void test02401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02401");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((-1L));
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putShort(10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02402");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1315225980");
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02403");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(0L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort(10);
        label0.info = byteVector31;
        java.lang.Class<?> wildcardClass33 = byteVector31.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02404");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt(1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putByte((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = byteVector43.getClass();
        label0.info = byteVector43;
        java.lang.String str50 = label0.toString();
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((-1));
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte(0);
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putByte((int) (short) 1);
        label0.info = byteVector59;
        java.lang.Object obj65 = label0.info;
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2076071450" + "'", str10, "L2076071450");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L2076071450" + "'", str19, "L2076071450");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L2076071450" + "'", str22, "L2076071450");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(wildcardClass48);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L2076071450" + "'", str50, "L2076071450");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test02405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02405");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (short) 10);
        java.lang.Class<?> wildcardClass25 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02406");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        label13.info = byteVector20;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 100);
        label13.info = byteVector28;
        java.lang.Object obj32 = label13.info;
        java.lang.Object obj33 = label13.info;
        java.lang.Object obj34 = label13.info;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L922707703");
        label13.info = byteVector45;
        label0.info = label13;
        java.lang.Class<?> wildcardClass48 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1113728605" + "'", str10, "L1113728605");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1113728605" + "'", str12, "L1113728605");
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test02407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02407");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L260370228");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1375008815");
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putUTF8("");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02408");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        label14.info = byteVector21;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) 100);
        label14.info = byteVector29;
        java.lang.Object obj33 = label14.info;
        java.lang.Object obj34 = label14.info;
        label0.info = obj34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort(1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L439331775");
        label0.info = byteVector50;
        java.lang.String str54 = label0.toString();
        java.lang.Class<?> wildcardClass55 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1986708467" + "'", str1, "L1986708467");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L1986708467" + "'", str54, "L1986708467");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test02409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02409");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) -1);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02410");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector6 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        label5.info = byteVector12;
        java.lang.Object obj14 = label5.info;
        java.lang.String str15 = label5.toString();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(1L);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) (short) 100);
        label5.info = byteVector30;
        org.mockito.asm.ByteVector byteVector33 = byteVector30.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector30.putLong(0L);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) ' ');
        label0.info = byteVector35;
        java.lang.Object obj39 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int40 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1867517379" + "'", str1, "L1867517379");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1867517379" + "'", str4, "L1867517379");
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L927749570" + "'", str15, "L927749570");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test02411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02411");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        java.lang.String str27 = label0.toString();
        label0.info = "L422954361";
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort(10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(100);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putUTF8("L1491016481");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putLong((long) 'a');
        label0.info = byteVector48;
        java.lang.Object obj54 = label0.info;
        java.lang.String str55 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int56 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L914723106" + "'", str10, "L914723106");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L914723106" + "'", str27, "L914723106");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L914723106" + "'", str55, "L914723106");
    }

    @Test
    public void test02412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02412");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putByte((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
    }

    @Test
    public void test02413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02413");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        label0.info = "L304534339";
        java.lang.Object obj25 = label0.info;
        label0.info = "L870741891";
        // The following exception was thrown during execution in test generation
        try {
            int int28 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L2039299630" + "'", str22, "L2039299630");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "L304534339" + "'", obj25, "L304534339");
    }

    @Test
    public void test02414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02414");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector23 = byteVector13.putByteArray(byteArray20, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putByteArray(byteArray20, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort(100);
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = byteVector39.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector39.putShort(1);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putByteArray(byteArray68, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector54.putByteArray(byteArray68, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector39.putByteArray(byteArray68, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector80 = byteVector6.putByteArray(byteArray68, (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02415");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L596369166");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02416");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        java.lang.Object obj55 = label20.info;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putUTF8("");
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putLong(10L);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt(100);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector66.putInt(0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((int) (short) -1);
        label20.info = (short) -1;
        org.mockito.asm.ByteVector byteVector78 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector82 = byteVector78.putShort((-1));
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector90 = byteVector88.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector92 = byteVector88.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector94 = byteVector92.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector96 = byteVector94.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector98 = byteVector94.putInt(1);
        label20.info = byteVector94;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L302760584" + "'", str10, "L302760584");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L302760584" + "'", str19, "L302760584");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1759955158" + "'", str30, "L1759955158");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector94);
        org.junit.Assert.assertNotNull(byteVector96);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test02417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02417");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte(100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector35 = byteVector25.putByteArray(byteArray32, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector20.putByteArray(byteArray32, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(0);
        label0.info = 0;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) ' ');
        byte[] byteArray47 = null;
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putByteArray(byteArray47, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putUTF8("L1796647079");
        label0.info = byteVector52;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L213723412" + "'", str1, "L213723412");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
    }

    @Test
    public void test02418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02418");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector1.putUTF8("L676116586");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putLong(10L);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
    }

    @Test
    public void test02419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02419");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        java.lang.String str38 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L497596039" + "'", str22, "L497596039");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L497596039" + "'", str36, "L497596039");
        org.junit.Assert.assertNotNull(obj37);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L497596039" + "'", str38, "L497596039");
    }

    @Test
    public void test02420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02420");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L941510936");
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putByteArray(byteArray17, 0, 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1309162730");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1109121868");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L918324330");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02421");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong(1L);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L1150804603");
        label0.info = byteVector40;
        java.lang.String str42 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int43 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1330773959" + "'", str10, "L1330773959");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1330773959" + "'", str42, "L1330773959");
    }

    @Test
    public void test02422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02422");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt((int) (byte) 100);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector41 = byteVector27.putByteArray(byteArray38, (int) (byte) 1, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector44 = byteVector14.putByteArray(byteArray38, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
    }

    @Test
    public void test02423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02423");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = label0.info;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = null;
        label0.info = obj21;
        // The following exception was thrown during execution in test generation
        try {
            int int23 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2101069480" + "'", str1, "L2101069480");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2101069480" + "'", str15, "L2101069480");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L2101069480" + "'", str16, "L2101069480");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test02424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02424");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test02425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02425");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L781425144");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(10);
        java.lang.Class<?> wildcardClass21 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02426");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) 1);
        java.lang.Class<?> wildcardClass11 = byteVector8.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02427");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L46931455");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putUTF8("L1412540007");
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putUTF8("L1612577973");
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt(1);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putInt(0);
        org.mockito.asm.ByteVector byteVector54 = byteVector48.putByte(100);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector69 = byteVector59.putByteArray(byteArray66, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector54.putByteArray(byteArray66, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector75 = byteVector45.putByteArray(byteArray66, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector78 = byteVector34.putByteArray(byteArray66, (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
    }

    @Test
    public void test02428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02428");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector31.putUTF8("L1898729737");
        java.lang.Class<?> wildcardClass37 = byteVector31.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1411713999" + "'", str20, "L1411713999");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test02429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02429");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putByte(0);
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putUTF8("L1109121868");
        label0.info = "L1109121868";
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1025947319" + "'", str9, "L1025947319");
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02430");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L102640438");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(100);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putByte((int) (short) -1);
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) 0, (byte) 0, (byte) 10, (byte) 1, (byte) -1 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector54 = byteVector26.putByteArray(byteArray48, (-1), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100, 0, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02431");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.String str42 = label0.toString();
        java.lang.String str43 = label0.toString();
        java.lang.Object obj44 = label0.info;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt(1);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putByte(10);
        org.mockito.asm.ByteVector byteVector69 = byteVector63.putByte(0);
        org.mockito.asm.ByteVector byteVector71 = byteVector63.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("L378027592");
        label0.info = "L378027592";
        label0.info = "L1158586649";
        // The following exception was thrown during execution in test generation
        try {
            int int77 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L899233245" + "'", str42, "L899233245");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L899233245" + "'", str43, "L899233245");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1 + "'", obj44, 1);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02432");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        java.lang.Object obj62 = label0.info;
        label0.info = 0L;
        java.lang.String str65 = label0.toString();
        java.lang.String str66 = label0.toString();
        java.lang.Object obj67 = label0.info;
        java.lang.Class<?> wildcardClass68 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L514629359" + "'", str20, "L514629359");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L418907504" + "'", str59, "L418907504");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L418907504");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L418907504");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L418907504");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L514629359" + "'", str65, "L514629359");
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L514629359" + "'", str66, "L514629359");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0L + "'", obj67, 0L);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test02433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02433");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        java.lang.Class<?> wildcardClass45 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1053742722" + "'", str3, "L1053742722");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L752392775" + "'", str14, "L752392775");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L752392775" + "'", str23, "L752392775");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L752392775" + "'", str26, "L752392775");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test02434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02434");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putUTF8("L1154775725");
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putUTF8("L1752958545");
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt(1);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putByte(100);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector49 = byteVector39.putByteArray(byteArray46, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector52 = byteVector34.putByteArray(byteArray46, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector55 = byteVector27.putByteArray(byteArray46, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector58 = byteVector12.putByteArray(byteArray46, (int) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test02435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02435");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Class<?> wildcardClass1 = label0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test02436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02436");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L184022116");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L499042967");
        java.lang.Class<?> wildcardClass17 = byteVector8.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02437");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.Object obj32 = null;
        label0.info = obj32;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(0L);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort(0);
        label0.info = byteVector55;
        java.lang.Object obj57 = label0.info;
        java.lang.String str58 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1632847469" + "'", str10, "L1632847469");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1632847469" + "'", str34, "L1632847469");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(obj57);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L1632847469" + "'", str58, "L1632847469");
    }

    @Test
    public void test02438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02438");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        label0.info = "L56937410";
        java.lang.String str28 = label0.toString();
        java.lang.Object obj29 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1306962641" + "'", str10, "L1306962641");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1306962641" + "'", str19, "L1306962641");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1306962641" + "'", str22, "L1306962641");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1306962641" + "'", str24, "L1306962641");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1306962641" + "'", str28, "L1306962641");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "L56937410" + "'", obj29, "L56937410");
    }

    @Test
    public void test02439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02439");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02440");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        java.lang.String str28 = label0.toString();
        java.lang.Object obj29 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1437830756" + "'", str28, "L1437830756");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "L42697657" + "'", obj29, "L42697657");
    }

    @Test
    public void test02441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02441");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L911011818");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) (short) 10);
        java.lang.Class<?> wildcardClass19 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02442");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putShort(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test02443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02443");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt(100);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong((long) '#');
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        java.lang.String str37 = label36.toString();
        java.lang.Object obj38 = label36.info;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L90138980");
        label36.info = byteVector47;
        java.lang.Object obj49 = label36.info;
        java.lang.Object obj50 = label36.info;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte(0);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector61.putByteArray(byteArray79, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector54.putByteArray(byteArray79, (int) (short) 0, 0);
        label36.info = byteArray79;
        org.mockito.asm.ByteVector byteVector92 = byteVector35.putByteArray(byteArray79, (int) (short) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector95 = byteVector14.putByteArray(byteArray79, (int) (byte) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1066707481" + "'", str37, "L1066707481");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector92);
    }

    @Test
    public void test02444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02444");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02445");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        label0.info = "L56937410";
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label28.info = byteVector35;
        java.lang.Object obj37 = label28.info;
        java.lang.Object obj38 = label28.info;
        java.lang.Object obj39 = label28.info;
        label0.info = label28;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label28.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L605416749" + "'", str10, "L605416749");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L605416749" + "'", str19, "L605416749");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L605416749" + "'", str22, "L605416749");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L605416749" + "'", str24, "L605416749");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test02446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02446");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putLong(0L);
        label0.info = 0L;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L698882268" + "'", str1, "L698882268");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
    }

    @Test
    public void test02447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02447");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int23 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L807613130" + "'", str10, "L807613130");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L807613130" + "'", str20, "L807613130");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L807613130" + "'", str22, "L807613130");
    }

    @Test
    public void test02448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02448");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector(1);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("L1474795193");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector7 = byteVector1.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putUTF8("L1332878305");
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(0L);
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort(0);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt(0);
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putByte(100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putByteArray(byteArray68, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector56.putByteArray(byteArray68, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector47.putByteArray(byteArray68, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector80 = byteVector18.putByteArray(byteArray68, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector83 = byteVector7.putByteArray(byteArray68, (int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
    }

    @Test
    public void test02449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02449");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector4.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector28 = byteVector4.putLong((-1L));
        org.mockito.asm.ByteVector byteVector30 = byteVector4.putShort((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02450");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putInt((-1));
        java.lang.Class<?> wildcardClass13 = byteVector6.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02451");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) '4');
        java.lang.Class<?> wildcardClass29 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02452");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) '4');
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02453");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt(1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putByte((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = byteVector43.getClass();
        label0.info = byteVector43;
        java.lang.String str50 = label0.toString();
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((-1));
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte(0);
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putByte((int) (short) 1);
        label0.info = byteVector59;
        // The following exception was thrown during execution in test generation
        try {
            int int65 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1932532955" + "'", str10, "L1932532955");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1932532955" + "'", str19, "L1932532955");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1932532955" + "'", str22, "L1932532955");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(wildcardClass48);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L1932532955" + "'", str50, "L1932532955");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test02454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02454");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte(100);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt(1);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt(0);
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putByte(100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector58 = byteVector48.putByteArray(byteArray55, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector43.putByteArray(byteArray55, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector64 = byteVector34.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector17.putByteArray(byteArray55, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector70 = byteVector12.putByteArray(byteArray55, (int) (byte) 0, 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putByte((int) (byte) -1);
        java.lang.Class<?> wildcardClass73 = byteVector70.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test02455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02455");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L2094203655");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putUTF8("L484427935");
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector42.putByteArray(byteArray54, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector33.putByteArray(byteArray54, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector66 = byteVector22.putByteArray(byteArray54, (int) '#', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test02456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02456");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L187574180");
        label0.info = byteVector45;
        java.lang.Object obj47 = null;
        label0.info = obj47;
        java.lang.Object obj49 = label0.info;
        java.lang.Class<?> wildcardClass50 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L852342577" + "'", str10, "L852342577");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test02457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02457");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label12.info = byteVector37;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '4');
        label12.info = byteVector43;
        java.lang.String str45 = label12.toString();
        java.lang.Object obj46 = label12.info;
        java.lang.Object obj47 = label12.info;
        label0.info = label12;
        org.mockito.asm.Label label49 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        label49.info = byteVector56;
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putLong((long) 100);
        label49.info = byteVector64;
        java.lang.Object obj68 = label49.info;
        java.lang.String str69 = label49.toString();
        label49.info = 100L;
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector72.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong(1L);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putByte((int) (short) 100);
        label49.info = (short) 100;
        java.lang.Object obj88 = label49.info;
        java.lang.String str89 = label49.toString();
        label0.info = label49;
        label0.info = "L1823469321";
        // The following exception was thrown during execution in test generation
        try {
            int int93 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L306754540" + "'", str1, "L306754540");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L958802590" + "'", str22, "L958802590");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L958802590" + "'", str45, "L958802590");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L773342088" + "'", str69, "L773342088");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (short) 100 + "'", obj88, (short) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L773342088" + "'", str89, "L773342088");
    }

    @Test
    public void test02458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02458");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L1256436598");
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putInt(0);
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putByte(100);
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector32 = byteVector22.putByteArray(byteArray29, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector17.putByteArray(byteArray29, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector38 = byteVector6.putByteArray(byteArray29, (int) ' ', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
    }

    @Test
    public void test02459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02459");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.Object obj34 = label0.info;
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1280991354" + "'", str10, "L1280991354");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1280991354" + "'", str33, "L1280991354");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02460");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        label0.info = "L1404822831";
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong(0L);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (short) 100);
        label0.info = byteVector40;
        org.mockito.asm.Label label44 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        label44.info = byteVector51;
        java.lang.Object obj53 = label44.info;
        java.lang.String str54 = label44.toString();
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong(1L);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) (short) 100);
        label44.info = byteVector69;
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putInt((int) '4');
        label44.info = byteVector75;
        java.lang.String str77 = label44.toString();
        java.lang.String str78 = label44.toString();
        java.lang.Object obj79 = label44.info;
        java.lang.String str80 = label44.toString();
        label0.info = label44;
        // The following exception was thrown during execution in test generation
        try {
            int int82 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L992100074" + "'", str1, "L992100074");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L992100074" + "'", str15, "L992100074");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L992100074" + "'", str16, "L992100074");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "L1404822831" + "'", obj19, "L1404822831");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L2070015357" + "'", str54, "L2070015357");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L2070015357" + "'", str77, "L2070015357");
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L2070015357" + "'", str78, "L2070015357");
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L2070015357" + "'", str80, "L2070015357");
    }

    @Test
    public void test02461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02461");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1109121868");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1870073094");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02462");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong(100L);
        label0.info = byteVector42;
        java.lang.Object obj48 = label0.info;
        java.lang.String str49 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int50 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1525142501" + "'", str10, "L1525142501");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1525142501" + "'", str21, "L1525142501");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1525142501" + "'", str49, "L1525142501");
    }

    @Test
    public void test02463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02463");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02464");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02465");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        java.lang.Class<?> wildcardClass23 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02466");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1491016481");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02467");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        java.lang.String str53 = label0.toString();
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector54.putUTF8("");
        org.mockito.asm.ByteVector byteVector62 = byteVector54.putLong(10L);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt(100);
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector70 = byteVector64.putInt(0);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putShort((int) 'a');
        label0.info = byteVector76;
        java.lang.Class<?> wildcardClass78 = byteVector76.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L416407522" + "'", str1, "L416407522");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L211725752" + "'", str14, "L211725752");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L211725752" + "'", str23, "L211725752");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L416407522" + "'", str53, "L416407522");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test02468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02468");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putUTF8("");
        java.lang.Class<?> wildcardClass13 = byteVector7.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02469");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt(1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L102640438");
        java.lang.Class<?> wildcardClass37 = byteVector32.getClass();
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 100);
        label0.info = byteVector47;
        org.mockito.asm.ByteVector byteVector52 = byteVector47.putByte(0);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1381872905" + "'", str1, "L1381872905");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
    }

    @Test
    public void test02470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02470");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        java.lang.Class<?> wildcardClass9 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test02471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02471");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong(0L);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt(0);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (-1));
        java.lang.Class<?> wildcardClass36 = byteVector35.getClass();
        label0.info = wildcardClass36;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L720401071" + "'", str12, "L720401071");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L720401071" + "'", str13, "L720401071");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L720401071" + "'", str14, "L720401071");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test02472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02472");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1573240583");
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02473");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putShort((int) ' ');
        java.lang.Class<?> wildcardClass5 = byteVector2.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test02474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02474");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putUTF8("");
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector23.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putShort(0);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((int) (byte) 100);
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector64 = byteVector50.putByteArray(byteArray61, (int) (byte) 1, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector37.putByteArray(byteArray61, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector70 = byteVector22.putByteArray(byteArray61, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
    }

    @Test
    public void test02475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02475");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector47 = byteVector37.putByteArray(byteArray44, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector37.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector51 = byteVector37.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("L788907338");
        label0.info = "L788907338";
        java.lang.String str55 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int56 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1590925548" + "'", str10, "L1590925548");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L1590925548" + "'", str55, "L1590925548");
    }

    @Test
    public void test02476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02476");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02477");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        java.lang.Object obj30 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int31 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L236691529" + "'", str28, "L236691529");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L236691529" + "'", str29, "L236691529");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "L42697657" + "'", obj30, "L42697657");
    }

    @Test
    public void test02478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02478");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt(10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt(1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putInt(0);
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putByte(100);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector68 = byteVector58.putByteArray(byteArray65, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector53.putByteArray(byteArray65, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector46.putByteArray(byteArray65, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector27.putByteArray(byteArray65, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector80 = byteVector12.putByteArray(byteArray65, (int) (byte) 0, 1);
        org.mockito.asm.ByteVector byteVector82 = byteVector12.putLong((long) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
    }

    @Test
    public void test02479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02479");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        java.lang.String str54 = label53.toString();
        java.lang.Object obj55 = label53.info;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putUTF8("L90138980");
        label53.info = byteVector64;
        java.lang.Object obj66 = label53.info;
        java.lang.Object obj67 = label53.info;
        java.lang.Object obj68 = null;
        label53.info = obj68;
        java.lang.String str70 = label53.toString();
        label4.info = label53;
        // The following exception was thrown during execution in test generation
        try {
            int int72 = label4.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L851523493" + "'", str1, "L851523493");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L2003349073" + "'", str14, "L2003349073");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L2003349073" + "'", str23, "L2003349073");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L1654127048" + "'", str54, "L1654127048");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1654127048" + "'", str70, "L1654127048");
    }

    @Test
    public void test02480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02480");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        java.lang.String str28 = label0.toString();
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        java.lang.String str30 = label29.toString();
        label29.info = (short) 0;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) 100);
        label29.info = byteVector39;
        java.lang.Object obj43 = label29.info;
        label0.info = obj43;
        java.lang.Object obj45 = null;
        label0.info = obj45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putLong(0L);
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector65 = byteVector59.putUTF8("L1102599342");
        label0.info = byteVector59;
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector77 = byteVector71.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector81 = byteVector77.putUTF8("L1515679778");
        label0.info = "L1515679778";
        java.lang.Object obj83 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L730520665" + "'", str28, "L730520665");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1881059171" + "'", str30, "L1881059171");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "L1515679778" + "'", obj83, "L1515679778");
    }

    @Test
    public void test02481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02481");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.Object obj33 = label0.info;
        java.lang.Object obj34 = label0.info;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putByte(100);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector56 = byteVector46.putByteArray(byteArray53, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector41.putByteArray(byteArray53, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector41.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putLong(10L);
        label0.info = 10L;
        // The following exception was thrown during execution in test generation
        try {
            int int71 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1244755531" + "'", str10, "L1244755531");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test02482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02482");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02483");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) (short) 10);
        label0.info = (short) 10;
        java.lang.Object obj48 = label0.info;
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putLong(0L);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt(10);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putUTF8("L219136701");
        org.mockito.asm.ByteVector byteVector75 = byteVector67.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector67.putLong((long) ' ');
        label0.info = byteVector67;
        label0.info = "L479754639";
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1619218281" + "'", str22, "L1619218281");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02484");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putUTF8("L1332878305");
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(0L);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putInt(0);
        org.mockito.asm.ByteVector byteVector48 = byteVector42.putByte(100);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector63 = byteVector53.putByteArray(byteArray60, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector48.putByteArray(byteArray60, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector39.putByteArray(byteArray60, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector10.putByteArray(byteArray60, (int) (byte) 1, 0);
        java.lang.Class<?> wildcardClass73 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test02485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02485");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        java.lang.Object obj12 = label0.info;
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(0L);
        label0.info = byteVector27;
        java.lang.Object obj29 = null;
        label0.info = obj29;
        java.lang.String str31 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L606867769" + "'", str1, "L606867769");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L606867769" + "'", str31, "L606867769");
    }

    @Test
    public void test02486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02486");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(100);
        label0.info = byteVector33;
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        label35.info = byteVector42;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) 100);
        label35.info = byteVector50;
        org.mockito.asm.ByteVector byteVector55 = byteVector50.putShort(100);
        org.mockito.asm.ByteVector byteVector57 = byteVector50.putByte((int) (byte) 10);
        label0.info = byteVector57;
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (short) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("L940563630");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt(1);
        label0.info = byteVector64;
        // The following exception was thrown during execution in test generation
        try {
            int int66 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L78886606" + "'", str1, "L78886606");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L78886606" + "'", str16, "L78886606");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
    }

    @Test
    public void test02487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02487");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        label8.info = byteVector15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label8.info = byteVector23;
        java.lang.Object obj27 = label8.info;
        java.lang.Object obj28 = label8.info;
        java.lang.Object obj29 = label8.info;
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L922707703");
        label8.info = byteVector40;
        java.lang.Class<?> wildcardClass42 = byteVector40.getClass();
        label0.info = byteVector40;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort(100);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector56.putInt((int) (short) -1);
        label0.info = byteVector56;
        org.mockito.asm.ByteVector byteVector69 = byteVector56.putUTF8("L1767476288");
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putShort((int) (byte) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L416734336" + "'", str1, "L416734336");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02488");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02489");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(1L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) 1);
        label0.info = byteVector23;
        org.mockito.asm.ByteVector byteVector32 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector23.putShort((int) (short) 1);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1355752274" + "'", str1, "L1355752274");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test02490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02490");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        java.lang.String str17 = label0.toString();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong((long) (byte) 10);
        label0.info = (byte) 10;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("");
        label38.info = byteVector45;
        org.mockito.asm.ByteVector byteVector48 = byteVector45.putByte((int) (short) 0);
        label0.info = byteVector45;
        org.mockito.asm.ByteVector byteVector51 = byteVector45.putUTF8("L507969751");
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1331645343" + "'", str1, "L1331645343");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1331645343" + "'", str17, "L1331645343");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02491");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        byte[] byteArray3 = null;
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByteArray(byteArray3, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector2.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector2.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt(1);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putByte(100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector54 = byteVector44.putByteArray(byteArray51, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector39.putByteArray(byteArray51, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector30.putByteArray(byteArray51, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector13.putByteArray(byteArray51, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector2.putByteArray(byteArray51, (int) (byte) 0, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putUTF8("L1446930781");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test02492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02492");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector25.putByteArray(byteArray43, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector52 = byteVector18.putByteArray(byteArray43, (int) (short) 0, 0);
        label0.info = byteArray43;
        java.lang.Object obj54 = label0.info;
        java.lang.Object obj55 = label0.info;
        java.lang.String str56 = label0.toString();
        java.lang.String str57 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int58 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L458640917" + "'", str1, "L458640917");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L458640917" + "'", str56, "L458640917");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L458640917" + "'", str57, "L458640917");
    }

    @Test
    public void test02493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02493");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.String str16 = label0.toString();
        java.lang.Object obj17 = label0.info;
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong((long) (short) 10);
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector33 = byteVector30.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector35 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector30.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector30.putInt(10);
        org.mockito.asm.ByteVector byteVector41 = byteVector30.putInt(1);
        java.lang.Class<?> wildcardClass42 = byteVector41.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1635362436" + "'", str16, "L1635362436");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test02494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02494");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putUTF8("L129314881");
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putUTF8("L1388416055");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02495");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) ' ');
        byte[] byteArray18 = null;
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putByteArray(byteArray18, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector17.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector27 = byteVector17.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putByte(100);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt(1);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putInt(0);
        org.mockito.asm.ByteVector byteVector54 = byteVector48.putByte(100);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector69 = byteVector59.putByteArray(byteArray66, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector54.putByteArray(byteArray66, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector75 = byteVector45.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector28.putByteArray(byteArray66, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector81 = byteVector17.putByteArray(byteArray66, (int) (byte) 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector12.putByteArray(byteArray66, (int) '#', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test02496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02496");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putLong((-1L));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02497");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector44 = byteVector34.putByteArray(byteArray41, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray41, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector50 = byteVector20.putByteArray(byteArray41, 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
    }

    @Test
    public void test02498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02498");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.Object obj32 = null;
        label0.info = obj32;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(0L);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort(0);
        label0.info = byteVector55;
        java.lang.String str57 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int58 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1146878888" + "'", str10, "L1146878888");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1146878888" + "'", str34, "L1146878888");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L1146878888" + "'", str57, "L1146878888");
    }

    @Test
    public void test02499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02499");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        label0.info = "L732392118";
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        label13.info = (short) 0;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label13.info = byteVector23;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putInt((int) (short) 10);
        label13.info = (short) 10;
        java.lang.Object obj39 = label13.info;
        label0.info = label13;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label13.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1245458202" + "'", str9, "L1245458202");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1245458202" + "'", str12, "L1245458202");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L707943366" + "'", str14, "L707943366");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
    }

    @Test
    public void test02500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02500");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label0.info;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte(0);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte(100);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putUTF8("L855288385");
        label0.info = byteVector65;
        org.mockito.asm.ByteVector byteVector68 = byteVector65.putUTF8("L429767143");
        java.lang.Class<?> wildcardClass69 = byteVector68.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1659847917" + "'", str22, "L1659847917");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals(obj54.toString(), "L432106632");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "L432106632");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "L432106632");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }
}
