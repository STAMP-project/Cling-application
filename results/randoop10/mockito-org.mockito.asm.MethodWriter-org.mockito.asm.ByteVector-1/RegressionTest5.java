import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test02501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02501");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1212864892");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L78747790");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L512608266");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02502");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(1);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02503");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (-1));
        java.lang.Class<?> wildcardClass33 = byteVector32.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02504");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong(1L);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte(100);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(1);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putInt(0);
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putByte(100);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector64 = byteVector54.putByteArray(byteArray61, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector49.putByteArray(byteArray61, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector70 = byteVector40.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector73 = byteVector23.putByteArray(byteArray61, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector76 = byteVector22.putByteArray(byteArray61, (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02505");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02506");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putUTF8("L219136701");
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt(100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putInt(0);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort(1);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putUTF8("L941510936");
        byte[] byteArray70 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector73 = byteVector63.putByteArray(byteArray70, 0, 1);
        org.mockito.asm.ByteVector byteVector76 = byteVector50.putByteArray(byteArray70, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector79 = byteVector45.putByteArray(byteArray70, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector82 = byteVector30.putByteArray(byteArray70, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test02507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02507");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 'a');
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) 1, (byte) -1 };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector15 = byteVector8.putByteArray(byteArray12, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100, 1, -1]");
    }

    @Test
    public void test02508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02508");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1479199292");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1248293702" + "'", str20, "L1248293702");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test02509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02509");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector25.putByteArray(byteArray43, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector52 = byteVector18.putByteArray(byteArray43, (int) (short) 0, 0);
        label0.info = byteArray43;
        java.lang.Object obj54 = null;
        label0.info = obj54;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putInt(0);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector56.putInt(1);
        org.mockito.asm.ByteVector byteVector68 = byteVector56.putUTF8("L672499662");
        org.mockito.asm.ByteVector byteVector70 = byteVector56.putInt((int) (short) 10);
        label0.info = byteVector56;
        // The following exception was thrown during execution in test generation
        try {
            int int72 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L407913823" + "'", str1, "L407913823");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
    }

    @Test
    public void test02510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02510");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        java.lang.String str54 = label53.toString();
        java.lang.Object obj55 = label53.info;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putUTF8("L90138980");
        label53.info = byteVector64;
        java.lang.Object obj66 = label53.info;
        java.lang.Object obj67 = label53.info;
        java.lang.Object obj68 = null;
        label53.info = obj68;
        java.lang.String str70 = label53.toString();
        label4.info = label53;
        java.lang.Object obj72 = label4.info;
        // The following exception was thrown during execution in test generation
        try {
            int int73 = label4.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1261712857" + "'", str1, "L1261712857");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L316915549" + "'", str14, "L316915549");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L316915549" + "'", str23, "L316915549");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L1019304554" + "'", str54, "L1019304554");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1019304554" + "'", str70, "L1019304554");
        org.junit.Assert.assertNotNull(obj72);
// flaky:         org.junit.Assert.assertEquals(obj72.toString(), "L1019304554");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "L1019304554");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "L1019304554");
    }

    @Test
    public void test02511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02511");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putUTF8("");
        org.mockito.asm.ByteVector byteVector23 = byteVector15.putLong(10L);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong(10L);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte(1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector57.putByteArray(byteArray73, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector82 = byteVector40.putByteArray(byteArray73, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector25.putByteArray(byteArray73, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector12.putByteArray(byteArray73, (int) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test02512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02512");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L707177743");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByte((int) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02513");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putShort(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L2046860623");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1751794688" + "'", str10, "L1751794688");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test02514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02514");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector25.putByteArray(byteArray43, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector52 = byteVector18.putByteArray(byteArray43, (int) (short) 0, 0);
        label0.info = byteArray43;
        java.lang.Object obj54 = label0.info;
        java.lang.Class<?> wildcardClass55 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2112824268" + "'", str1, "L2112824268");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test02515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02515");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putByte(100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte(10);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(100L);
        label0.info = byteVector36;
        org.mockito.asm.ByteVector byteVector39 = byteVector36.putLong(10L);
        org.mockito.asm.ByteVector byteVector41 = byteVector36.putLong(10L);
        org.mockito.asm.ByteVector byteVector43 = byteVector36.putUTF8("L33265023");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L966658185" + "'", str10, "L966658185");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L966658185" + "'", str19, "L966658185");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L966658185" + "'", str22, "L966658185");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
    }

    @Test
    public void test02516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02516");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 1);
        label0.info = (byte) 1;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putByte(1);
        org.mockito.asm.ByteVector byteVector59 = byteVector51.putByte((int) ' ');
        label0.info = byteVector51;
        // The following exception was thrown during execution in test generation
        try {
            int int61 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1235014162" + "'", str1, "L1235014162");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1235014162" + "'", str15, "L1235014162");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1235014162" + "'", str16, "L1235014162");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02517");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putByte(0);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putShort(0);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putShort((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
    }

    @Test
    public void test02518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02518");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = null;
        label0.info = obj23;
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        label25.info = byteVector32;
        java.lang.Object obj34 = label25.info;
        java.lang.String str35 = label25.toString();
        java.lang.Object obj36 = label25.info;
        java.lang.String str37 = label25.toString();
        java.lang.String str38 = label25.toString();
        java.lang.String str39 = label25.toString();
        label0.info = str39;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L186916937" + "'", str10, "L186916937");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L186916937" + "'", str20, "L186916937");
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L186916937" + "'", str22, "L186916937");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(obj34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1865614320" + "'", str35, "L1865614320");
        org.junit.Assert.assertNotNull(obj36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1865614320" + "'", str37, "L1865614320");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1865614320" + "'", str38, "L1865614320");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1865614320" + "'", str39, "L1865614320");
    }

    @Test
    public void test02519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02519");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putByte(100);
        label0.info = byteVector21;
        org.mockito.asm.ByteVector byteVector28 = byteVector21.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector21.putByte((int) (byte) 10);
        java.lang.Class<?> wildcardClass31 = byteVector30.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1855069528" + "'", str1, "L1855069528");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1855069528" + "'", str4, "L1855069528");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1855069528" + "'", str5, "L1855069528");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test02520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02520");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L2094203655");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt(100);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L374832530");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putInt(1);
        org.mockito.asm.ByteVector byteVector44 = byteVector36.putInt((-1));
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        byte[] byteArray56 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putByteArray(byteArray56, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector62 = byteVector44.putByteArray(byteArray56, 1, 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector33.putByteArray(byteArray56, (int) (byte) 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector68 = byteVector20.putByteArray(byteArray56, (int) (byte) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
    }

    @Test
    public void test02521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02521");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L815469913");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) (byte) 0);
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02522");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        java.lang.String str7 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1763137745" + "'", str1, "L1763137745");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1763137745" + "'", str5, "L1763137745");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1763137745" + "'", str6, "L1763137745");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L1763137745" + "'", str7, "L1763137745");
    }

    @Test
    public void test02523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02523");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort(10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt(1);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putInt(0);
        org.mockito.asm.ByteVector byteVector60 = byteVector54.putByte(100);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector75 = byteVector65.putByteArray(byteArray72, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector60.putByteArray(byteArray72, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector81 = byteVector51.putByteArray(byteArray72, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector40.putByteArray(byteArray72, 0, 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector27.putByteArray(byteArray72, (int) (byte) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector90 = byteVector10.putByteArray(byteArray72, (int) (byte) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test02524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02524");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.String str42 = label0.toString();
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        label43.info = byteVector50;
        java.lang.Object obj52 = label43.info;
        java.lang.String str53 = label43.toString();
        java.lang.Object obj54 = label43.info;
        java.lang.String str55 = label43.toString();
        java.lang.String str56 = label43.toString();
        java.lang.String str57 = label43.toString();
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector58.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector70 = byteVector64.putByte((int) 'a');
        label43.info = byteVector64;
        label0.info = label43;
        java.lang.Object obj73 = label43.info;
        // The following exception was thrown during execution in test generation
        try {
            int int74 = label43.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1261138950" + "'", str42, "L1261138950");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(obj52);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L1958411632" + "'", str53, "L1958411632");
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L1958411632" + "'", str55, "L1958411632");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1958411632" + "'", str56, "L1958411632");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L1958411632" + "'", str57, "L1958411632");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test02525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02525");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L190384593");
        label0.info = byteVector34;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong(0L);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector51;
        org.mockito.asm.ByteVector byteVector56 = byteVector51.putUTF8("L334258890");
        org.mockito.asm.ByteVector byteVector58 = byteVector51.putByte((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L114778226" + "'", str11, "L114778226");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L114778226" + "'", str36, "L114778226");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
    }

    @Test
    public void test02526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02526");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L769754150");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector27.putByteArray(byteArray43, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector52 = byteVector14.putByteArray(byteArray43, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
    }

    @Test
    public void test02527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02527");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L71476574");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector25 = byteVector17.putInt(100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector34.putByteArray(byteArray48, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector29.putByteArray(byteArray48, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector60 = byteVector10.putByteArray(byteArray48, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test02528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02528");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L2029839304");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02529");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        label0.info = "L56937410";
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label28.info = byteVector35;
        java.lang.Object obj37 = label28.info;
        java.lang.Object obj38 = label28.info;
        java.lang.Object obj39 = label28.info;
        label0.info = label28;
        java.lang.Object obj41 = label28.info;
        java.lang.Object obj42 = label28.info;
        // The following exception was thrown during execution in test generation
        try {
            int int43 = label28.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L120403082" + "'", str10, "L120403082");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L120403082" + "'", str19, "L120403082");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L120403082" + "'", str22, "L120403082");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L120403082" + "'", str24, "L120403082");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test02530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02530");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        label13.info = byteVector20;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 100);
        label13.info = byteVector28;
        java.lang.Object obj32 = label13.info;
        java.lang.Object obj33 = label13.info;
        java.lang.Object obj34 = label13.info;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L922707703");
        label13.info = byteVector45;
        label0.info = label13;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt(100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putUTF8("L917649164");
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putByte(0);
        label13.info = byteVector64;
        org.mockito.asm.ByteVector byteVector69 = byteVector64.putUTF8("L2040220030");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1135511753" + "'", str10, "L1135511753");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1135511753" + "'", str12, "L1135511753");
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test02531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02531");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.String str16 = label0.toString();
        java.lang.Object obj17 = label0.info;
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte(0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(1L);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1156298596");
        label0.info = byteVector34;
        // The following exception was thrown during execution in test generation
        try {
            int int38 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1733161698" + "'", str16, "L1733161698");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test02532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02532");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1037743870");
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putInt(1);
        org.mockito.asm.ByteVector byteVector23 = byteVector15.putInt((-1));
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByteArray(byteArray35, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector23.putByteArray(byteArray35, 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector44 = byteVector10.putByteArray(byteArray35, (int) (short) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test02533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02533");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putByte((int) (byte) 100);
        java.lang.Class<?> wildcardClass23 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02534");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putShort((int) (short) 0);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02535");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putByte(100);
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt(1);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putByte(100);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector56 = byteVector46.putByteArray(byteArray53, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector41.putByteArray(byteArray53, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector62 = byteVector32.putByteArray(byteArray53, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector65 = byteVector15.putByteArray(byteArray53, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector68 = byteVector14.putByteArray(byteArray53, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
    }

    @Test
    public void test02536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02536");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        java.lang.String str17 = label0.toString();
        java.lang.Class<?> wildcardClass18 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1043973642" + "'", str10, "L1043973642");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1043973642" + "'", str12, "L1043973642");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1043973642" + "'", str15, "L1043973642");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1043973642" + "'", str16, "L1043973642");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1043973642" + "'", str17, "L1043973642");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test02537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02537");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong(1L);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt(1);
        java.lang.Class<?> wildcardClass27 = byteVector26.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02538");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1450915362");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02539");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        java.lang.Class<?> wildcardClass13 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02540");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((-1L));
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort(1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L941510936");
        byte[] byteArray50 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector53 = byteVector43.putByteArray(byteArray50, 0, 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector30.putByteArray(byteArray50, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector23.putByteArray(byteArray50, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector62 = byteVector2.putByteArray(byteArray50, (int) ' ', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02541");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Class<?> wildcardClass21 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02542");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L966497915");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((-1));
        java.lang.Class<?> wildcardClass33 = byteVector32.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02543");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.String str7 = label0.toString();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) (byte) 1);
        label8.info = (byte) 1;
        label0.info = label8;
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector32 = byteVector22.putByteArray(byteArray29, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector22.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector22.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) '#');
        label8.info = byteVector38;
        org.mockito.asm.ByteVector byteVector41 = byteVector38.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (short) 1);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L379981520" + "'", str1, "L379981520");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L379981520" + "'", str5, "L379981520");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L379981520" + "'", str7, "L379981520");
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
    }

    @Test
    public void test02544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02544");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L102640438");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L1168003705");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02545");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1185959520");
        java.lang.Class<?> wildcardClass21 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02546");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 10);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, (int) (byte) 1, 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1900013115");
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putByte((int) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02547");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(0L);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector39 = byteVector31.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt(0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putUTF8("L672499662");
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte(100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector59.putByteArray(byteArray73, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector50.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector45.putByteArray(byteArray73, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector18.putByteArray(byteArray73, 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test02548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02548");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label0.info;
        java.lang.Object obj55 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int56 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L947631495" + "'", str22, "L947631495");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals(obj54.toString(), "L1632330183");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "L1632330183");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "L1632330183");
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "L1632330183");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "L1632330183");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "L1632330183");
    }

    @Test
    public void test02549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02549");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.String str28 = label0.toString();
        java.lang.Object obj29 = label0.info;
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L349332338" + "'", str11, "L349332338");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L349332338" + "'", str28, "L349332338");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test02550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02550");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(100);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByteArray(byteArray35, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector21.putByteArray(byteArray35, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector16.putByteArray(byteArray35, 0, 0);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putInt(0);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
    }

    @Test
    public void test02551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02551");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        label45.info = byteVector52;
        java.lang.Object obj54 = label45.info;
        java.lang.String str55 = label45.toString();
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) (byte) 10);
        label45.info = byteVector62;
        java.lang.Object obj64 = label45.info;
        java.lang.Object obj65 = label45.info;
        java.lang.String str66 = label45.toString();
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong((long) ' ');
        label45.info = byteVector75;
        org.mockito.asm.ByteVector byteVector79 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector83 = byteVector79.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putShort((int) (byte) 100);
        label45.info = byteVector85;
        label0.info = label45;
        java.lang.Object obj90 = label0.info;
        java.lang.Object obj91 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int92 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1909224286" + "'", str3, "L1909224286");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L310425216" + "'", str14, "L310425216");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L310425216" + "'", str23, "L310425216");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L310425216" + "'", str26, "L310425216");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L448750000" + "'", str55, "L448750000");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L448750000" + "'", str66, "L448750000");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(obj90);
// flaky:         org.junit.Assert.assertEquals(obj90.toString(), "L448750000");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "L448750000");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "L448750000");
        org.junit.Assert.assertNotNull(obj91);
// flaky:         org.junit.Assert.assertEquals(obj91.toString(), "L448750000");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "L448750000");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "L448750000");
    }

    @Test
    public void test02552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02552");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putUTF8("L344359002");
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong((long) ' ');
        java.lang.Class<?> wildcardClass43 = byteVector40.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1085896914" + "'", str10, "L1085896914");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test02553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02553");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putInt(100);
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02554");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt(1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putByte((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = byteVector43.getClass();
        label0.info = byteVector43;
        java.lang.Object obj50 = null;
        label0.info = obj50;
        java.lang.Object obj52 = label0.info;
        java.lang.String str53 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int54 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L711527895" + "'", str10, "L711527895");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L711527895" + "'", str19, "L711527895");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L711527895" + "'", str22, "L711527895");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNull(obj52);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L711527895" + "'", str53, "L711527895");
    }

    @Test
    public void test02555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02555");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label12.info = byteVector37;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '4');
        label12.info = byteVector43;
        java.lang.String str45 = label12.toString();
        java.lang.Object obj46 = label12.info;
        java.lang.Object obj47 = label12.info;
        label0.info = label12;
        // The following exception was thrown during execution in test generation
        try {
            int int49 = label12.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1995951530" + "'", str1, "L1995951530");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L214501668" + "'", str22, "L214501668");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L214501668" + "'", str45, "L214501668");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test02556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02556");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong(10L);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02557");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L212441124");
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02558");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        java.lang.String str14 = label0.toString();
        java.lang.String str15 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1315591545" + "'", str1, "L1315591545");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1315591545" + "'", str14, "L1315591545");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1315591545" + "'", str15, "L1315591545");
    }

    @Test
    public void test02559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02559");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.Object obj16 = label0.info;
        label0.info = "L428133195";
        java.lang.Object obj19 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L32409836" + "'", str1, "L32409836");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L32409836" + "'", str15, "L32409836");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "L428133195" + "'", obj19, "L428133195");
    }

    @Test
    public void test02560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02560");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        label62.info = byteVector69;
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putLong((long) 100);
        label62.info = byteVector77;
        java.lang.String str81 = label62.toString();
        java.lang.Object obj82 = label62.info;
        org.mockito.asm.ByteVector byteVector84 = new org.mockito.asm.ByteVector(1);
        label62.info = byteVector84;
        java.lang.String str86 = label62.toString();
        java.lang.Object obj87 = label62.info;
        label0.info = label62;
        java.lang.Object obj89 = label0.info;
        java.lang.Object obj90 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int91 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L2059586348" + "'", str20, "L2059586348");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L302355393" + "'", str59, "L302355393");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L2023748918" + "'", str81, "L2023748918");
        org.junit.Assert.assertNotNull(obj82);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L2023748918" + "'", str86, "L2023748918");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
// flaky:         org.junit.Assert.assertEquals(obj89.toString(), "L2023748918");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "L2023748918");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "L2023748918");
        org.junit.Assert.assertNotNull(obj90);
// flaky:         org.junit.Assert.assertEquals(obj90.toString(), "L2023748918");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "L2023748918");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "L2023748918");
    }

    @Test
    public void test02561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02561");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L586206842");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02562");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector9 = byteVector3.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector3.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector13 = byteVector3.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(1);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L2006102735");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) (byte) 0);
        label0.info = byteVector23;
        java.lang.String str27 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L839750494" + "'", str27, "L839750494");
    }

    @Test
    public void test02563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02563");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (short) 1);
        label0.info = (short) 1;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((int) (short) -1);
        label0.info = byteVector66;
        org.mockito.asm.ByteVector byteVector73 = byteVector66.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector75 = byteVector66.putLong((long) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1798301262" + "'", str10, "L1798301262");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1798301262" + "'", str33, "L1798301262");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1798301262" + "'", str34, "L1798301262");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
    }

    @Test
    public void test02564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02564");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        label0.info = "L1673143499";
        java.lang.String str21 = label0.toString();
        label0.info = 'a';
        java.lang.Class<?> wildcardClass24 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L125575240" + "'", str10, "L125575240");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L125575240" + "'", str21, "L125575240");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test02565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02565");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02566");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        label7.info = byteVector14;
        org.mockito.asm.ByteVector byteVector17 = byteVector14.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        label0.info = byteVector19;
        org.mockito.asm.ByteVector byteVector24 = byteVector19.putUTF8("L364607495");
        org.mockito.asm.ByteVector byteVector26 = byteVector19.putUTF8("L465592951");
        java.lang.Class<?> wildcardClass27 = byteVector19.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1873424742" + "'", str1, "L1873424742");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1873424742" + "'", str4, "L1873424742");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1873424742" + "'", str5, "L1873424742");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02567");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        java.lang.String str20 = label17.toString();
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        label21.info = byteVector28;
        java.lang.Object obj30 = label21.info;
        java.lang.String str31 = label21.toString();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putShort((int) (byte) 10);
        label21.info = byteVector38;
        java.lang.String str40 = label21.toString();
        label21.info = '4';
        java.lang.String str43 = label21.toString();
        java.lang.Object obj44 = label21.info;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putByte((-1));
        label21.info = byteVector55;
        label17.info = byteVector55;
        java.lang.Object obj62 = label17.info;
        label0.info = label17;
        java.lang.Object obj64 = label17.info;
        java.lang.String str65 = label17.toString();
        java.lang.String str66 = label17.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int67 = label17.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L218294390" + "'", str16, "L218294390");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L108166518" + "'", str20, "L108166518");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1643766990" + "'", str31, "L1643766990");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1643766990" + "'", str40, "L1643766990");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1643766990" + "'", str43, "L1643766990");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + '4' + "'", obj44, '4');
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L108166518" + "'", str65, "L108166518");
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L108166518" + "'", str66, "L108166518");
    }

    @Test
    public void test02568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02568");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02569");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L1906462973");
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        java.lang.Object obj19 = label17.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L90138980");
        label17.info = byteVector28;
        java.lang.Object obj30 = label17.info;
        java.lang.Object obj31 = label17.info;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector48 = byteVector42.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector63 = byteVector53.putByteArray(byteArray60, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector42.putByteArray(byteArray60, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector35.putByteArray(byteArray60, (int) (short) 0, 0);
        label17.info = byteArray60;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector73 = byteVector16.putByteArray(byteArray60, (int) (byte) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1511860556" + "'", str18, "L1511860556");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test02570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02570");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((-1L));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong(1L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02571");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        label0.info = "L499234616";
        java.lang.String str17 = label0.toString();
        java.lang.Object obj18 = label0.info;
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L159729243");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putByte((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector33.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort(100);
        label0.info = byteVector41;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L386554824");
        byte[] byteArray54 = null;
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putByteArray(byteArray54, (int) (byte) 100, 100);
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector61 = byteVector53.putByte((int) (short) 0);
        label0.info = byteVector61;
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putByte((-1));
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector77 = byteVector73.putUTF8("L1212864892");
        label0.info = "L1212864892";
        // The following exception was thrown during execution in test generation
        try {
            int int79 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1385409705" + "'", str1, "L1385409705");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1385409705" + "'", str4, "L1385409705");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1385409705" + "'", str17, "L1385409705");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "L499234616" + "'", obj18, "L499234616");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02572");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        java.lang.Object obj31 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L224647117" + "'", str10, "L224647117");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L224647117" + "'", str19, "L224647117");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L224647117" + "'", str22, "L224647117");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test02573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02573");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.String str14 = label0.toString();
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        java.lang.String str17 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L961571852" + "'", str1, "L961571852");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L961571852" + "'", str14, "L961571852");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L961571852" + "'", str15, "L961571852");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L961571852" + "'", str16, "L961571852");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L961571852" + "'", str17, "L961571852");
    }

    @Test
    public void test02574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02574");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putUTF8("L523837937");
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02575");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.Object obj22 = label0.info;
        java.lang.String str23 = label0.toString();
        java.lang.Class<?> wildcardClass24 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1933253468" + "'", str10, "L1933253468");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1933253468" + "'", str20, "L1933253468");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1933253468" + "'", str23, "L1933253468");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test02576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02576");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L781425144");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt(1);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putByte(100);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector53 = byteVector43.putByteArray(byteArray50, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector38.putByteArray(byteArray50, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector29.putByteArray(byteArray50, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector62 = byteVector18.putByteArray(byteArray50, 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02577");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putInt(1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt((int) (byte) 100);
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector47 = byteVector33.putByteArray(byteArray44, (int) (byte) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector50 = byteVector18.putByteArray(byteArray44, (int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector47);
    }

    @Test
    public void test02578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02578");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putByte((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) (short) 10);
        label0.info = byteVector32;
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        label34.info = byteVector41;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) 100);
        label34.info = byteVector49;
        java.lang.Object obj53 = label34.info;
        java.lang.String str54 = label34.toString();
        label34.info = 100L;
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong(1L);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putByte((int) (short) 100);
        label34.info = (short) 100;
        org.mockito.asm.Label label73 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector74 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putShort((-1));
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        label73.info = byteVector80;
        org.mockito.asm.ByteVector byteVector82 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector86 = byteVector82.putShort((-1));
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector90 = byteVector88.putLong((long) 100);
        label73.info = byteVector88;
        java.lang.Object obj92 = label73.info;
        java.lang.String str93 = label73.toString();
        java.lang.Class<?> wildcardClass94 = label73.getClass();
        label34.info = label73;
        java.lang.Object obj96 = label73.info;
        label0.info = label73;
        java.lang.String str98 = label0.toString();
        java.lang.String str99 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L767526168" + "'", str10, "L767526168");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L767526168" + "'", str19, "L767526168");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L767526168" + "'", str20, "L767526168");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L767526168" + "'", str21, "L767526168");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L1946323527" + "'", str54, "L1946323527");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(obj92);
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "L333319360" + "'", str93, "L333319360");
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj96);
// flaky:         org.junit.Assert.assertEquals("'" + str98 + "' != '" + "L767526168" + "'", str98, "L767526168");
// flaky:         org.junit.Assert.assertEquals("'" + str99 + "' != '" + "L767526168" + "'", str99, "L767526168");
    }

    @Test
    public void test02579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02579");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putByte(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1451583337");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt((int) (byte) 100);
        java.lang.Class<?> wildcardClass25 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02580");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        byte[] byteArray9 = null;
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByteArray(byteArray9, (int) (byte) 100, 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L3456091");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02581");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        label16.info = byteVector23;
        java.lang.Object obj25 = label16.info;
        java.lang.String str26 = label16.toString();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putShort((int) (byte) 10);
        label16.info = byteVector33;
        java.lang.Object obj35 = label16.info;
        java.lang.Object obj36 = label16.info;
        java.lang.String str37 = label16.toString();
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector38.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) ' ');
        label16.info = byteVector46;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte(10);
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putLong(100L);
        label16.info = byteVector58;
        java.lang.Object obj64 = label16.info;
        label0.info = label16;
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector84 = byteVector80.putLong((long) (short) -1);
        label0.info = (short) -1;
        java.lang.Object obj86 = label0.info;
        java.lang.String str87 = label0.toString();
        java.lang.String str88 = label0.toString();
        java.lang.Object obj89 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1621035776" + "'", str10, "L1621035776");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1621035776" + "'", str12, "L1621035776");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1621035776" + "'", str15, "L1621035776");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1555056145" + "'", str26, "L1555056145");
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1555056145" + "'", str37, "L1555056145");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) -1 + "'", obj86, (short) -1);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L1621035776" + "'", str87, "L1621035776");
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "L1621035776" + "'", str88, "L1621035776");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (short) -1 + "'", obj89, (short) -1);
    }

    @Test
    public void test02582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02582");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putLong((long) 'a');
        label0.info = byteVector15;
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        java.lang.Class<?> wildcardClass25 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1820887790" + "'", str10, "L1820887790");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1820887790" + "'", str24, "L1820887790");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02583");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector40 = byteVector30.putByteArray(byteArray37, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector19.putByteArray(byteArray37, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector46 = byteVector10.putByteArray(byteArray37, (int) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
    }

    @Test
    public void test02584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02584");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (byte) 10);
        java.lang.Class<?> wildcardClass17 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02585");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) '4');
        byte[] byteArray20 = new byte[] { (byte) 100 };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector23 = byteVector18.putByteArray(byteArray20, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
    }

    @Test
    public void test02586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02586");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector17.putLong(10L);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte(100);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong(10L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort(1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt(100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt(0);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putByte((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort(1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putUTF8("L941510936");
        byte[] byteArray75 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector78 = byteVector68.putByteArray(byteArray75, 0, 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector55.putByteArray(byteArray75, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector50.putByteArray(byteArray75, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector35.putByteArray(byteArray75, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector90 = byteVector14.putByteArray(byteArray75, (int) (byte) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test02587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02587");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putByte(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1451583337");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt((int) (short) 0);
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02588");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 100);
        label5.info = byteVector60;
        java.lang.String str64 = label5.toString();
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putInt(10);
        label5.info = byteVector69;
        // The following exception was thrown during execution in test generation
        try {
            int int73 = label5.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L87516613" + "'", str1, "L87516613");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L87516613" + "'", str2, "L87516613");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L87516613" + "'", str4, "L87516613");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L930227567" + "'", str6, "L930227567");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L930227567" + "'", str20, "L930227567");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L930227567" + "'", str21, "L930227567");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1597717429" + "'", str31, "L1597717429");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L930227567" + "'", str64, "L930227567");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
    }

    @Test
    public void test02589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02589");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        java.lang.Object obj7 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1225591235" + "'", str1, "L1225591235");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1225591235" + "'", str4, "L1225591235");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1225591235" + "'", str5, "L1225591235");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1225591235" + "'", str6, "L1225591235");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 0 + "'", obj7, (short) 0);
    }

    @Test
    public void test02590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02590");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (-1));
        label0.info = (-1);
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        java.lang.Object obj38 = label0.info;
        java.lang.String str39 = label0.toString();
        java.lang.Object obj40 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L216733198" + "'", str10, "L216733198");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L216733198" + "'", str19, "L216733198");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L216733198" + "'", str36, "L216733198");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1) + "'", obj37, (-1));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1) + "'", obj38, (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L216733198" + "'", str39, "L216733198");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (-1) + "'", obj40, (-1));
    }

    @Test
    public void test02591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02591");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L966497915");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByte(100);
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putUTF8("");
        java.lang.Class<?> wildcardClass35 = byteVector34.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02592");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L922707703");
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong((long) (byte) 0);
        label0.info = byteVector46;
        label0.info = "L92034654";
        // The following exception was thrown during execution in test generation
        try {
            int int50 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
    }

    @Test
    public void test02593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02593");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1577904254");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L870741891");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort(100);
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        label27.info = ' ';
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putInt(0);
        label27.info = byteVector34;
        org.mockito.asm.ByteVector byteVector37 = byteVector34.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector49 = byteVector41.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt(0);
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putByte(100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putByteArray(byteArray68, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector56.putByteArray(byteArray68, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector49.putByteArray(byteArray68, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector80 = byteVector20.putByteArray(byteArray68, (int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02594");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("L2141643392");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L894002382");
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putUTF8("L186080720");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02595");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putUTF8("L1102599342");
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L102057911");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong(100L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02596");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 0);
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02597");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        java.lang.Object obj12 = label0.info;
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(0L);
        label0.info = byteVector27;
        java.lang.String str29 = label0.toString();
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putInt(1);
        org.mockito.asm.ByteVector byteVector38 = byteVector30.putInt((-1));
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector53 = byteVector43.putByteArray(byteArray50, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector38.putByteArray(byteArray50, 1, 1);
        label0.info = 1;
        java.lang.Object obj58 = label0.info;
        java.lang.Object obj59 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int60 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1310097921" + "'", str1, "L1310097921");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1310097921" + "'", str29, "L1310097921");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1 + "'", obj58, 1);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1 + "'", obj59, 1);
    }

    @Test
    public void test02598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02598");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector25.putByteArray(byteArray43, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector52 = byteVector18.putByteArray(byteArray43, (int) (short) 0, 0);
        label0.info = byteArray43;
        java.lang.Object obj54 = label0.info;
        java.lang.String str55 = label0.toString();
        java.lang.Object obj56 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int57 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1884022209" + "'", str1, "L1884022209");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L1884022209" + "'", str55, "L1884022209");
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test02599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02599");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02600");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putUTF8("L68276687");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1933005279");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong(100L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02601");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        label0.info = byteVector20;
        java.lang.Object obj24 = label0.info;
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putLong(0L);
        org.mockito.asm.ByteVector byteVector39 = byteVector31.putLong((long) ' ');
        label0.info = byteVector39;
        label0.info = "L1659120065";
        // The following exception was thrown during execution in test generation
        try {
            int int43 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1731891581" + "'", str1, "L1731891581");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
    }

    @Test
    public void test02602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02602");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.Object obj7 = label0.info;
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        label8.info = byteVector15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label8.info = byteVector23;
        org.mockito.asm.ByteVector byteVector28 = byteVector23.putShort(100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort(1);
        label0.info = 1;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte(0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putInt(1);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) (short) 1);
        label0.info = byteVector50;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1432611290" + "'", str1, "L1432611290");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1432611290" + "'", str2, "L1432611290");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1432611290" + "'", str5, "L1432611290");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
    }

    @Test
    public void test02603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02603");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02604");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector18 = byteVector4.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector20 = byteVector4.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt(100);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putByte((int) (short) -1);
        byte[] byteArray42 = new byte[] { (byte) 100, (byte) 0, (byte) 0, (byte) 10, (byte) 1, (byte) -1 };
        org.mockito.asm.ByteVector byteVector45 = byteVector35.putByteArray(byteArray42, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector48 = byteVector4.putByteArray(byteArray42, (int) '4', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100, 0, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(byteVector45);
    }

    @Test
    public void test02605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02605");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong(0L);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt(1);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt(0);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putByte(100);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putByteArray(byteArray69, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector57.putByteArray(byteArray69, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector48.putByteArray(byteArray69, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector81 = byteVector35.putByteArray(byteArray69, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector18.putByteArray(byteArray69, (int) (byte) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test02606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02606");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02607");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        label26.info = byteVector33;
        java.lang.Object obj35 = label26.info;
        java.lang.String str36 = label26.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong(1L);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) (short) 100);
        label26.info = byteVector51;
        org.mockito.asm.ByteVector byteVector54 = byteVector51.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector51.putLong(0L);
        org.mockito.asm.ByteVector byteVector58 = byteVector51.putUTF8("");
        org.mockito.asm.ByteVector byteVector60 = byteVector51.putByte((int) (byte) -1);
        label0.info = byteVector60;
        java.lang.Object obj62 = null;
        label0.info = obj62;
        java.lang.Object obj64 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int65 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1375964989" + "'", str19, "L1375964989");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1375964989" + "'", str24, "L1375964989");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1062420407" + "'", str36, "L1062420407");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test02608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02608");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L1624435277");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte(10);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByteArray(byteArray35, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector21.putByteArray(byteArray35, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector44 = byteVector14.putByteArray(byteArray35, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test02609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02609");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        java.lang.Object obj62 = label0.info;
        label0.info = 0L;
        java.lang.String str65 = label0.toString();
        java.lang.String str66 = label0.toString();
        java.lang.String str67 = label0.toString();
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector68.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putLong(1L);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putShort((-1));
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putUTF8("L1024735804");
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector88.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector92 = byteVector88.putInt((int) (byte) -1);
        label0.info = byteVector92;
        java.lang.String str94 = label0.toString();
        java.lang.Object obj95 = label0.info;
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1183343931" + "'", str20, "L1183343931");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1927403232" + "'", str59, "L1927403232");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L1927403232");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L1927403232");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L1927403232");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L1183343931" + "'", str65, "L1183343931");
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L1183343931" + "'", str66, "L1183343931");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1183343931" + "'", str67, "L1183343931");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L1183343931" + "'", str94, "L1183343931");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test02610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02610");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L230057508");
        label0.info = byteVector21;
        java.lang.Object obj25 = label0.info;
        java.lang.Object obj26 = label0.info;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putUTF8("L429124580");
        label0.info = byteVector37;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1999893913" + "'", str9, "L1999893913");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1999893913" + "'", str10, "L1999893913");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
    }

    @Test
    public void test02611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02611");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (short) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("L940563630");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putInt(1);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putShort(0);
        java.lang.Class<?> wildcardClass12 = byteVector9.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test02612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02612");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L1076743862");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02613");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.Object obj4 = label0.info;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putByte((-1));
        label0.info = byteVector13;
        org.mockito.asm.ByteVector byteVector16 = byteVector13.putByte((int) (short) -1);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1853537802" + "'", str1, "L1853537802");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1853537802" + "'", str2, "L1853537802");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02614");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L466234737");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putByte((int) ' ');
        java.lang.Class<?> wildcardClass29 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02615");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putInt((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector6.putLong(100L);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((-1L));
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putInt(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort(1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putUTF8("L941510936");
        byte[] byteArray73 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector53.putByteArray(byteArray73, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector46.putByteArray(byteArray73, 0, 0);
        org.mockito.asm.ByteVector byteVector85 = byteVector23.putByteArray(byteArray73, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector6.putByteArray(byteArray73, (int) (byte) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test02616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02616");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt(1);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putByte(100);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector74 = byteVector64.putByteArray(byteArray71, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector59.putByteArray(byteArray71, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector80 = byteVector50.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector83 = byteVector37.putByteArray(byteArray71, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector86 = byteVector14.putByteArray(byteArray71, 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
    }

    @Test
    public void test02617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02617");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = null;
        label0.info = obj18;
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        label20.info = ' ';
        java.lang.String str23 = label20.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        label24.info = byteVector31;
        java.lang.Object obj33 = label24.info;
        java.lang.String str34 = label24.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        label24.info = byteVector41;
        java.lang.String str43 = label24.toString();
        label24.info = '4';
        java.lang.String str46 = label24.toString();
        java.lang.Object obj47 = label24.info;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putByte((-1));
        label24.info = byteVector58;
        label20.info = byteVector58;
        java.lang.Object obj65 = label20.info;
        label0.info = obj65;
        // The following exception was thrown during execution in test generation
        try {
            int int67 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L741790425" + "'", str1, "L741790425");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L741790425" + "'", str15, "L741790425");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L741790425" + "'", str16, "L741790425");
        org.junit.Assert.assertNotNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L806947157" + "'", str23, "L806947157");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L50243321" + "'", str34, "L50243321");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L50243321" + "'", str43, "L50243321");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L50243321" + "'", str46, "L50243321");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + '4' + "'", obj47, '4');
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test02618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02618");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        java.lang.Object obj9 = null;
        label0.info = obj9;
        java.lang.String str11 = label0.toString();
        java.lang.Class<?> wildcardClass12 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1387779451" + "'", str11, "L1387779451");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test02619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02619");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.String str16 = label15.toString();
        label15.info = (short) 0;
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) 100);
        label15.info = byteVector25;
        java.lang.Object obj29 = label15.info;
        java.lang.Object obj30 = label15.info;
        label0.info = label15;
        java.lang.String str32 = label0.toString();
        label0.info = "L618557187";
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1469084380" + "'", str1, "L1469084380");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1469084380" + "'", str4, "L1469084380");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L994667736" + "'", str16, "L994667736");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1469084380" + "'", str32, "L1469084380");
    }

    @Test
    public void test02620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02620");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02621");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("");
        java.lang.Class<?> wildcardClass29 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02622");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) 'a');
        java.lang.Class<?> wildcardClass23 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02623");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.String str17 = label0.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        label18.info = byteVector25;
        java.lang.Object obj27 = label18.info;
        java.lang.String str28 = label18.toString();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        label18.info = byteVector35;
        java.lang.String str37 = label18.toString();
        label18.info = '4';
        java.lang.String str40 = label18.toString();
        java.lang.Object obj41 = label18.info;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putByte((-1));
        label18.info = byteVector52;
        org.mockito.asm.ByteVector byteVector59 = byteVector52.putInt((int) (byte) -1);
        label0.info = byteVector59;
        java.lang.String str61 = label0.toString();
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putInt(0);
        org.mockito.asm.ByteVector byteVector68 = byteVector62.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector70 = byteVector62.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector62.putInt(1);
        label0.info = byteVector62;
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector75 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putShort((-1));
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putUTF8("hi!");
        label74.info = byteVector81;
        java.lang.Object obj83 = label74.info;
        java.lang.String str84 = label74.toString();
        org.mockito.asm.ByteVector byteVector85 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putUTF8("hi!");
        label74.info = "hi!";
        java.lang.Object obj89 = label74.info;
        java.lang.Object obj90 = label74.info;
        label74.info = "";
        java.lang.Class<?> wildcardClass93 = label74.getClass();
        label0.info = wildcardClass93;
        // The following exception was thrown during execution in test generation
        try {
            int int95 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L388909945" + "'", str17, "L388909945");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L22967181" + "'", str28, "L22967181");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L22967181" + "'", str37, "L22967181");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L22967181" + "'", str40, "L22967181");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + '4' + "'", obj41, '4');
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L388909945" + "'", str61, "L388909945");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(obj83);
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "L1173811983" + "'", str84, "L1173811983");
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "hi!" + "'", obj90, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test02624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02624");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1154477694");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong(1L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector56 = byteVector46.putByteArray(byteArray53, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector37.putByteArray(byteArray53, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector62 = byteVector20.putByteArray(byteArray53, 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02625");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        label11.info = byteVector18;
        java.lang.Object obj20 = label11.info;
        java.lang.String str21 = label11.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        label11.info = byteVector28;
        label0.info = byteVector28;
        java.lang.Object obj31 = label0.info;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector40 = byteVector32.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector32.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) (byte) 10);
        label0.info = (byte) 10;
        java.lang.Object obj46 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int47 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L469917735" + "'", str10, "L469917735");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1592383134" + "'", str21, "L1592383134");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 10 + "'", obj46, (byte) 10);
    }

    @Test
    public void test02626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02626");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L2130541591");
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector14.putUTF8("L1646567386");
        org.mockito.asm.ByteVector byteVector26 = byteVector14.putByte(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02627");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 100);
        label5.info = byteVector60;
        org.mockito.asm.Label label64 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putShort((-1));
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("");
        label64.info = byteVector71;
        java.lang.Object obj73 = label64.info;
        java.lang.Object obj74 = label64.info;
        label5.info = obj74;
        // The following exception was thrown during execution in test generation
        try {
            int int76 = label5.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L679529999" + "'", str1, "L679529999");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L679529999" + "'", str2, "L679529999");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L679529999" + "'", str4, "L679529999");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1867154534" + "'", str6, "L1867154534");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1867154534" + "'", str20, "L1867154534");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1867154534" + "'", str21, "L1867154534");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1711730758" + "'", str31, "L1711730758");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test02628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02628");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putShort(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L1804146627");
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte(100);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByteArray(byteArray35, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector23.putByteArray(byteArray35, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector44 = byteVector16.putByteArray(byteArray35, (int) '#', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test02629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02629");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt(1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L102640438");
        java.lang.Class<?> wildcardClass37 = byteVector32.getClass();
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putInt(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) (byte) 100);
        label0.info = (byte) 100;
        java.lang.String str53 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1157024975" + "'", str1, "L1157024975");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L1157024975" + "'", str53, "L1157024975");
    }

    @Test
    public void test02630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02630");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L781425144");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt(1);
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        label19.info = ' ';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putInt(0);
        label19.info = byteVector26;
        org.mockito.asm.ByteVector byteVector29 = byteVector26.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte(0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector54 = byteVector48.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector69 = byteVector59.putByteArray(byteArray66, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector48.putByteArray(byteArray66, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector75 = byteVector41.putByteArray(byteArray66, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector37.putByteArray(byteArray66, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector81 = byteVector18.putByteArray(byteArray66, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test02631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02631");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(1L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) 1);
        label0.info = byteVector23;
        java.lang.Object obj31 = null;
        label0.info = obj31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(0L);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt(10);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt((int) 'a');
        label0.info = byteVector53;
        java.lang.Object obj59 = label0.info;
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        label60.info = byteVector67;
        java.lang.Object obj69 = label60.info;
        java.lang.String str70 = label60.toString();
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector71.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putLong(1L);
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putByte((int) (short) 100);
        label60.info = byteVector85;
        org.mockito.asm.ByteVector byteVector88 = byteVector85.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector90 = byteVector85.putLong(0L);
        org.mockito.asm.ByteVector byteVector92 = byteVector85.putUTF8("");
        org.mockito.asm.ByteVector byteVector94 = byteVector85.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector96 = byteVector85.putUTF8("L1336941656");
        org.mockito.asm.ByteVector byteVector98 = byteVector85.putUTF8("L836414179");
        label0.info = byteVector98;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L47793264" + "'", str1, "L47793264");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L47793264" + "'", str33, "L47793264");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L47793264" + "'", str34, "L47793264");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(obj69);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L861677936" + "'", str70, "L861677936");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector94);
        org.junit.Assert.assertNotNull(byteVector96);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test02632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02632");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 0);
        java.lang.Class<?> wildcardClass13 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02633");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        label13.info = byteVector20;
        java.lang.Object obj22 = label13.info;
        java.lang.String str23 = label13.toString();
        java.lang.Object obj24 = label13.info;
        java.lang.String str25 = label13.toString();
        java.lang.String str26 = label13.toString();
        java.lang.String str27 = label13.toString();
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label28.info = byteVector35;
        java.lang.Object obj37 = label28.info;
        java.lang.String str38 = label28.toString();
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong(1L);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) (short) 100);
        label28.info = byteVector53;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putInt((int) '4');
        label28.info = byteVector59;
        java.lang.String str61 = label28.toString();
        java.lang.Object obj62 = label28.info;
        label13.info = obj62;
        java.lang.String str64 = label13.toString();
        java.lang.String str65 = label13.toString();
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        label66.info = byteVector73;
        java.lang.Object obj75 = label66.info;
        java.lang.String str76 = label66.toString();
        org.mockito.asm.ByteVector byteVector77 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector81 = byteVector77.putShort((-1));
        org.mockito.asm.ByteVector byteVector83 = byteVector77.putShort((int) (byte) 10);
        label66.info = byteVector83;
        label66.info = "L1673143499";
        java.lang.String str87 = label66.toString();
        java.lang.Object obj88 = label66.info;
        java.lang.Object obj89 = label66.info;
        label13.info = label66;
        java.lang.Object obj91 = label13.info;
        label0.info = obj91;
        java.lang.Object obj93 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int94 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L654995647" + "'", str12, "L654995647");
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L839174707" + "'", str23, "L839174707");
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L839174707" + "'", str25, "L839174707");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L839174707" + "'", str26, "L839174707");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L839174707" + "'", str27, "L839174707");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(obj37);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1213419243" + "'", str38, "L1213419243");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1213419243" + "'", str61, "L1213419243");
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L839174707" + "'", str64, "L839174707");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L839174707" + "'", str65, "L839174707");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(obj75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L1130386662" + "'", str76, "L1130386662");
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L1130386662" + "'", str87, "L1130386662");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "L1673143499" + "'", obj88, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "L1673143499" + "'", obj89, "L1673143499");
        org.junit.Assert.assertNotNull(obj91);
// flaky:         org.junit.Assert.assertEquals(obj91.toString(), "L1130386662");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "L1130386662");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "L1130386662");
        org.junit.Assert.assertNotNull(obj93);
// flaky:         org.junit.Assert.assertEquals(obj93.toString(), "L1130386662");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "L1130386662");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "L1130386662");
    }

    @Test
    public void test02634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02634");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L190384593");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putByte(10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02635");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) (byte) 100);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label13.info = ' ';
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt(0);
        label13.info = byteVector20;
        org.mockito.asm.ByteVector byteVector23 = byteVector20.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((-1L));
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort(0);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector51 = byteVector41.putByteArray(byteArray48, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector34.putByteArray(byteArray48, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector29.putByteArray(byteArray48, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector60 = byteVector10.putByteArray(byteArray48, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test02636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02636");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        label0.info = "L507928585";
        java.lang.Object obj17 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int18 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L468804104" + "'", str1, "L468804104");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L468804104" + "'", str4, "L468804104");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "L507928585" + "'", obj17, "L507928585");
    }

    @Test
    public void test02637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02637");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int22 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1740688458" + "'", str10, "L1740688458");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1740688458" + "'", str20, "L1740688458");
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test02638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02638");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((-1));
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putByte(100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte(10);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putLong(100L);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt(1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte(0);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector61.putByteArray(byteArray79, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector54.putByteArray(byteArray79, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector50.putByteArray(byteArray79, 1, 0);
        org.mockito.asm.ByteVector byteVector94 = byteVector27.putByteArray(byteArray79, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector97 = byteVector16.putByteArray(byteArray79, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector94);
    }

    @Test
    public void test02639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02639");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        java.lang.String str20 = label17.toString();
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        label21.info = byteVector28;
        java.lang.Object obj30 = label21.info;
        java.lang.String str31 = label21.toString();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putShort((int) (byte) 10);
        label21.info = byteVector38;
        java.lang.String str40 = label21.toString();
        label21.info = '4';
        java.lang.String str43 = label21.toString();
        java.lang.Object obj44 = label21.info;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putByte((-1));
        label21.info = byteVector55;
        label17.info = byteVector55;
        java.lang.Object obj62 = label17.info;
        label0.info = label17;
        java.lang.String str64 = label0.toString();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L758738077" + "'", str16, "L758738077");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1877996508" + "'", str20, "L1877996508");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L620425273" + "'", str31, "L620425273");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L620425273" + "'", str40, "L620425273");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L620425273" + "'", str43, "L620425273");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + '4' + "'", obj44, '4');
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L758738077" + "'", str64, "L758738077");
    }

    @Test
    public void test02640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02640");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1212864892");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putShort((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02641");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02642");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L966497915");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(1);
        java.lang.Class<?> wildcardClass31 = byteVector30.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test02643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02643");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt(100);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) (byte) -1);
        label0.info = byteVector35;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt(1);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putInt(0);
        org.mockito.asm.ByteVector byteVector60 = byteVector54.putByte(100);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector75 = byteVector65.putByteArray(byteArray72, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector60.putByteArray(byteArray72, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector81 = byteVector53.putByteArray(byteArray72, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector84 = byteVector35.putByteArray(byteArray72, (int) '#', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1715525558" + "'", str10, "L1715525558");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
    }

    @Test
    public void test02644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02644");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02645");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong(1L);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02646");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label16.info = ' ';
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector26 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(1);
        label0.info = byteVector26;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putShort((int) (short) 10);
        label0.info = byteVector32;
        java.lang.Object obj40 = label0.info;
        java.lang.Class<?> wildcardClass41 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L150273745" + "'", str10, "L150273745");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L150273745" + "'", str12, "L150273745");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L150273745" + "'", str15, "L150273745");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test02647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02647");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector4.putUTF8("L1909147429");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1507841420");
        byte[] byteArray36 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) 10 };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector39 = byteVector28.putByteArray(byteArray36, (int) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100, -1, 10, -1, 10]");
    }

    @Test
    public void test02648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02648");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(0L);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort(10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt(1);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putByte(100);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector74 = byteVector64.putByteArray(byteArray71, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector59.putByteArray(byteArray71, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector80 = byteVector50.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector83 = byteVector39.putByteArray(byteArray71, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector86 = byteVector24.putByteArray(byteArray71, 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
    }

    @Test
    public void test02649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02649");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L230057508");
        label0.info = byteVector21;
        org.mockito.asm.ByteVector byteVector26 = byteVector21.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong(0L);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putLong((long) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L515501360" + "'", str9, "L515501360");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L515501360" + "'", str10, "L515501360");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02650");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector19.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector42 = byteVector32.putByteArray(byteArray39, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector25.putByteArray(byteArray39, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector48 = byteVector18.putByteArray(byteArray39, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
    }

    @Test
    public void test02651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02651");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt(1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L190384593");
        label0.info = byteVector34;
        label0.info = "L350777171";
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L704530099" + "'", str11, "L704530099");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test02652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02652");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putByte((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
    }

    @Test
    public void test02653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02653");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L777054240");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02654");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt(1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L102640438");
        java.lang.Class<?> wildcardClass37 = byteVector32.getClass();
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putInt(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) (byte) 100);
        label0.info = (byte) 100;
        java.lang.Object obj53 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1026750952" + "'", str1, "L1026750952");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
    }

    @Test
    public void test02655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02655");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1824725841");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02656");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        java.lang.String str7 = label0.toString();
        java.lang.Object obj8 = label0.info;
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.String str10 = label9.toString();
        label9.info = (short) 0;
        java.lang.String str13 = label9.toString();
        java.lang.String str14 = label9.toString();
        java.lang.Object obj15 = label9.info;
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label16.info = ' ';
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector26 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        label9.info = byteVector28;
        java.lang.Object obj32 = label9.info;
        java.lang.Object obj33 = label9.info;
        java.lang.Object obj34 = label9.info;
        label0.info = label9;
        // The following exception was thrown during execution in test generation
        try {
            int int36 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1550657316" + "'", str1, "L1550657316");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1550657316" + "'", str5, "L1550657316");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1550657316" + "'", str6, "L1550657316");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L1550657316" + "'", str7, "L1550657316");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 0 + "'", obj8, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1157826703" + "'", str10, "L1157826703");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1157826703" + "'", str13, "L1157826703");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1157826703" + "'", str14, "L1157826703");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 0 + "'", obj15, (short) 0);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test02657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02657");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong(10L);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L2055400366");
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort(10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt(1);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putInt(0);
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putByte(100);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector67.putByteArray(byteArray79, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector58.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector47.putByteArray(byteArray79, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector94 = byteVector36.putByteArray(byteArray79, (int) (short) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test02658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02658");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        label16.info = byteVector23;
        java.lang.Object obj25 = label16.info;
        java.lang.String str26 = label16.toString();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putShort((int) (byte) 10);
        label16.info = byteVector33;
        label16.info = "L1673143499";
        java.lang.String str37 = label16.toString();
        label16.info = 'a';
        label0.info = label16;
        java.lang.Object obj41 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int42 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L325609824" + "'", str1, "L325609824");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L183111718" + "'", str26, "L183111718");
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L183111718" + "'", str37, "L183111718");
        org.junit.Assert.assertNotNull(obj41);
// flaky:         org.junit.Assert.assertEquals(obj41.toString(), "L183111718");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "L183111718");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "L183111718");
    }

    @Test
    public void test02659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02659");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02660");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        java.lang.Object obj19 = label17.info;
        java.lang.Object obj20 = label17.info;
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        label21.info = byteVector28;
        java.lang.Object obj30 = label21.info;
        java.lang.String str31 = label21.toString();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putShort((int) (byte) 10);
        label21.info = byteVector38;
        java.lang.String str40 = label21.toString();
        label21.info = '4';
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putLong((long) (-1));
        label21.info = (-1);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putLong((long) (short) 10);
        label21.info = byteVector67;
        label17.info = label21;
        label0.info = label17;
        java.lang.Object obj71 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L387248225" + "'", str1, "L387248225");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1384472579" + "'", str18, "L1384472579");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1046781762" + "'", str31, "L1046781762");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1046781762" + "'", str40, "L1046781762");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(obj71);
// flaky:         org.junit.Assert.assertEquals(obj71.toString(), "L1384472579");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "L1384472579");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "L1384472579");
    }

    @Test
    public void test02661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02661");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong(0L);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putUTF8("L941510936");
        byte[] byteArray26 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector29 = byteVector19.putByteArray(byteArray26, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector32 = byteVector6.putByteArray(byteArray26, (int) (byte) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector29);
    }

    @Test
    public void test02662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02662");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        label0.info = "L732392118";
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        label12.info = "hi!";
        java.lang.String str27 = label12.toString();
        java.lang.Object obj28 = label12.info;
        java.lang.Object obj29 = label12.info;
        label0.info = label12;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort(10);
        label0.info = byteVector37;
        java.lang.String str41 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L620768195" + "'", str9, "L620768195");
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L432897125" + "'", str22, "L432897125");
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L432897125" + "'", str27, "L432897125");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "hi!" + "'", obj28, "hi!");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "hi!" + "'", obj29, "hi!");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L620768195" + "'", str41, "L620768195");
    }

    @Test
    public void test02663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02663");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02664");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putUTF8("L1103339481");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1766371298");
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02665");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.Object obj14 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1642262949" + "'", str10, "L1642262949");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1642262949" + "'", str12, "L1642262949");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1642262949" + "'", str13, "L1642262949");
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test02666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02666");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector32 = byteVector27.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector27.putUTF8("L1827334903");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L387360129" + "'", str10, "L387360129");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L387360129" + "'", str19, "L387360129");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L387360129" + "'", str22, "L387360129");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test02667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02667");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        java.lang.Object obj21 = label19.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L90138980");
        label19.info = byteVector30;
        java.lang.Object obj32 = label19.info;
        java.lang.Object obj33 = label19.info;
        java.lang.Object obj34 = null;
        label19.info = obj34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        label19.info = byteVector44;
        org.mockito.asm.ByteVector byteVector47 = byteVector44.putLong(100L);
        label0.info = byteVector47;
        java.lang.String str49 = label0.toString();
        java.lang.String str50 = label0.toString();
        java.lang.String str51 = label0.toString();
        java.lang.Object obj52 = label0.info;
        label0.info = "L1960743888";
        java.lang.Object obj55 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int56 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L260536419" + "'", str10, "L260536419");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1255955748" + "'", str20, "L1255955748");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L260536419" + "'", str49, "L260536419");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L260536419" + "'", str50, "L260536419");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L260536419" + "'", str51, "L260536419");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "L1960743888" + "'", obj55, "L1960743888");
    }

    @Test
    public void test02668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02668");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02669");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt(10);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong(10L);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte(1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector77 = byteVector67.putByteArray(byteArray74, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector80 = byteVector58.putByteArray(byteArray74, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector41.putByteArray(byteArray74, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector86 = byteVector26.putByteArray(byteArray74, (int) (byte) 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putLong((long) (short) 1);
        java.lang.Class<?> wildcardClass89 = byteVector86.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test02670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02670");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) (byte) 1);
        label0.info = byteVector38;
        org.mockito.asm.ByteVector byteVector43 = byteVector38.putShort((int) (short) -1);
        java.lang.Class<?> wildcardClass44 = byteVector38.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L312498052" + "'", str11, "L312498052");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L312498052" + "'", str28, "L312498052");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L312498052" + "'", str29, "L312498052");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test02671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02671");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putUTF8("L1640776053");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L815469913");
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector44 = byteVector34.putByteArray(byteArray41, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector47 = byteVector23.putByteArray(byteArray41, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector50 = byteVector16.putByteArray(byteArray41, (int) (short) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector53 = byteVector12.putByteArray(byteArray41, (int) (byte) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
    }

    @Test
    public void test02672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02672");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt(100);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong((long) '#');
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        java.lang.String str37 = label36.toString();
        java.lang.Object obj38 = label36.info;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L90138980");
        label36.info = byteVector47;
        java.lang.Object obj49 = label36.info;
        java.lang.Object obj50 = label36.info;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte(0);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector61.putByteArray(byteArray79, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector54.putByteArray(byteArray79, (int) (short) 0, 0);
        label36.info = byteArray79;
        org.mockito.asm.ByteVector byteVector92 = byteVector35.putByteArray(byteArray79, (int) (short) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector95 = byteVector15.putByteArray(byteArray79, (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L246562559" + "'", str37, "L246562559");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector92);
    }

    @Test
    public void test02673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02673");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector25.putByteArray(byteArray43, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector52 = byteVector18.putByteArray(byteArray43, (int) (short) 0, 0);
        label0.info = byteArray43;
        java.lang.Object obj54 = null;
        label0.info = obj54;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putInt(0);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector56.putInt(1);
        org.mockito.asm.ByteVector byteVector68 = byteVector56.putUTF8("L672499662");
        org.mockito.asm.ByteVector byteVector70 = byteVector56.putInt((int) (short) 10);
        label0.info = byteVector56;
        java.lang.Object obj72 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int73 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1307304025" + "'", str1, "L1307304025");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test02674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02674");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L100021340");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((-1L));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(0L);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putUTF8("L1126122622");
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putByteArray(byteArray68, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector52.putByteArray(byteArray68, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector39.putByteArray(byteArray68, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector80 = byteVector26.putByteArray(byteArray68, (int) '4', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02675");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector6 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        label5.info = byteVector12;
        java.lang.Object obj14 = label5.info;
        java.lang.String str15 = label5.toString();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(1L);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) (short) 100);
        label5.info = byteVector30;
        org.mockito.asm.ByteVector byteVector33 = byteVector30.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector30.putLong(0L);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) ' ');
        label0.info = byteVector35;
        java.lang.String str39 = label0.toString();
        java.lang.String str40 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int41 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1750716745" + "'", str1, "L1750716745");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1750716745" + "'", str4, "L1750716745");
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L547832995" + "'", str15, "L547832995");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1750716745" + "'", str39, "L1750716745");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1750716745" + "'", str40, "L1750716745");
    }

    @Test
    public void test02676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02676");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(10);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(1);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector42.putByteArray(byteArray54, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector33.putByteArray(byteArray54, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector22.putByteArray(byteArray54, 0, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putShort((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
    }

    @Test
    public void test02677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02677");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putInt((-1));
        java.lang.Class<?> wildcardClass21 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02678");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(100);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02679");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02680");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.String str17 = label0.toString();
        label0.info = "L1440603310";
        java.lang.Object obj20 = label0.info;
        label0.info = "L1741089335";
        // The following exception was thrown during execution in test generation
        try {
            int int23 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1159169757" + "'", str17, "L1159169757");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "L1440603310" + "'", obj20, "L1440603310");
    }

    @Test
    public void test02681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02681");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1764240190");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putUTF8("L1004033127");
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte(100);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt(1);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt(0);
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putByte(100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector58 = byteVector48.putByteArray(byteArray55, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector43.putByteArray(byteArray55, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector64 = byteVector34.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector17.putByteArray(byteArray55, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector70 = byteVector10.putByteArray(byteArray55, (int) (byte) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
    }

    @Test
    public void test02682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02682");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.Object obj7 = label0.info;
        java.lang.String str8 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1476647093" + "'", str1, "L1476647093");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1476647093" + "'", str2, "L1476647093");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1476647093" + "'", str5, "L1476647093");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L1476647093" + "'", str8, "L1476647093");
    }

    @Test
    public void test02683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02683");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        label0.info = "L732392118";
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        label13.info = (short) 0;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label13.info = byteVector23;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putInt((int) (short) 10);
        label13.info = (short) 10;
        java.lang.Object obj39 = label13.info;
        label0.info = label13;
        java.lang.String str41 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L257864499" + "'", str9, "L257864499");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L257864499" + "'", str12, "L257864499");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L70079649" + "'", str14, "L70079649");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L257864499" + "'", str41, "L257864499");
    }

    @Test
    public void test02684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02684");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((int) '4');
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02685");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L2130541591");
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector14.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector33 = byteVector25.putLong(10L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt(100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong(10L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort(1);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt(100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putInt(0);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putByte((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort(1);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putUTF8("L941510936");
        byte[] byteArray83 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector86 = byteVector76.putByteArray(byteArray83, 0, 1);
        org.mockito.asm.ByteVector byteVector89 = byteVector63.putByteArray(byteArray83, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector58.putByteArray(byteArray83, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector95 = byteVector43.putByteArray(byteArray83, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector98 = byteVector14.putByteArray(byteArray83, (int) (short) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector95);
    }

    @Test
    public void test02686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02686");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        label0.info = byteVector20;
        java.lang.Object obj24 = label0.info;
        java.lang.String str25 = label0.toString();
        java.lang.String str26 = label0.toString();
        java.lang.Object obj27 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int28 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1152915687" + "'", str1, "L1152915687");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1152915687" + "'", str25, "L1152915687");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1152915687" + "'", str26, "L1152915687");
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test02687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02687");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt(1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L102640438");
        java.lang.Class<?> wildcardClass37 = byteVector32.getClass();
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putInt(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) (byte) 100);
        label0.info = (byte) 100;
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putShort(0);
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putUTF8("L911011818");
        org.mockito.asm.ByteVector byteVector69 = byteVector63.putShort((int) (byte) 1);
        label0.info = (byte) 1;
        // The following exception was thrown during execution in test generation
        try {
            int int71 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1804376783" + "'", str1, "L1804376783");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test02688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02688");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt(1);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) (short) -1);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putLong(1L);
        java.lang.Class<?> wildcardClass21 = byteVector15.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L918673565" + "'", str1, "L918673565");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02689");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putUTF8("L793132331");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02690");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.String str19 = label0.toString();
        label0.info = "L422954361";
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort(1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(10L);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt(0);
        label0.info = 0;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putShort(10);
        org.mockito.asm.ByteVector byteVector66 = byteVector56.putUTF8("L632514058");
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putByte(0);
        label0.info = byteVector68;
        // The following exception was thrown during execution in test generation
        try {
            int int72 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L314822084" + "'", str10, "L314822084");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L314822084" + "'", str19, "L314822084");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
    }

    @Test
    public void test02691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02691");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.Label label3 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label3.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        label3.info = byteVector18;
        org.mockito.asm.ByteVector byteVector23 = byteVector18.putShort(1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        java.lang.Object obj27 = label0.info;
        java.lang.String str28 = label0.toString();
        java.lang.Class<?> wildcardClass29 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100 + "'", obj27, 100);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L2062762447" + "'", str28, "L2062762447");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02692");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort(10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1904103662" + "'", str20, "L1904103662");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test02693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02693");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        label23.info = byteVector30;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) 100);
        label23.info = byteVector38;
        java.lang.Object obj42 = label23.info;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putLong((long) (-1));
        label23.info = (-1);
        label0.info = label23;
        java.lang.Object obj54 = label0.info;
        java.lang.Object obj55 = label0.info;
        java.lang.String str56 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1513851516" + "'", str22, "L1513851516");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals(obj54.toString(), "L1553109181");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "L1553109181");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "L1553109181");
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "L1553109181");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "L1553109181");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "L1553109181");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1513851516" + "'", str56, "L1513851516");
    }

    @Test
    public void test02694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02694");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte(100);
        label0.info = byteVector27;
        java.lang.Object obj31 = label0.info;
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.String str33 = label32.toString();
        java.lang.String str34 = label32.toString();
        java.lang.Object obj35 = label32.info;
        java.lang.Object obj36 = label32.info;
        java.lang.String str37 = label32.toString();
        java.lang.Object obj38 = label32.info;
        java.lang.Object obj39 = label32.info;
        label0.info = label32;
        java.lang.String str41 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L301791516" + "'", str20, "L301791516");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1318324233" + "'", str33, "L1318324233");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1318324233" + "'", str34, "L1318324233");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1318324233" + "'", str37, "L1318324233");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L301791516" + "'", str41, "L301791516");
    }

    @Test
    public void test02695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02695");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong(0L);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putByte(0);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putByte(100);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt(1);
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putInt(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putByte(100);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector73 = byteVector63.putByteArray(byteArray70, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector76 = byteVector58.putByteArray(byteArray70, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector79 = byteVector49.putByteArray(byteArray70, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector32.putByteArray(byteArray70, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector85 = byteVector27.putByteArray(byteArray70, (int) (byte) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector14.putByteArray(byteArray70, 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test02696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02696");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector2.putLong((long) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02697");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.Object obj28 = label0.info;
        java.lang.Class<?> wildcardClass29 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1475665485" + "'", str1, "L1475665485");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1475665485" + "'", str15, "L1475665485");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1475665485" + "'", str16, "L1475665485");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1955834693" + "'", str26, "L1955834693");
// flaky:         org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "L1955834693" + "'", obj28, "L1955834693");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02698");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L713879861");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort(100);
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02699");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong(10L);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putShort((-1));
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02700");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(1L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) 1);
        label0.info = byteVector23;
        org.mockito.asm.ByteVector byteVector32 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector23.putShort(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 1);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1666796594" + "'", str1, "L1666796594");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test02701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02701");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort(0);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort(0);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte(0);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((-1));
        label0.info = byteVector50;
        java.lang.Class<?> wildcardClass52 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1002981598" + "'", str11, "L1002981598");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1002981598" + "'", str28, "L1002981598");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1002981598" + "'", str29, "L1002981598");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test02702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02702");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (short) 1);
        label0.info = (short) 1;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((int) (short) -1);
        label0.info = byteVector66;
        java.lang.Object obj72 = null;
        label0.info = obj72;
        // The following exception was thrown during execution in test generation
        try {
            int int74 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1717227255" + "'", str10, "L1717227255");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1717227255" + "'", str33, "L1717227255");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1717227255" + "'", str34, "L1717227255");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
    }

    @Test
    public void test02703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02703");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putShort(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte(100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) 'a');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2079717270" + "'", str10, "L2079717270");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
    }

    @Test
    public void test02704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02704");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.Object obj7 = label0.info;
        java.lang.String str8 = label0.toString();
        java.lang.String str9 = label0.toString();
        java.lang.String str10 = label0.toString();
        java.lang.Class<?> wildcardClass11 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1110030912" + "'", str1, "L1110030912");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1110030912" + "'", str2, "L1110030912");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1110030912" + "'", str5, "L1110030912");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L1110030912" + "'", str8, "L1110030912");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1110030912" + "'", str9, "L1110030912");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1110030912" + "'", str10, "L1110030912");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02705");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02706");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 10);
        label0.info = byteVector12;
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        label18.info = byteVector25;
        java.lang.Object obj27 = label18.info;
        java.lang.Object obj28 = label18.info;
        java.lang.Object obj29 = label18.info;
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong((long) 100);
        label18.info = byteVector40;
        label0.info = label18;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putLong((long) 100);
        label18.info = 100;
        java.lang.Object obj59 = label18.info;
        java.lang.Object obj60 = label18.info;
        java.lang.Object obj61 = label18.info;
        java.lang.String str62 = label18.toString();
        java.lang.Class<?> wildcardClass63 = label18.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L545103567" + "'", str1, "L545103567");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100 + "'", obj59, 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100 + "'", obj60, 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100 + "'", obj61, 100);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1357564405" + "'", str62, "L1357564405");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test02707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02707");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        java.lang.Object obj25 = label0.info;
        java.lang.Class<?> wildcardClass26 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L270316618" + "'", str20, "L270316618");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L270316618" + "'", str24, "L270316618");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test02708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02708");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.Object obj30 = label0.info;
        java.lang.Object obj31 = label0.info;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putByte((int) (byte) 0);
        label0.info = (byte) 0;
        java.lang.String str46 = label0.toString();
        label0.info = "L309841305";
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1 + "'", obj30, 1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1 + "'", obj31, 1);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L977935719" + "'", str46, "L977935719");
    }

    @Test
    public void test02709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02709");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.Object obj34 = label0.info;
        java.lang.Object obj35 = label0.info;
        label0.info = "L377023461";
        java.lang.Object obj38 = null;
        label0.info = obj38;
        // The following exception was thrown during execution in test generation
        try {
            int int40 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L939706392" + "'", str10, "L939706392");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L939706392" + "'", str33, "L939706392");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test02710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02710");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L941510936");
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putByteArray(byteArray17, 0, 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1309162730");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1109121868");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putLong((long) (byte) 10);
        byte[] byteArray33 = null;
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putByteArray(byteArray33, (int) (short) -1, (int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test02711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02711");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong(100L);
        label0.info = byteVector42;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putByte((int) (byte) 100);
        java.lang.Class<?> wildcardClass59 = byteVector52.getClass();
        label0.info = byteVector52;
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putUTF8("");
        org.mockito.asm.ByteVector byteVector69 = byteVector61.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putInt((int) (byte) 0);
        label0.info = (byte) 0;
        java.lang.Object obj73 = label0.info;
        java.lang.Object obj74 = label0.info;
        java.lang.Object obj75 = label0.info;
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1232314014" + "'", str10, "L1232314014");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1232314014" + "'", str21, "L1232314014");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (byte) 0 + "'", obj74, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 0 + "'", obj75, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test02712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02712");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02713");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
    }

    @Test
    public void test02714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02714");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        java.lang.Object obj12 = label0.info;
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(0L);
        label0.info = byteVector27;
        java.lang.Object obj29 = null;
        label0.info = obj29;
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        java.lang.String str32 = label31.toString();
        java.lang.Object obj33 = label31.info;
        java.lang.Object obj34 = label31.info;
        java.lang.Object obj35 = label31.info;
        label0.info = label31;
        // The following exception was thrown during execution in test generation
        try {
            int int37 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L336015625" + "'", str1, "L336015625");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L506834125" + "'", str32, "L506834125");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test02715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02715");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putByte(100);
        label0.info = byteVector21;
        java.lang.String str27 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int28 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1374486878" + "'", str1, "L1374486878");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1374486878" + "'", str4, "L1374486878");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1374486878" + "'", str5, "L1374486878");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1374486878" + "'", str27, "L1374486878");
    }

    @Test
    public void test02716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02716");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        org.mockito.asm.ByteVector byteVector32 = byteVector27.putShort(1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(100L);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putUTF8("L1310345801");
        org.mockito.asm.ByteVector byteVector40 = byteVector32.putShort((int) (short) 1);
        label0.info = byteVector32;
        java.lang.Object obj42 = label0.info;
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        label43.info = byteVector50;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) 100);
        label43.info = byteVector58;
        java.lang.Object obj62 = label43.info;
        java.lang.Object obj63 = label43.info;
        java.lang.Object obj64 = label43.info;
        java.lang.String str65 = label43.toString();
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        label66.info = byteVector73;
        org.mockito.asm.ByteVector byteVector75 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putShort((-1));
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putLong((long) 100);
        label66.info = byteVector81;
        java.lang.Object obj85 = label66.info;
        org.mockito.asm.ByteVector byteVector86 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector90 = byteVector86.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector92 = byteVector90.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector94 = byteVector90.putLong((long) (-1));
        label66.info = (-1);
        label43.info = label66;
        java.lang.Object obj97 = label43.info;
        java.lang.String str98 = label43.toString();
        label0.info = label43;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1883053711" + "'", str10, "L1883053711");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L1757333836" + "'", str65, "L1757333836");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector94);
        org.junit.Assert.assertNotNull(obj97);
// flaky:         org.junit.Assert.assertEquals(obj97.toString(), "L1429062339");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "L1429062339");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "L1429062339");
// flaky:         org.junit.Assert.assertEquals("'" + str98 + "' != '" + "L1757333836" + "'", str98, "L1757333836");
    }

    @Test
    public void test02717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02717");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L989730149");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putUTF8("L129314881");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02718");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(10);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L1553114348");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((int) '4');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1768078952" + "'", str20, "L1768078952");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
    }

    @Test
    public void test02719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02719");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector12.putShort(1);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 0);
        java.lang.Class<?> wildcardClass25 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02720");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        org.mockito.asm.ByteVector byteVector32 = byteVector27.putShort(1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(100L);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putUTF8("L1310345801");
        org.mockito.asm.ByteVector byteVector40 = byteVector32.putShort((int) (short) 1);
        label0.info = byteVector32;
        java.lang.Object obj42 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int43 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1769076890" + "'", str10, "L1769076890");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test02721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02721");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        java.lang.Object obj7 = label5.info;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L90138980");
        label5.info = byteVector16;
        java.lang.Object obj18 = label5.info;
        java.lang.Object obj19 = label5.info;
        java.lang.String str20 = label5.toString();
        java.lang.String str21 = label5.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        label22.info = byteVector29;
        java.lang.String str31 = label22.toString();
        label5.info = str31;
        label0.info = label5;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector55 = byteVector45.putByteArray(byteArray52, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector40.putByteArray(byteArray52, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort((int) (byte) 100);
        label5.info = byteVector60;
        java.lang.String str64 = label5.toString();
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putInt(10);
        label5.info = byteVector69;
        org.mockito.asm.ByteVector byteVector74 = byteVector69.putInt((int) (byte) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L154042857" + "'", str1, "L154042857");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L154042857" + "'", str2, "L154042857");
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L154042857" + "'", str4, "L154042857");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1878526584" + "'", str6, "L1878526584");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1878526584" + "'", str20, "L1878526584");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1878526584" + "'", str21, "L1878526584");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1181570243" + "'", str31, "L1181570243");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L1878526584" + "'", str64, "L1878526584");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
    }

    @Test
    public void test02722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02722");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.String str3 = label0.toString();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        java.lang.String str26 = label4.toString();
        java.lang.Object obj27 = label4.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putByte((-1));
        label4.info = byteVector38;
        label0.info = byteVector38;
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        label45.info = byteVector52;
        java.lang.Object obj54 = label45.info;
        java.lang.String str55 = label45.toString();
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) (byte) 10);
        label45.info = byteVector62;
        java.lang.Object obj64 = label45.info;
        java.lang.Object obj65 = label45.info;
        java.lang.String str66 = label45.toString();
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong((long) ' ');
        label45.info = byteVector75;
        org.mockito.asm.ByteVector byteVector79 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector83 = byteVector79.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putShort((int) (byte) 100);
        label45.info = byteVector85;
        label0.info = label45;
        java.lang.Object obj90 = label0.info;
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1566855793" + "'", str3, "L1566855793");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1725445711" + "'", str14, "L1725445711");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1725445711" + "'", str23, "L1725445711");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1725445711" + "'", str26, "L1725445711");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L66737708" + "'", str55, "L66737708");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L66737708" + "'", str66, "L66737708");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(obj90);
// flaky:         org.junit.Assert.assertEquals(obj90.toString(), "L66737708");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "L66737708");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "L66737708");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test02723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02723");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((-1));
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        label19.info = ' ';
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putInt(0);
        label19.info = byteVector26;
        org.mockito.asm.ByteVector byteVector29 = byteVector26.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte(0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector54 = byteVector48.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector69 = byteVector59.putByteArray(byteArray66, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector48.putByteArray(byteArray66, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector75 = byteVector41.putByteArray(byteArray66, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector78 = byteVector37.putByteArray(byteArray66, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector81 = byteVector16.putByteArray(byteArray66, 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test02724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02724");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        label22.info = byteVector29;
        java.lang.Object obj31 = label22.info;
        java.lang.Object obj32 = label22.info;
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        java.lang.String str34 = label33.toString();
        java.lang.Object obj35 = label33.info;
        java.lang.Class<?> wildcardClass36 = label33.getClass();
        label22.info = wildcardClass36;
        java.lang.String str38 = label22.toString();
        java.lang.Class<?> wildcardClass39 = label22.getClass();
        label0.info = label22;
        java.lang.Object obj41 = label0.info;
        java.lang.Object obj42 = label0.info;
        java.lang.String str43 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int44 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1551829606" + "'", str10, "L1551829606");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1551829606" + "'", str19, "L1551829606");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L75473053" + "'", str34, "L75473053");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L553100878" + "'", str38, "L553100878");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj41);
// flaky:         org.junit.Assert.assertEquals(obj41.toString(), "L553100878");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "L553100878");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "L553100878");
        org.junit.Assert.assertNotNull(obj42);
// flaky:         org.junit.Assert.assertEquals(obj42.toString(), "L553100878");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "L553100878");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "L553100878");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1551829606" + "'", str43, "L1551829606");
    }

    @Test
    public void test02725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02725");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        byte[] byteArray13 = null;
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByteArray(byteArray13, 100, (int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        java.lang.Class<?> wildcardClass19 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02726");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1032285984");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02727");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) '4');
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02728");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort(100);
        java.lang.Class<?> wildcardClass21 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02729");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((int) ' ');
        java.lang.Class<?> wildcardClass33 = byteVector32.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02730");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt(10);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt(1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putInt(0);
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putByte(100);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector68 = byteVector58.putByteArray(byteArray65, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector71 = byteVector53.putByteArray(byteArray65, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector46.putByteArray(byteArray65, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector27.putByteArray(byteArray65, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector80 = byteVector10.putByteArray(byteArray65, (-1), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02731");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        byte[] byteArray3 = null;
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByteArray(byteArray3, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
    }

    @Test
    public void test02732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02732");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) -1);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByteArray(byteArray11, (int) (short) -1, (int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong((-1L));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1623475694");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02733");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((-1));
        java.lang.Class<?> wildcardClass15 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02734");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort(100);
        label0.info = byteVector33;
        org.mockito.asm.ByteVector byteVector36 = byteVector33.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putUTF8("L104118961");
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1352832850" + "'", str1, "L1352832850");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1352832850" + "'", str16, "L1352832850");
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
    }

    @Test
    public void test02735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02735");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        java.lang.String str39 = label0.toString();
        java.lang.Object obj40 = label0.info;
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        java.lang.Class<?> wildcardClass44 = byteVector43.getClass();
        label0.info = wildcardClass44;
        java.lang.String str46 = label0.toString();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        label47.info = ' ';
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt(0);
        label47.info = byteVector54;
        org.mockito.asm.ByteVector byteVector57 = byteVector54.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putLong((-1L));
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort(0);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putByte(100);
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        byte[] byteArray82 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector85 = byteVector75.putByteArray(byteArray82, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector88 = byteVector68.putByteArray(byteArray82, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector63.putByteArray(byteArray82, 0, 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector91.putByte((int) (byte) 100);
        label0.info = byteVector91;
        label0.info = "L1138347009";
        // The following exception was thrown during execution in test generation
        try {
            int int97 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L587889651" + "'", str20, "L587889651");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L587889651" + "'", str39, "L587889651");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 100 + "'", obj40, (short) 100);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(wildcardClass44);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L587889651" + "'", str46, "L587889651");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test02736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02736");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L230217808");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L2039482370");
        java.lang.Class<?> wildcardClass13 = byteVector8.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02737");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02738");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 10);
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 10, (byte) 0, (byte) -1, (byte) 1 };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector17 = byteVector8.putByteArray(byteArray14, (int) (short) 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, 0, -1, 1]");
    }

    @Test
    public void test02739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02739");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong(0L);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putUTF8("L1311753909");
        label0.info = "L1311753909";
        // The following exception was thrown during execution in test generation
        try {
            int int25 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1628483066" + "'", str1, "L1628483066");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1628483066" + "'", str4, "L1628483066");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
    }

    @Test
    public void test02740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02740");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt(10);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt(1);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putLong((long) (short) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
    }

    @Test
    public void test02741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02741");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1183543594");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02742");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        label0.info = "L240721646";
        java.lang.Object obj29 = label0.info;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1244807528" + "'", str1, "L1244807528");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "L240721646" + "'", obj29, "L240721646");
    }

    @Test
    public void test02743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02743");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 10);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, (int) (byte) 1, 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1900013115");
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort(1);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putUTF8("L941510936");
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector23.putByteArray(byteArray43, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector52 = byteVector14.putByteArray(byteArray43, (int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
    }

    @Test
    public void test02744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02744");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) 'a');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putUTF8("L1108926269");
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putShort((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
    }

    @Test
    public void test02745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02745");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L374832530");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02746");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putByte((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) (short) 10);
        label0.info = byteVector32;
        java.lang.String str34 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1004261706" + "'", str10, "L1004261706");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1004261706" + "'", str19, "L1004261706");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1004261706" + "'", str20, "L1004261706");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1004261706" + "'", str21, "L1004261706");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1004261706" + "'", str34, "L1004261706");
    }

    @Test
    public void test02747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02747");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L466234737");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L417082801");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putLong((long) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02748");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 10);
        java.lang.Class<?> wildcardClass9 = byteVector6.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test02749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02749");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (byte) 100);
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02750");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(1L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) 1);
        label0.info = byteVector23;
        label0.info = "L587887750";
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1492463302" + "'", str1, "L1492463302");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
    }

    @Test
    public void test02751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02751");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L672499662");
        java.lang.Class<?> wildcardClass17 = byteVector8.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02752");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        label38.info = ' ';
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putInt(0);
        label38.info = byteVector45;
        org.mockito.asm.ByteVector byteVector48 = byteVector45.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort(1);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putInt((int) (short) 1);
        label0.info = byteVector52;
        java.lang.String str58 = label0.toString();
        java.lang.String str59 = label0.toString();
        java.lang.Object obj60 = label0.info;
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putInt(1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putUTF8("L1318068522");
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putInt(10);
        org.mockito.asm.ByteVector byteVector83 = byteVector79.putShort(10);
        label0.info = byteVector79;
        org.mockito.asm.ByteVector byteVector86 = byteVector79.putUTF8("L379019564");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L390169578" + "'", str22, "L390169578");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L390169578" + "'", str36, "L390169578");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L390169578" + "'", str58, "L390169578");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L390169578" + "'", str59, "L390169578");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
    }

    @Test
    public void test02753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02753");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) ' ');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02754");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putInt((int) (short) 0);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        label9.info = ' ';
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt(0);
        label9.info = byteVector16;
        org.mockito.asm.ByteVector byteVector19 = byteVector16.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putByte(100);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector53 = byteVector43.putByteArray(byteArray50, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector38.putByteArray(byteArray50, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector31.putByteArray(byteArray50, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector62 = byteVector8.putByteArray(byteArray50, (int) (short) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test02755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02755");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putByte(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) '#');
        label0.info = '#';
        java.lang.Object obj42 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int43 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L599269316" + "'", str10, "L599269316");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + '#' + "'", obj42, '#');
    }

    @Test
    public void test02756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02756");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector(100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("L671629699");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putInt((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = byteVector1.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test02757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02757");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        java.lang.Object obj4 = label0.info;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putByte((-1));
        label0.info = byteVector13;
        org.mockito.asm.ByteVector byteVector16 = byteVector13.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector13.putUTF8("L1588493438");
        java.lang.Class<?> wildcardClass19 = byteVector18.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L299597165" + "'", str1, "L299597165");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L299597165" + "'", str2, "L299597165");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02758");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02759");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector4.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L788907338");
        java.lang.Class<?> wildcardClass21 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02760");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (short) 0);
        java.lang.Class<?> wildcardClass7 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test02761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02761");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("L1783016536");
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("L1312452148");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
    }

    @Test
    public void test02762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02762");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        label15.info = byteVector22;
        java.lang.Object obj24 = label15.info;
        java.lang.String str25 = label15.toString();
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(1L);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) (short) 100);
        label15.info = byteVector40;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) '4');
        label15.info = byteVector46;
        java.lang.String str48 = label15.toString();
        java.lang.Object obj49 = label15.info;
        label0.info = obj49;
        java.lang.String str51 = label0.toString();
        java.lang.String str52 = label0.toString();
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putShort((-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        label53.info = byteVector60;
        java.lang.Object obj62 = label53.info;
        java.lang.String str63 = label53.toString();
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector64.putShort((int) (byte) 10);
        label53.info = byteVector70;
        label53.info = "L1673143499";
        java.lang.String str74 = label53.toString();
        java.lang.Object obj75 = label53.info;
        java.lang.Object obj76 = label53.info;
        label0.info = label53;
        java.lang.String str78 = label53.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int79 = label53.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L542525831" + "'", str10, "L542525831");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L542525831" + "'", str12, "L542525831");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L542525831" + "'", str13, "L542525831");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L542525831" + "'", str14, "L542525831");
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1267702642" + "'", str25, "L1267702642");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L1267702642" + "'", str48, "L1267702642");
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L542525831" + "'", str51, "L542525831");
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L542525831" + "'", str52, "L542525831");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L697549072" + "'", str63, "L697549072");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L697549072" + "'", str74, "L697549072");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "L1673143499" + "'", obj75, "L1673143499");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "L1673143499" + "'", obj76, "L1673143499");
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L697549072" + "'", str78, "L697549072");
    }

    @Test
    public void test02763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02763");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label12.info = byteVector27;
        java.lang.Object obj31 = label12.info;
        java.lang.String str32 = label12.toString();
        label12.info = 100L;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putUTF8("hi!");
        label12.info = byteVector43;
        label0.info = label12;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("L1551169447");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt(0);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) 1);
        label12.info = byteVector53;
        java.lang.String str57 = label12.toString();
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("L993883100");
        label12.info = byteVector74;
        org.mockito.asm.ByteVector byteVector77 = byteVector74.putUTF8("L878185612");
        org.mockito.asm.ByteVector byteVector79 = byteVector74.putLong(10L);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L59104209" + "'", str1, "L59104209");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1707278265" + "'", str32, "L1707278265");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L1707278265" + "'", str57, "L1707278265");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test02764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02764");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = label0.info;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector67 = byteVector57.putByteArray(byteArray64, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector69 = byteVector57.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector57.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("L788907338");
        label20.info = "L788907338";
        label0.info = label20;
        // The following exception was thrown during execution in test generation
        try {
            int int76 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L340989599" + "'", str30, "L340989599");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02765");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putShort(10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt((int) (byte) 100);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector41 = byteVector27.putByteArray(byteArray38, (int) (byte) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector44 = byteVector12.putByteArray(byteArray38, (int) '#', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test02766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02766");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        label0.info = "L1779206475";
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L222065605" + "'", str10, "L222065605");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L222065605" + "'", str12, "L222065605");
    }

    @Test
    public void test02767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02767");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L230057508");
        byte[] byteArray36 = new byte[] { (byte) 0, (byte) 100 };
        org.mockito.asm.ByteVector byteVector39 = byteVector31.putByteArray(byteArray36, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector42 = byteVector15.putByteArray(byteArray36, (int) ' ', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(byteVector39);
    }

    @Test
    public void test02768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02768");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02769");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.String str15 = label0.toString();
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label17.info = ' ';
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putInt(0);
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        java.lang.Object obj27 = label17.info;
        label0.info = label17;
        java.lang.String str29 = label0.toString();
        java.lang.Object obj30 = label0.info;
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L164020399" + "'", str10, "L164020399");
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L164020399" + "'", str15, "L164020399");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1773383662" + "'", str26, "L1773383662");
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L164020399" + "'", str29, "L164020399");
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "L1773383662");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "L1773383662");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "L1773383662");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test02770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02770");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L40895705");
        label0.info = "L40895705";
        java.lang.String str37 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1528595278" + "'", str22, "L1528595278");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1528595278" + "'", str37, "L1528595278");
    }

    @Test
    public void test02771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02771");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1109121868");
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector48 = byteVector38.putByteArray(byteArray45, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector51 = byteVector27.putByteArray(byteArray45, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector54 = byteVector22.putByteArray(byteArray45, 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
    }

    @Test
    public void test02772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02772");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L80158192");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putUTF8("L1671587009");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02773");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        label0.info = (-1);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1466554318" + "'", str19, "L1466554318");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1466554318" + "'", str20, "L1466554318");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
    }

    @Test
    public void test02774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02774");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L439331775");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) 0);
        java.lang.Class<?> wildcardClass21 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02775");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        label16.info = byteVector23;
        java.lang.Object obj25 = label16.info;
        java.lang.String str26 = label16.toString();
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong(1L);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (short) 100);
        label16.info = byteVector41;
        org.mockito.asm.ByteVector byteVector44 = byteVector41.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector41.putLong(0L);
        org.mockito.asm.ByteVector byteVector48 = byteVector41.putUTF8("");
        org.mockito.asm.ByteVector byteVector50 = byteVector41.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector52 = byteVector41.putUTF8("L1336941656");
        org.mockito.asm.ByteVector byteVector54 = byteVector41.putUTF8("L836414179");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putShort(0);
        label0.info = byteVector56;
        org.mockito.asm.ByteVector byteVector61 = byteVector56.putInt((int) ' ');
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L153175139" + "'", str1, "L153175139");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1119153491" + "'", str26, "L1119153491");
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test02776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02776");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt(0);
        label7.info = byteVector14;
        org.mockito.asm.ByteVector byteVector17 = byteVector14.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        label0.info = byteVector19;
        java.lang.String str23 = label0.toString();
        java.lang.String str24 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1661754325" + "'", str1, "L1661754325");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1661754325" + "'", str4, "L1661754325");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1661754325" + "'", str5, "L1661754325");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1661754325" + "'", str23, "L1661754325");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1661754325" + "'", str24, "L1661754325");
    }

    @Test
    public void test02777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02777");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong(100L);
        label0.info = byteVector42;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putByte((int) (byte) 100);
        java.lang.Class<?> wildcardClass59 = byteVector52.getClass();
        label0.info = byteVector52;
        java.lang.String str61 = label0.toString();
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort((int) (short) -1);
        label0.info = byteVector78;
        org.mockito.asm.ByteVector byteVector81 = byteVector78.putShort(100);
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putByte((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1611709173" + "'", str10, "L1611709173");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1611709173" + "'", str21, "L1611709173");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(wildcardClass59);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1611709173" + "'", str61, "L1611709173");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
    }

    @Test
    public void test02778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02778");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(10);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) '4');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L390840986" + "'", str20, "L390840986");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
    }

    @Test
    public void test02779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02779");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label7.info = ' ';
        java.lang.Object obj10 = label7.info;
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putLong((long) 'a');
        label7.info = byteVector15;
        java.lang.String str23 = label7.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        label24.info = ' ';
        java.lang.String str27 = label24.toString();
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        label28.info = byteVector35;
        java.lang.Object obj37 = label28.info;
        java.lang.String str38 = label28.toString();
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) (byte) 10);
        label28.info = byteVector45;
        java.lang.String str47 = label28.toString();
        label28.info = '4';
        java.lang.String str50 = label28.toString();
        java.lang.Object obj51 = label28.info;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("L499234616");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putByte((-1));
        label28.info = byteVector62;
        label24.info = byteVector62;
        java.lang.Object obj69 = label24.info;
        label7.info = label24;
        java.lang.Object obj71 = label24.info;
        label0.info = label24;
        // The following exception was thrown during execution in test generation
        try {
            int int73 = label24.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1280183348" + "'", str1, "L1280183348");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1280183348" + "'", str5, "L1280183348");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1280183348" + "'", str6, "L1280183348");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + ' ' + "'", obj10, ' ');
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L532629174" + "'", str23, "L532629174");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1699709728" + "'", str27, "L1699709728");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(obj37);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L864066628" + "'", str38, "L864066628");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L864066628" + "'", str47, "L864066628");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L864066628" + "'", str50, "L864066628");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + '4' + "'", obj51, '4');
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test02780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02780");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) '#');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector1.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort(10);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByte((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putUTF8("L493815740");
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt(10);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt(1);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putInt(0);
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putByte(100);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        byte[] byteArray75 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector78 = byteVector68.putByteArray(byteArray75, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector63.putByteArray(byteArray75, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector56.putByteArray(byteArray75, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector37.putByteArray(byteArray75, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector26.putByteArray(byteArray75, (int) (byte) 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector93 = byteVector7.putByteArray(byteArray75, (-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
    }

    @Test
    public void test02781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02781");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(0L);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte(10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02782");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong(100L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte(0);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector60 = byteVector50.putByteArray(byteArray57, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector63 = byteVector41.putByteArray(byteArray57, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector66 = byteVector28.putByteArray(byteArray57, (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test02783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02783");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (short) 1);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02784");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L365983649");
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putLong(10L);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte(1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector77 = byteVector67.putByteArray(byteArray74, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector80 = byteVector58.putByteArray(byteArray74, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector41.putByteArray(byteArray74, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector86 = byteVector26.putByteArray(byteArray74, (int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
    }

    @Test
    public void test02785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02785");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (byte) 0);
        label0.info = byteVector27;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt(1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putByte((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = byteVector43.getClass();
        label0.info = byteVector43;
        java.lang.Object obj50 = null;
        label0.info = obj50;
        java.lang.String str52 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int53 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L42774601" + "'", str10, "L42774601");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L42774601" + "'", str19, "L42774601");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L42774601" + "'", str22, "L42774601");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(wildcardClass48);
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L42774601" + "'", str52, "L42774601");
    }

    @Test
    public void test02786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02786");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) '#');
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02787");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putInt(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02788");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong(100L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1118242991");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02789");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02790");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        label0.info = "L499234616";
        java.lang.String str17 = label0.toString();
        java.lang.Object obj18 = label0.info;
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("L159729243");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putByte((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector33.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort(100);
        label0.info = byteVector41;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L386554824");
        byte[] byteArray54 = null;
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putByteArray(byteArray54, (int) (byte) 100, 100);
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector61 = byteVector53.putByte((int) (short) 0);
        label0.info = byteVector61;
        // The following exception was thrown during execution in test generation
        try {
            int int63 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1429537033" + "'", str1, "L1429537033");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1429537033" + "'", str4, "L1429537033");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1429537033" + "'", str17, "L1429537033");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "L499234616" + "'", obj18, "L499234616");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test02791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02791");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(10);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02792");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector50 = byteVector40.putByteArray(byteArray47, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector53 = byteVector29.putByteArray(byteArray47, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector56 = byteVector22.putByteArray(byteArray47, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector59 = byteVector18.putByteArray(byteArray47, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("L1051345782");
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
    }

    @Test
    public void test02793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02793");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 10);
        label0.info = byteVector12;
        org.mockito.asm.ByteVector byteVector19 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector21 = byteVector12.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector22.putLong(10L);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt(100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte(100);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong(10L);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort(1);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt(100);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putInt(0);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putByte((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putShort(1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector77 = byteVector73.putUTF8("L941510936");
        byte[] byteArray80 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector83 = byteVector73.putByteArray(byteArray80, 0, 1);
        org.mockito.asm.ByteVector byteVector86 = byteVector60.putByteArray(byteArray80, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector89 = byteVector55.putByteArray(byteArray80, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector40.putByteArray(byteArray80, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector95 = byteVector21.putByteArray(byteArray80, (int) (byte) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1296829079" + "'", str1, "L1296829079");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
    }

    @Test
    public void test02794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02794");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        java.lang.String str27 = label0.toString();
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong((long) ' ');
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort(100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("L1154477694");
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putUTF8("L1325221534");
        label0.info = byteVector70;
        java.lang.Class<?> wildcardClass72 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L708815558" + "'", str10, "L708815558");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L708815558" + "'", str27, "L708815558");
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test02795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02795");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByte((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((int) ' ');
        java.lang.Class<?> wildcardClass17 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02796");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 10);
        label0.info = byteVector12;
        org.mockito.asm.ByteVector byteVector19 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector21 = byteVector12.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector23 = byteVector12.putLong(10L);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (byte) -1);
        java.lang.Class<?> wildcardClass26 = byteVector23.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1839485449" + "'", str1, "L1839485449");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test02797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02797");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray18, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1032876219");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L2065870186");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByte(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02798");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putInt(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label0.info = byteVector10;
        org.mockito.asm.ByteVector byteVector13 = byteVector10.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("L1167541264");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte((int) (byte) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L116746517" + "'", str1, "L116746517");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
    }

    @Test
    public void test02799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02799");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L101942357");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(1);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte(0);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector73 = byteVector63.putByteArray(byteArray70, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector76 = byteVector52.putByteArray(byteArray70, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector79 = byteVector45.putByteArray(byteArray70, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector41.putByteArray(byteArray70, 1, 0);
        org.mockito.asm.ByteVector byteVector85 = byteVector14.putByteArray(byteArray70, 0, 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector14.putUTF8("L2063984489");
        org.mockito.asm.ByteVector byteVector89 = byteVector87.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
    }

    @Test
    public void test02800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02800");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector17.putLong(10L);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(10L);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1311753909");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte(1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putUTF8("L104118961");
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        byte[] byteArray75 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector78 = byteVector68.putByteArray(byteArray75, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector59.putByteArray(byteArray75, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector84 = byteVector42.putByteArray(byteArray75, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector27.putByteArray(byteArray75, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector90 = byteVector16.putByteArray(byteArray75, (int) (byte) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test02801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02801");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        label0.info = "L637422777";
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        label25.info = byteVector32;
        java.lang.Object obj34 = label25.info;
        java.lang.String str35 = label25.toString();
        label0.info = str35;
        java.lang.Object obj37 = null;
        label0.info = obj37;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L384194178" + "'", str22, "L384194178");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(obj34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L2056775390" + "'", str35, "L2056775390");
    }

    @Test
    public void test02802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02802");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.String str32 = label0.toString();
        java.lang.Object obj33 = label0.info;
        java.lang.Object obj34 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int35 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L901595608" + "'", str10, "L901595608");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L901595608" + "'", str32, "L901595608");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "L1311753909" + "'", obj33, "L1311753909");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "L1311753909" + "'", obj34, "L1311753909");
    }

    @Test
    public void test02803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02803");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("L1325221534");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1440786686");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(0);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt(1);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putByte(100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector54 = byteVector44.putByteArray(byteArray51, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector39.putByteArray(byteArray51, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector30.putByteArray(byteArray51, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector13.putByteArray(byteArray51, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector66 = byteVector10.putByteArray(byteArray51, (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test02804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02804");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        java.lang.String str53 = label0.toString();
        java.lang.String str54 = label0.toString();
        java.lang.Object obj55 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int56 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2025365819" + "'", str1, "L2025365819");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L50539628" + "'", str14, "L50539628");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L50539628" + "'", str23, "L50539628");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L2025365819" + "'", str53, "L2025365819");
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L2025365819" + "'", str54, "L2025365819");
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "L50539628");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "L50539628");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "L50539628");
    }

    @Test
    public void test02805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02805");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector31 = byteVector21.putByteArray(byteArray28, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector34 = byteVector16.putByteArray(byteArray28, (int) 'a', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector31);
    }

    @Test
    public void test02806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02806");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (byte) 1);
        label0.info = (byte) 1;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector9.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putUTF8("L898404690");
        label0.info = "L898404690";
        // The following exception was thrown during execution in test generation
        try {
            int int23 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
    }

    @Test
    public void test02807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02807");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt(1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((-1));
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector65 = byteVector55.putByteArray(byteArray62, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector44.putByteArray(byteArray62, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector37.putByteArray(byteArray62, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector74 = byteVector33.putByteArray(byteArray62, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector77 = byteVector10.putByteArray(byteArray62, (int) '4', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
    }

    @Test
    public void test02808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02808");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        label17.info = (short) 0;
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        label17.info = byteVector27;
        java.lang.String str31 = label17.toString();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("L159729243");
        label17.info = "L159729243";
        label0.info = "L159729243";
        // The following exception was thrown during execution in test generation
        try {
            int int51 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L919728810" + "'", str10, "L919728810");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L919728810" + "'", str12, "L919728810");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L919728810" + "'", str13, "L919728810");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L2044531811" + "'", str18, "L2044531811");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L2044531811" + "'", str31, "L2044531811");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
    }

    @Test
    public void test02809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02809");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector4.putUTF8("L63967468");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02810");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = label0.info;
        java.lang.String str14 = label0.toString();
        java.lang.Object obj15 = label0.info;
        java.lang.String str16 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1814228674" + "'", str10, "L1814228674");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1814228674" + "'", str12, "L1814228674");
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1814228674" + "'", str14, "L1814228674");
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1814228674" + "'", str16, "L1814228674");
    }

    @Test
    public void test02811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02811");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label12.info = byteVector37;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) '4');
        label12.info = byteVector43;
        java.lang.String str45 = label12.toString();
        java.lang.Object obj46 = label12.info;
        java.lang.Object obj47 = label12.info;
        label0.info = label12;
        org.mockito.asm.Label label49 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        label49.info = byteVector56;
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((-1));
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putLong((long) 100);
        label49.info = byteVector64;
        java.lang.Object obj68 = label49.info;
        java.lang.String str69 = label49.toString();
        label49.info = 100L;
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector72.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong(1L);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putByte((int) (short) 100);
        label49.info = (short) 100;
        java.lang.Object obj88 = label49.info;
        java.lang.String str89 = label49.toString();
        label0.info = label49;
        // The following exception was thrown during execution in test generation
        try {
            int int91 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L844898564" + "'", str1, "L844898564");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1764755615" + "'", str22, "L1764755615");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1764755615" + "'", str45, "L1764755615");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L2011087722" + "'", str69, "L2011087722");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (short) 100 + "'", obj88, (short) 100);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L2011087722" + "'", str89, "L2011087722");
    }

    @Test
    public void test02812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02812");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1571373487");
        java.lang.Class<?> wildcardClass11 = byteVector8.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02813");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.Object obj33 = label0.info;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.String str36 = label35.toString();
        label35.info = (short) 0;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass41 = byteVector40.getClass();
        label35.info = wildcardClass41;
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        label43.info = byteVector50;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) 100);
        label43.info = byteVector58;
        java.lang.Object obj62 = label43.info;
        java.lang.Object obj63 = label43.info;
        java.lang.Object obj64 = label43.info;
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("L922707703");
        label43.info = byteVector75;
        java.lang.Class<?> wildcardClass77 = byteVector75.getClass();
        label35.info = byteVector75;
        java.lang.Object obj79 = null;
        label35.info = obj79;
        label0.info = label35;
        java.lang.Object obj82 = label35.info;
        java.lang.Object obj83 = label35.info;
        java.lang.Object obj84 = null;
        label35.info = obj84;
        // The following exception was thrown during execution in test generation
        try {
            int int86 = label35.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1329608748" + "'", str10, "L1329608748");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1329608748" + "'", str34, "L1329608748");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1455764009" + "'", str36, "L1455764009");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test02814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02814");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1646567386");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02815");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        java.lang.String str42 = label0.toString();
        java.lang.Object obj43 = label0.info;
        java.lang.Object obj44 = label0.info;
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        java.lang.String str46 = label45.toString();
        java.lang.Object obj47 = label45.info;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putUTF8("L90138980");
        label45.info = byteVector56;
        java.lang.Object obj58 = label45.info;
        java.lang.Object obj59 = label45.info;
        java.lang.String str60 = label45.toString();
        java.lang.Object obj61 = label45.info;
        java.lang.String str62 = label45.toString();
        java.lang.String str63 = label45.toString();
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector((int) 'a');
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) 'a');
        label45.info = byteVector65;
        org.mockito.asm.ByteVector byteVector69 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putShort((-1));
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putLong(0L);
        org.mockito.asm.ByteVector byteVector85 = byteVector81.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector87 = byteVector81.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector89 = byteVector87.putUTF8("L1466454467");
        label45.info = byteVector89;
        label0.info = byteVector89;
        java.lang.Class<?> wildcardClass92 = byteVector89.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1245241447" + "'", str42, "L1245241447");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1 + "'", obj43, 1);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1 + "'", obj44, 1);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1374589955" + "'", str46, "L1374589955");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L1374589955" + "'", str60, "L1374589955");
        org.junit.Assert.assertNotNull(obj61);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1374589955" + "'", str62, "L1374589955");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1374589955" + "'", str63, "L1374589955");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test02816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02816");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1109121868");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putUTF8("L1022999258");
        java.lang.Class<?> wildcardClass25 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02817");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putByte(100);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte(10);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putLong(100L);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte(0);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        byte[] byteArray75 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector78 = byteVector68.putByteArray(byteArray75, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector57.putByteArray(byteArray75, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector50.putByteArray(byteArray75, (int) (short) 0, 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector46.putByteArray(byteArray75, 1, 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector23.putByteArray(byteArray75, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector93 = byteVector12.putByteArray(byteArray75, (int) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
    }

    @Test
    public void test02818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02818");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.Object obj34 = label0.info;
        java.lang.Object obj35 = label0.info;
        java.lang.Object obj36 = label0.info;
        java.lang.Object obj37 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int38 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L434967206" + "'", str10, "L434967206");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L434967206" + "'", str33, "L434967206");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test02819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02819");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L2017668856");
        java.lang.Class<?> wildcardClass17 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02820");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong(100L);
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putUTF8("L1310345801");
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1673143499");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L826526895");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putShort((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test02821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02821");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putByte(1);
        label0.info = 1;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte((int) (byte) 1);
        label0.info = (byte) 1;
        java.lang.Object obj62 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int63 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 1 + "'", obj62, (byte) 1);
    }

    @Test
    public void test02822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02822");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong((long) 100);
        label0.info = byteVector10;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        label0.info = "L963025893";
        java.lang.String str18 = label0.toString();
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1356382498" + "'", str1, "L1356382498");
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1356382498" + "'", str18, "L1356382498");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "L963025893" + "'", obj19, "L963025893");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1356382498" + "'", str20, "L1356382498");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1356382498" + "'", str21, "L1356382498");
    }

    @Test
    public void test02823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02823");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((-1));
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(0L);
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector39 = byteVector31.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt(0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putUTF8("L672499662");
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putByte(100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector59.putByteArray(byteArray73, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector82 = byteVector50.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector45.putByteArray(byteArray73, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector88 = byteVector16.putByteArray(byteArray73, 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test02824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02824");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 100);
        label0.info = byteVector40;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) 1);
        label0.info = 1;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt(10);
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt((int) (byte) 100);
        label0.info = (byte) 100;
        java.lang.Object obj56 = label0.info;
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        label57.info = ' ';
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putInt(0);
        label57.info = byteVector64;
        org.mockito.asm.ByteVector byteVector67 = byteVector64.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort(1);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putInt((int) (short) 1);
        label0.info = byteVector75;
        java.lang.Object obj77 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int78 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1570962744" + "'", str10, "L1570962744");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1570962744" + "'", str21, "L1570962744");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test02825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02825");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((-1L));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong(1L);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02826");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int7 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1215483017" + "'", str1, "L1215483017");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1215483017" + "'", str4, "L1215483017");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1215483017" + "'", str5, "L1215483017");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
    }

    @Test
    public void test02827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02827");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong(1L);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putInt((int) (byte) 1);
        label0.info = byteVector43;
        java.lang.String str51 = label0.toString();
        java.lang.Object obj52 = label0.info;
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putByte(100);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putInt(1);
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((int) (short) -1);
        label0.info = byteVector63;
        org.mockito.asm.ByteVector byteVector69 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putInt(0);
        org.mockito.asm.ByteVector byteVector75 = byteVector69.putByte(100);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putInt(1);
        org.mockito.asm.ByteVector byteVector83 = byteVector79.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector87 = byteVector83.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1890352863" + "'", str22, "L1890352863");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1890352863" + "'", str36, "L1890352863");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L1890352863" + "'", str51, "L1890352863");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test02828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02828");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.String str23 = label0.toString();
        java.lang.Object obj24 = label0.info;
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putInt(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putByte(100);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector46 = byteVector36.putByteArray(byteArray43, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector31.putByteArray(byteArray43, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector51 = byteVector31.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector31.putLong(0L);
        org.mockito.asm.ByteVector byteVector55 = byteVector31.putShort((int) (short) 100);
        label0.info = byteVector55;
        java.lang.String str57 = label0.toString();
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        label58.info = byteVector65;
        java.lang.Object obj67 = label58.info;
        java.lang.String str68 = label58.toString();
        org.mockito.asm.ByteVector byteVector69 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putShort((-1));
        org.mockito.asm.ByteVector byteVector75 = byteVector69.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putLong(1L);
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putByte((int) (short) 100);
        label58.info = byteVector83;
        java.lang.String str85 = label58.toString();
        label58.info = "L422954361";
        java.lang.Object obj88 = label58.info;
        label0.info = label58;
        // The following exception was thrown during execution in test generation
        try {
            int int90 = label58.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L581682629" + "'", str10, "L581682629");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L581682629" + "'", str22, "L581682629");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L581682629" + "'", str23, "L581682629");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L581682629" + "'", str57, "L581682629");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "L1443910033" + "'", str68, "L1443910033");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L1443910033" + "'", str85, "L1443910033");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "L422954361" + "'", obj88, "L422954361");
    }

    @Test
    public void test02829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02829");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector34 = byteVector24.putByteArray(byteArray31, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector19.putByteArray(byteArray31, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector40 = byteVector10.putByteArray(byteArray31, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector42 = byteVector10.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte(0);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector74 = byteVector64.putByteArray(byteArray71, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector53.putByteArray(byteArray71, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector80 = byteVector46.putByteArray(byteArray71, (int) (short) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector83 = byteVector42.putByteArray(byteArray71, (int) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
    }

    @Test
    public void test02830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02830");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L941510936");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((-1));
        java.lang.Class<?> wildcardClass19 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02831");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        label0.info = "L205480061";
        java.lang.String str55 = label0.toString();
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector64 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) (byte) 1);
        label0.info = byteVector70;
        java.lang.Class<?> wildcardClass72 = byteVector70.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2141565368" + "'", str1, "L2141565368");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L201831098" + "'", str14, "L201831098");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L201831098" + "'", str23, "L201831098");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L2141565368" + "'", str55, "L2141565368");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test02832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02832");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) '4');
        java.lang.Class<?> wildcardClass15 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02833");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L707177743");
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector10.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector52 = byteVector42.putByteArray(byteArray49, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector33.putByteArray(byteArray49, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector58 = byteVector20.putByteArray(byteArray49, (int) (byte) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test02834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02834");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L379798012");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong((long) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02835");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Class<?> wildcardClass21 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1036796547" + "'", str10, "L1036796547");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1036796547" + "'", str20, "L1036796547");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02836");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L781425144");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector52 = byteVector42.putByteArray(byteArray49, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector33.putByteArray(byteArray49, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector58 = byteVector20.putByteArray(byteArray49, (int) '#', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test02837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02837");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("L421413808");
        java.lang.Class<?> wildcardClass7 = byteVector0.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test02838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02838");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort((int) (short) 0);
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02839");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L941510936");
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector20 = byteVector10.putByteArray(byteArray17, 0, 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1309162730");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L910264151");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        java.lang.Class<?> wildcardClass29 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02840");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putLong((long) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02841");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L374832530");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (byte) 100);
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02842");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        java.lang.Object obj21 = label19.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L90138980");
        label19.info = byteVector30;
        java.lang.Object obj32 = label19.info;
        java.lang.Object obj33 = label19.info;
        java.lang.Object obj34 = null;
        label19.info = obj34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        label19.info = byteVector44;
        org.mockito.asm.ByteVector byteVector47 = byteVector44.putLong(100L);
        label0.info = byteVector47;
        java.lang.Object obj49 = label0.info;
        java.lang.String str50 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int51 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L816980500" + "'", str10, "L816980500");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L958693404" + "'", str20, "L958693404");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L816980500" + "'", str50, "L816980500");
    }

    @Test
    public void test02843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02843");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt(0);
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putByte(100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putShort((int) ' ');
        label0.info = byteVector41;
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        label43.info = byteVector50;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) 100);
        label43.info = byteVector58;
        java.lang.Object obj62 = label43.info;
        java.lang.String str63 = label43.toString();
        label43.info = 100L;
        java.lang.Object obj66 = label43.info;
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putLong(1L);
        label43.info = byteVector75;
        org.mockito.asm.ByteVector byteVector80 = byteVector75.putShort((int) (short) 10);
        label0.info = (short) 10;
        // The following exception was thrown during execution in test generation
        try {
            int int82 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L880651876" + "'", str1, "L880651876");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L261283465" + "'", str63, "L261283465");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
    }

    @Test
    public void test02844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02844");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort(10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(1);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putInt(0);
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putByte(100);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector64 = byteVector54.putByteArray(byteArray61, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector67 = byteVector49.putByteArray(byteArray61, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector70 = byteVector40.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector73 = byteVector29.putByteArray(byteArray61, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector76 = byteVector16.putByteArray(byteArray61, 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02845");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L1268883533");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putUTF8("L494941220");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02846");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong(100L);
        label0.info = byteVector42;
        java.lang.String str48 = label0.toString();
        label0.info = "L1387207248";
        // The following exception was thrown during execution in test generation
        try {
            int int51 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L987919510" + "'", str10, "L987919510");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L987919510" + "'", str21, "L987919510");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L987919510" + "'", str48, "L987919510");
    }

    @Test
    public void test02847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02847");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.Object obj28 = label0.info;
        java.lang.Object obj29 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1972401024" + "'", str1, "L1972401024");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1972401024" + "'", str15, "L1972401024");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1972401024" + "'", str16, "L1972401024");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1713169335" + "'", str26, "L1713169335");
// flaky:         org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "L1713169335" + "'", obj28, "L1713169335");
// flaky:         org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "L1713169335" + "'", obj29, "L1713169335");
    }

    @Test
    public void test02848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02848");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) (short) 100);
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02849");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) '4');
        java.lang.Class<?> wildcardClass13 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02850");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        java.lang.Object obj27 = label0.info;
        java.lang.String str28 = label0.toString();
        java.lang.Object obj29 = label0.info;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1551169447");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (byte) 0);
        label0.info = (byte) 0;
        // The following exception was thrown during execution in test generation
        try {
            int int43 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1777827115" + "'", str1, "L1777827115");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100 + "'", obj27, 100);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1777827115" + "'", str28, "L1777827115");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100 + "'", obj29, 100);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
    }

    @Test
    public void test02851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02851");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putByte((int) '4');
        java.lang.Class<?> wildcardClass9 = byteVector2.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test02852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02852");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort(10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02853");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.Object obj30 = label0.info;
        java.lang.Object obj31 = label0.info;
        java.lang.Object obj32 = label0.info;
        java.lang.Class<?> wildcardClass33 = label0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1 + "'", obj30, 1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1 + "'", obj31, 1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1 + "'", obj32, 1);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02854");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L85832577" + "'", str19, "L85832577");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L85832577" + "'", str21, "L85832577");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L85832577" + "'", str22, "L85832577");
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test02855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02855");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt(100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putLong((long) '#');
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        java.lang.String str39 = label38.toString();
        java.lang.Object obj40 = label38.info;
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putUTF8("L90138980");
        label38.info = byteVector49;
        java.lang.Object obj51 = label38.info;
        java.lang.Object obj52 = label38.info;
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector69 = byteVector63.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector63.putByteArray(byteArray81, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector56.putByteArray(byteArray81, (int) (short) 0, 0);
        label38.info = byteArray81;
        org.mockito.asm.ByteVector byteVector94 = byteVector37.putByteArray(byteArray81, (int) (short) 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector97 = byteVector22.putByteArray(byteArray81, (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1602394179" + "'", str39, "L1602394179");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector94);
    }

    @Test
    public void test02856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02856");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putUTF8("L219136701");
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putUTF8("L1126122622");
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putByteArray(byteArray68, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector52.putByteArray(byteArray68, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector39.putByteArray(byteArray68, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector80 = byteVector26.putByteArray(byteArray68, (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02857");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(0L);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte(10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putByte(100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt(1);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte(100);
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector80 = byteVector70.putByteArray(byteArray77, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector63.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector86 = byteVector54.putByteArray(byteArray77, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector89 = byteVector49.putByteArray(byteArray77, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector92 = byteVector30.putByteArray(byteArray77, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
    }

    @Test
    public void test02858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02858");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.String str17 = label0.toString();
        label0.info = "L1440603310";
        java.lang.Object obj20 = label0.info;
        label0.info = "L1741089335";
        java.lang.Object obj23 = label0.info;
        java.lang.Object obj24 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L185354859" + "'", str17, "L185354859");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "L1440603310" + "'", obj20, "L1440603310");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "L1741089335" + "'", obj23, "L1741089335");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "L1741089335" + "'", obj24, "L1741089335");
    }

    @Test
    public void test02859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02859");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02860");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L713879861");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L596369166");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L883330428");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02861");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        java.lang.Class<?> wildcardClass23 = byteVector20.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02862");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        label13.info = byteVector20;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 100);
        label13.info = byteVector28;
        java.lang.Object obj32 = label13.info;
        java.lang.Object obj33 = label13.info;
        java.lang.Object obj34 = label13.info;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L922707703");
        label13.info = byteVector45;
        label0.info = label13;
        java.lang.String str48 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L569838265" + "'", str10, "L569838265");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L569838265" + "'", str12, "L569838265");
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L569838265" + "'", str48, "L569838265");
    }

    @Test
    public void test02863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02863");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector22.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) ' ');
        label0.info = byteVector30;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong(100L);
        label0.info = byteVector42;
        java.lang.String str48 = label0.toString();
        java.lang.String str49 = label0.toString();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong(1L);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt(1);
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putInt(0);
        label0.info = byteVector66;
        org.mockito.asm.ByteVector byteVector73 = byteVector66.putShort((int) ' ');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L744062906" + "'", str10, "L744062906");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L744062906" + "'", str21, "L744062906");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L744062906" + "'", str48, "L744062906");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L744062906" + "'", str49, "L744062906");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02864");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong(1L);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) 1);
        label0.info = byteVector23;
        org.mockito.asm.ByteVector byteVector32 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector23.putShort(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector23.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort(1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L941510936");
        byte[] byteArray54 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector57 = byteVector47.putByteArray(byteArray54, 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector60 = byteVector36.putByteArray(byteArray54, (int) (short) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1976242977" + "'", str1, "L1976242977");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test02865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02865");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        label0.info = "L732392118";
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        label12.info = byteVector19;
        java.lang.Object obj21 = label12.info;
        java.lang.String str22 = label12.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        label12.info = "hi!";
        java.lang.String str27 = label12.toString();
        java.lang.Object obj28 = label12.info;
        java.lang.Object obj29 = label12.info;
        label0.info = label12;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort(10);
        label0.info = byteVector37;
        org.mockito.asm.ByteVector byteVector42 = byteVector37.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt(100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putInt(0);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putByte((-1));
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort(1);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putUTF8("L941510936");
        byte[] byteArray82 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector85 = byteVector75.putByteArray(byteArray82, 0, 1);
        org.mockito.asm.ByteVector byteVector88 = byteVector62.putByteArray(byteArray82, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector57.putByteArray(byteArray82, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector94 = byteVector37.putByteArray(byteArray82, (int) (short) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1663465903" + "'", str9, "L1663465903");
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1449191673" + "'", str22, "L1449191673");
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1449191673" + "'", str27, "L1449191673");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "hi!" + "'", obj28, "hi!");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "hi!" + "'", obj29, "hi!");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test02866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02866");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.String str11 = label0.toString();
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector16.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L596369166");
        label0.info = byteVector24;
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort(0);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort(0);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte(0);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putShort((-1));
        label0.info = byteVector50;
        java.lang.Object obj52 = label0.info;
        java.lang.Object obj53 = label0.info;
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L922330659" + "'", str11, "L922330659");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L922330659" + "'", str28, "L922330659");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L922330659" + "'", str29, "L922330659");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test02867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02867");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        byte[] byteArray9 = null;
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putByteArray(byteArray9, (int) (byte) 100, 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort(0);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort(10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt(1);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putInt(0);
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putByte(100);
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector77 = byteVector67.putByteArray(byteArray74, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector80 = byteVector62.putByteArray(byteArray74, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector83 = byteVector53.putByteArray(byteArray74, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector86 = byteVector42.putByteArray(byteArray74, 0, 0);
        org.mockito.asm.ByteVector byteVector89 = byteVector29.putByteArray(byteArray74, (int) (byte) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector92 = byteVector8.putByteArray(byteArray74, (int) (short) 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
    }

    @Test
    public void test02868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02868");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L56937410");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L257860697");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort(0);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort(10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putInt(1);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putInt(0);
        org.mockito.asm.ByteVector byteVector68 = byteVector62.putByte(100);
        org.mockito.asm.ByteVector byteVector69 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putShort((-1));
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("hi!");
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector83 = byteVector73.putByteArray(byteArray80, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector86 = byteVector68.putByteArray(byteArray80, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector89 = byteVector59.putByteArray(byteArray80, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector48.putByteArray(byteArray80, 0, 0);
        org.mockito.asm.ByteVector byteVector95 = byteVector35.putByteArray(byteArray80, (int) (byte) 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector98 = byteVector14.putByteArray(byteArray80, 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector95);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test02869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02869");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        label0.info = "L240721646";
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) ' ');
        label0.info = byteVector47;
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putLong(0L);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putByte(0);
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putByte((int) (short) 100);
        label0.info = byteVector67;
        java.lang.Object obj75 = null;
        label0.info = obj75;
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L109567999" + "'", str1, "L109567999");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02870");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector18 = byteVector4.putByte(0);
        java.lang.Class<?> wildcardClass19 = byteVector4.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02871");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("L1417727792");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02872");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.Object obj10 = label0.info;
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putInt(0);
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putByte(100);
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector32 = byteVector22.putByteArray(byteArray29, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector35 = byteVector17.putByteArray(byteArray29, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector37 = byteVector17.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((-1L));
        label0.info = byteVector41;
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector53 = byteVector47.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector47.putShort(10);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putShort(10);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putUTF8("L1787183750");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putInt(0);
        label0.info = byteVector61;
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte(100);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((-1));
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector84 = byteVector74.putByteArray(byteArray81, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector67.putByteArray(byteArray81, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector90 = byteVector61.putByteArray(byteArray81, 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1568120491" + "'", str9, "L1568120491");
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test02873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02873");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L1288163568");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putShort((int) (short) -1);
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        label25.info = byteVector32;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong((long) 100);
        label25.info = byteVector40;
        org.mockito.asm.ByteVector byteVector45 = byteVector40.putShort(100);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt(1);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putInt(0);
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putByte(100);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector67.putByteArray(byteArray79, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector60.putByteArray(byteArray79, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector91 = byteVector45.putByteArray(byteArray79, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector94 = byteVector22.putByteArray(byteArray79, (int) (short) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test02874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02874");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putLong((long) 'a');
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02875");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1309162730");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L1862234558");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02876");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L466234737");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector20.putUTF8("L1013299206");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test02877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02877");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02878");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putUTF8("L637422777");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) 'a');
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02879");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong(10L);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort((int) '4');
        java.lang.Class<?> wildcardClass23 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02880");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((-1));
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        label4.info = byteVector11;
        java.lang.Object obj13 = label4.info;
        java.lang.String str14 = label4.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        label4.info = byteVector21;
        java.lang.String str23 = label4.toString();
        label4.info = '4';
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort((-1));
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putLong((long) (-1));
        label4.info = (-1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putLong((long) (short) 10);
        label4.info = byteVector50;
        label0.info = label4;
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putShort((-1));
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector57.putByte(0);
        label4.info = 0;
        java.lang.String str67 = label4.toString();
        org.mockito.asm.Label label68 = new org.mockito.asm.Label();
        label68.info = ' ';
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putInt(0);
        label68.info = byteVector75;
        org.mockito.asm.ByteVector byteVector78 = byteVector75.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector84 = byteVector80.putByte((int) (short) 1);
        label4.info = byteVector80;
        java.lang.Object obj86 = label4.info;
        // The following exception was thrown during execution in test generation
        try {
            int int87 = label4.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L819082675" + "'", str1, "L819082675");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1387618817" + "'", str14, "L1387618817");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1387618817" + "'", str23, "L1387618817");
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1387618817" + "'", str67, "L1387618817");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test02881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02881");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putByte(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) '#');
        label0.info = '#';
        java.lang.String str42 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int43 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L904666471" + "'", str10, "L904666471");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L904666471" + "'", str42, "L904666471");
    }

    @Test
    public void test02882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02882");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putLong(10L);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
    }

    @Test
    public void test02883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02883");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong(1L);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putInt((int) (byte) 1);
        label0.info = byteVector43;
        java.lang.String str51 = label0.toString();
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putByte((int) (short) 1);
        label0.info = (short) 1;
        // The following exception was thrown during execution in test generation
        try {
            int int64 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1648797607" + "'", str22, "L1648797607");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1648797607" + "'", str36, "L1648797607");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L1648797607" + "'", str51, "L1648797607");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
    }

    @Test
    public void test02884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02884");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.Object obj15 = null;
        label0.info = obj15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        label0.info = "L240721646";
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) ' ');
        label0.info = byteVector47;
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putLong(0L);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putByte(0);
        org.mockito.asm.ByteVector byteVector73 = byteVector67.putByte((int) (short) 100);
        label0.info = byteVector67;
        // The following exception was thrown during execution in test generation
        try {
            int int75 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1870920556" + "'", str1, "L1870920556");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
    }

    @Test
    public void test02885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02885");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putByte((int) '4');
        byte[] byteArray21 = null;
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putByteArray(byteArray21, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02886");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L917752574");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putByte(0);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte(1);
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        label27.info = byteVector34;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putLong((long) 100);
        label27.info = byteVector42;
        java.lang.Object obj46 = label27.info;
        java.lang.String str47 = label27.toString();
        label27.info = 100L;
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((-1));
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector58 = byteVector50.putUTF8("hi!");
        label27.info = byteVector58;
        org.mockito.asm.ByteVector byteVector61 = byteVector58.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putInt(1);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort(0);
        org.mockito.asm.ByteVector byteVector80 = byteVector76.putInt((int) (byte) 100);
        byte[] byteArray87 = new byte[] { (byte) 1, (byte) 1, (byte) -1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector90 = byteVector76.putByteArray(byteArray87, (int) (byte) 1, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector93 = byteVector61.putByteArray(byteArray87, 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector96 = byteVector24.putByteArray(byteArray87, (int) (byte) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L753367404" + "'", str47, "L753367404");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[1, 1, -1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test02887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02887");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(10);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putUTF8("");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L2104385295" + "'", str20, "L2104385295");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
    }

    @Test
    public void test02888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02888");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 100);
        java.lang.Class<?> wildcardClass11 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02889");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putInt(10);
        org.mockito.asm.ByteVector byteVector42 = byteVector34.putByte((int) 'a');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1946626244" + "'", str20, "L1946626244");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test02890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02890");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1274633369");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
    }

    @Test
    public void test02891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02891");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putByte(1);
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort(100);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt(100);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putByte((int) (short) -1);
        byte[] byteArray38 = new byte[] { (byte) 100, (byte) 0, (byte) 0, (byte) 10, (byte) 1, (byte) -1 };
        org.mockito.asm.ByteVector byteVector41 = byteVector31.putByteArray(byteArray38, 1, 0);
        org.mockito.asm.ByteVector byteVector44 = byteVector16.putByteArray(byteArray38, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector47 = byteVector10.putByteArray(byteArray38, (int) (short) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100, 0, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
    }

    @Test
    public void test02892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02892");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.Label label3 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label3.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        label3.info = byteVector18;
        org.mockito.asm.ByteVector byteVector23 = byteVector18.putShort(1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        java.lang.Object obj27 = label0.info;
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100 + "'", obj27, 100);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L568903256" + "'", str28, "L568903256");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L568903256" + "'", str29, "L568903256");
    }

    @Test
    public void test02893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02893");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong(1L);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L266250542");
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02894");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L922707703");
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong((long) (byte) 0);
        label0.info = byteVector46;
        java.lang.Object obj48 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int49 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test02895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02895");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        java.lang.Object obj13 = label11.info;
        java.lang.Class<?> wildcardClass14 = label11.getClass();
        label0.info = wildcardClass14;
        java.lang.Object obj16 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int17 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1934320210" + "'", str12, "L1934320210");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class org.mockito.asm.Label");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class org.mockito.asm.Label");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class org.mockito.asm.Label");
    }

    @Test
    public void test02896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02896");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.Label label3 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        label3.info = byteVector10;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 100);
        label3.info = byteVector18;
        org.mockito.asm.ByteVector byteVector23 = byteVector18.putShort(1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label0.info = 100;
        java.lang.Object obj27 = label0.info;
        java.lang.String str28 = label0.toString();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt(100);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putByte((int) (short) -1);
        label0.info = (short) -1;
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100 + "'", obj27, 100);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L430231132" + "'", str28, "L430231132");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
    }

    @Test
    public void test02897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02897");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.String str13 = label0.toString();
        label0.info = "L368366164";
        java.lang.Object obj16 = label0.info;
        java.lang.Class<?> wildcardClass17 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L893521645" + "'", str1, "L893521645");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L893521645" + "'", str13, "L893521645");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "L368366164" + "'", obj16, "L368366164");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02898");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        label0.info = 100.0d;
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        label13.info = byteVector20;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 100);
        label13.info = byteVector28;
        java.lang.Object obj32 = label13.info;
        java.lang.Object obj33 = label13.info;
        java.lang.Object obj34 = label13.info;
        java.lang.String str35 = label13.toString();
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putInt(0);
        org.mockito.asm.ByteVector byteVector42 = byteVector36.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass47 = byteVector46.getClass();
        label13.info = byteVector46;
        java.lang.String str49 = label13.toString();
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(0);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putLong(1L);
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector62 = byteVector56.putInt((int) (byte) 1);
        label13.info = byteVector56;
        label0.info = label13;
        java.lang.String str65 = label13.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int66 = label13.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1166054974" + "'", str9, "L1166054974");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1166054974" + "'", str12, "L1166054974");
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L626551160" + "'", str35, "L626551160");
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(wildcardClass47);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L626551160" + "'", str49, "L626551160");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L626551160" + "'", str65, "L626551160");
    }

    @Test
    public void test02899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02899");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putUTF8("L1029732739");
        org.mockito.asm.ByteVector byteVector18 = byteVector8.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector8.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector22 = byteVector8.putInt((int) '#');
        java.lang.Class<?> wildcardClass23 = byteVector22.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test02900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02900");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        byte[] byteArray3 = null;
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByteArray(byteArray3, (int) (byte) 1, (int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector2.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector2.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector2.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putInt(0);
        org.mockito.asm.ByteVector byteVector19 = byteVector13.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt(1);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector33.putByte(100);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector54 = byteVector44.putByteArray(byteArray51, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector39.putByteArray(byteArray51, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector60 = byteVector30.putByteArray(byteArray51, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector13.putByteArray(byteArray51, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector66 = byteVector2.putByteArray(byteArray51, (int) (byte) 0, (int) (byte) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putByte((int) (short) 100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
    }

    @Test
    public void test02901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02901");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L843448330");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02902");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putInt(1);
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putInt((-1));
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector23 = byteVector13.putByteArray(byteArray20, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector26 = byteVector8.putByteArray(byteArray20, 1, 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) '4');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test02903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02903");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector28 = byteVector25.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector25.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) ' ');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L543826183" + "'", str10, "L543826183");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
    }

    @Test
    public void test02904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02904");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        byte[] byteArray9 = null;
        org.mockito.asm.ByteVector byteVector12 = byteVector7.putByteArray(byteArray9, (int) '#', (int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector12);
    }

    @Test
    public void test02905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02905");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((-1L));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (byte) 100);
        java.lang.Class<?> wildcardClass21 = byteVector18.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02906");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L184022116");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((-1L));
        org.mockito.asm.ByteVector byteVector16 = byteVector8.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort(1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02907");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putLong(10L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("L1311753909");
        label0.info = "L1311753909";
        java.lang.String str32 = label0.toString();
        java.lang.String str33 = label0.toString();
        java.lang.Object obj34 = label0.info;
        java.lang.Class<?> wildcardClass35 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1688540843" + "'", str10, "L1688540843");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1688540843" + "'", str32, "L1688540843");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1688540843" + "'", str33, "L1688540843");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "L1311753909" + "'", obj34, "L1311753909");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02908");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        label13.info = byteVector20;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) 100);
        label13.info = byteVector28;
        java.lang.Object obj32 = label13.info;
        java.lang.Object obj33 = label13.info;
        java.lang.Object obj34 = label13.info;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L922707703");
        label13.info = byteVector45;
        label0.info = label13;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector58 = byteVector52.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putInt(100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong((long) ' ');
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putUTF8("L917649164");
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putByte(0);
        label13.info = byteVector64;
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putLong(0L);
        org.mockito.asm.ByteVector byteVector84 = byteVector80.putByte(0);
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putLong(10L);
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putByte((int) (byte) 1);
        label13.info = byteVector86;
        java.lang.Object obj90 = label13.info;
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1285336318" + "'", str10, "L1285336318");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1285336318" + "'", str12, "L1285336318");
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test02909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02909");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt(10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02910");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (short) 10);
        java.lang.Class<?> wildcardClass15 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02911");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.Object obj30 = label0.info;
        java.lang.Object obj31 = label0.info;
        java.lang.Object obj32 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1 + "'", obj30, 1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1 + "'", obj31, 1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1 + "'", obj32, 1);
    }

    @Test
    public void test02912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02912");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt(100);
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte((int) (short) -1);
        byte[] byteArray36 = new byte[] { (byte) 100, (byte) 0, (byte) 0, (byte) 10, (byte) 1, (byte) -1 };
        org.mockito.asm.ByteVector byteVector39 = byteVector29.putByteArray(byteArray36, 1, 0);
        org.mockito.asm.ByteVector byteVector42 = byteVector14.putByteArray(byteArray36, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector45 = byteVector8.putByteArray(byteArray36, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100, 0, 0, 10, 1, -1]");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test02913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02913");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putShort((int) '#');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02914");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putInt((int) (short) 10);
        byte[] byteArray11 = null;
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, (int) (byte) 1, 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt(1);
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putUTF8("L1968915822");
        org.mockito.asm.ByteVector byteVector20 = byteVector14.putUTF8("L1567272448");
        org.mockito.asm.ByteVector byteVector22 = byteVector14.putByte(10);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort(1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putUTF8("L941510936");
        byte[] byteArray47 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector50 = byteVector40.putByteArray(byteArray47, 0, 1);
        org.mockito.asm.ByteVector byteVector53 = byteVector27.putByteArray(byteArray47, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector56 = byteVector14.putByteArray(byteArray47, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
    }

    @Test
    public void test02915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02915");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L1288163568");
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong(0L);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt(10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt(10);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((-1));
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt(1);
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putInt(0);
        org.mockito.asm.ByteVector byteVector65 = byteVector59.putByte(100);
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((-1));
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        byte[] byteArray77 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector80 = byteVector70.putByteArray(byteArray77, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector65.putByteArray(byteArray77, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector86 = byteVector56.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector89 = byteVector45.putByteArray(byteArray77, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector92 = byteVector22.putByteArray(byteArray77, 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
    }

    @Test
    public void test02916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02916");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort(100);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((-1));
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        label9.info = byteVector16;
        org.mockito.asm.ByteVector byteVector19 = byteVector16.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong(0L);
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector42 = byteVector34.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt(0);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putUTF8("L672499662");
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector58.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte(100);
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putShort((-1));
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("hi!");
        byte[] byteArray76 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector79 = byteVector69.putByteArray(byteArray76, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray76, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector85 = byteVector53.putByteArray(byteArray76, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector88 = byteVector48.putByteArray(byteArray76, 0, 0);
        org.mockito.asm.ByteVector byteVector91 = byteVector21.putByteArray(byteArray76, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector94 = byteVector8.putByteArray(byteArray76, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test02917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02917");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong(1L);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putInt((int) (byte) 1);
        label0.info = byteVector43;
        java.lang.String str51 = label0.toString();
        java.lang.Object obj52 = label0.info;
        java.lang.Object obj53 = label0.info;
        java.lang.String str54 = label0.toString();
        java.lang.Class<?> wildcardClass55 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1814684565" + "'", str22, "L1814684565");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1814684565" + "'", str36, "L1814684565");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L1814684565" + "'", str51, "L1814684565");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L1814684565" + "'", str54, "L1814684565");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test02918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02918");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByte((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02919");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort((-1));
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        label62.info = byteVector69;
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((-1));
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putLong((long) 100);
        label62.info = byteVector77;
        java.lang.String str81 = label62.toString();
        java.lang.Object obj82 = label62.info;
        org.mockito.asm.ByteVector byteVector84 = new org.mockito.asm.ByteVector(1);
        label62.info = byteVector84;
        java.lang.String str86 = label62.toString();
        java.lang.Object obj87 = label62.info;
        label0.info = label62;
        label62.info = "L1848565445";
        java.lang.String str91 = label62.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int92 = label62.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L2096172825" + "'", str20, "L2096172825");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1113992754" + "'", str59, "L1113992754");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1402182140" + "'", str81, "L1402182140");
        org.junit.Assert.assertNotNull(obj82);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L1402182140" + "'", str86, "L1402182140");
        org.junit.Assert.assertNotNull(obj87);
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "L1402182140" + "'", str91, "L1402182140");
    }

    @Test
    public void test02920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02920");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(1);
        java.lang.Class<?> wildcardClass7 = byteVector6.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test02921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02921");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.String str2 = label0.toString();
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector13 = byteVector7.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector15 = byteVector7.putShort((int) '4');
        label0.info = byteVector15;
        // The following exception was thrown during execution in test generation
        try {
            int int17 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L705189646" + "'", str1, "L705189646");
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L705189646" + "'", str2, "L705189646");
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
    }

    @Test
    public void test02922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02922");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.Object obj28 = label0.info;
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong(1L);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("L1150804603");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) '#');
        label0.info = byteVector53;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putUTF8("");
        org.mockito.asm.ByteVector byteVector63 = byteVector55.putLong((long) 'a');
        label0.info = 'a';
        java.lang.Object obj65 = label0.info;
        java.lang.String str66 = label0.toString();
        java.lang.String str67 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1083035721" + "'", str1, "L1083035721");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1083035721" + "'", str15, "L1083035721");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1083035721" + "'", str16, "L1083035721");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1254115399" + "'", str26, "L1254115399");
// flaky:         org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "L1254115399" + "'", obj28, "L1254115399");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 'a' + "'", obj65, 'a');
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L1083035721" + "'", str66, "L1083035721");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1083035721" + "'", str67, "L1083035721");
    }

    @Test
    public void test02923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02923");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((-1));
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector21.putByte((int) 'a');
        label0.info = byteVector21;
        java.lang.Object obj29 = label0.info;
        label0.info = "L56368623";
        java.lang.String str32 = label0.toString();
        java.lang.Class<?> wildcardClass33 = label0.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1480298044" + "'", str10, "L1480298044");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1480298044" + "'", str12, "L1480298044");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1480298044" + "'", str13, "L1480298044");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1480298044" + "'", str14, "L1480298044");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1480298044" + "'", str32, "L1480298044");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02924");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L922707703");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L80158192");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putByte((int) (short) 0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02925");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        label0.info = 100.0d;
        java.lang.String str12 = label0.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        label13.info = byteVector20;
        java.lang.Object obj22 = label13.info;
        java.lang.String str23 = label13.toString();
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putShort((int) (byte) 10);
        label13.info = byteVector30;
        java.lang.Object obj32 = label13.info;
        java.lang.Object obj33 = label13.info;
        java.lang.String str34 = label13.toString();
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong((long) ' ');
        label13.info = byteVector43;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte(10);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putLong(100L);
        label13.info = byteVector55;
        label0.info = byteVector55;
        java.lang.Class<?> wildcardClass62 = byteVector55.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1750010550" + "'", str9, "L1750010550");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1750010550" + "'", str12, "L1750010550");
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1541646147" + "'", str23, "L1541646147");
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1541646147" + "'", str34, "L1541646147");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test02926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02926");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L828521738");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong((long) (short) -1);
        java.lang.Class<?> wildcardClass25 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02927");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) ' ');
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02928");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1212864892");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L78747790");
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((-1L));
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putInt(0);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort(1);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putUTF8("L941510936");
        byte[] byteArray62 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector65 = byteVector55.putByteArray(byteArray62, 0, 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector42.putByteArray(byteArray62, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector35.putByteArray(byteArray62, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector74 = byteVector16.putByteArray(byteArray62, (int) ' ', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
    }

    @Test
    public void test02929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02929");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L1976642809");
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putInt(0);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02930");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        java.lang.String str20 = label0.toString();
        java.lang.String str21 = label0.toString();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putUTF8("L386554824");
        byte[] byteArray31 = null;
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putByteArray(byteArray31, (int) (byte) 100, 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector30.putByte((int) (short) 1);
        label0.info = byteVector30;
        java.lang.Object obj38 = label0.info;
        java.lang.Object obj39 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int40 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1918409782" + "'", str10, "L1918409782");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1918409782" + "'", str19, "L1918409782");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1918409782" + "'", str20, "L1918409782");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1918409782" + "'", str21, "L1918409782");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test02931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02931");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.String str7 = label0.toString();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        label8.info = byteVector15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label8.info = byteVector23;
        java.lang.Object obj27 = label8.info;
        java.lang.Object obj28 = label8.info;
        java.lang.Object obj29 = label8.info;
        java.lang.String str30 = label8.toString();
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        label31.info = byteVector38;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) 100);
        label31.info = byteVector46;
        java.lang.Object obj50 = label31.info;
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putLong((long) (-1));
        label31.info = (-1);
        label8.info = label31;
        java.lang.Object obj62 = label8.info;
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte(0);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putByte(100);
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putUTF8("L855288385");
        label8.info = byteVector73;
        label0.info = label8;
        java.lang.String str76 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int77 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1646288643" + "'", str1, "L1646288643");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1646288643" + "'", str4, "L1646288643");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1646288643" + "'", str5, "L1646288643");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L1646288643" + "'", str7, "L1646288643");
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L2072813980" + "'", str30, "L2072813980");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L1078112573");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L1078112573");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L1078112573");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L1646288643" + "'", str76, "L1646288643");
    }

    @Test
    public void test02932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02932");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong(0L);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(0);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putLong(100L);
        label0.info = byteVector40;
        byte[] byteArray48 = null;
        org.mockito.asm.ByteVector byteVector51 = byteVector40.putByteArray(byteArray48, 0, 0);
        java.lang.Class<?> wildcardClass52 = byteVector51.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L374134961" + "'", str19, "L374134961");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test02933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02933");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort((-1));
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        label38.info = byteVector45;
        java.lang.Object obj47 = label38.info;
        java.lang.String str48 = label38.toString();
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((-1));
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putShort((int) (byte) 10);
        label38.info = byteVector55;
        java.lang.String str57 = label38.toString();
        label38.info = '4';
        java.lang.String str60 = label38.toString();
        java.lang.Object obj61 = label38.info;
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector76 = byteVector70.putInt((int) (short) 1);
        label38.info = byteVector76;
        label0.info = label38;
        java.lang.Object obj79 = label0.info;
        java.lang.Object obj80 = label0.info;
        java.lang.String str81 = label0.toString();
        java.lang.Object obj82 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int83 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1944979735" + "'", str10, "L1944979735");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1944979735" + "'", str33, "L1944979735");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1944979735" + "'", str34, "L1944979735");
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1944979735" + "'", str36, "L1944979735");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(obj47);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L787838939" + "'", str48, "L787838939");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L787838939" + "'", str57, "L787838939");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L787838939" + "'", str60, "L787838939");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + '4' + "'", obj61, '4');
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals(obj79.toString(), "L787838939");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "L787838939");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "L787838939");
        org.junit.Assert.assertNotNull(obj80);
// flaky:         org.junit.Assert.assertEquals(obj80.toString(), "L787838939");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "L787838939");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "L787838939");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1944979735" + "'", str81, "L1944979735");
        org.junit.Assert.assertNotNull(obj82);
// flaky:         org.junit.Assert.assertEquals(obj82.toString(), "L787838939");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "L787838939");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "L787838939");
    }

    @Test
    public void test02934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02934");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector14 = byteVector4.putByteArray(byteArray11, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector4.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector18 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector4.putShort((int) (byte) 100);
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putShort((-1));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        label21.info = byteVector28;
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector30.putShort((-1));
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong((long) 100);
        label21.info = byteVector36;
        org.mockito.asm.ByteVector byteVector41 = byteVector36.putShort(100);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt(1);
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putInt(0);
        org.mockito.asm.ByteVector byteVector63 = byteVector57.putByte(100);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        byte[] byteArray75 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector78 = byteVector68.putByteArray(byteArray75, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector63.putByteArray(byteArray75, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector56.putByteArray(byteArray75, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector41.putByteArray(byteArray75, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector90 = byteVector4.putByteArray(byteArray75, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test02935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02935");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L289255380");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putShort(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putUTF8("L85310275");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putUTF8("L1606643675");
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test02936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02936");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("");
        label17.info = byteVector24;
        java.lang.String str26 = label17.toString();
        label0.info = str26;
        java.lang.String str28 = label0.toString();
        java.lang.Object obj29 = label0.info;
        java.lang.Object obj30 = label0.info;
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte(0);
        label0.info = byteVector41;
        java.lang.String str43 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int44 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L90120025" + "'", str1, "L90120025");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L90120025" + "'", str15, "L90120025");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L90120025" + "'", str16, "L90120025");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L802700100" + "'", str26, "L802700100");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L90120025" + "'", str28, "L90120025");
// flaky:         org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "L802700100" + "'", obj29, "L802700100");
// flaky:         org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "L802700100" + "'", obj30, "L802700100");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L90120025" + "'", str43, "L90120025");
    }

    @Test
    public void test02937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02937");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        java.lang.String str7 = label0.toString();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        label8.info = byteVector15;
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) 100);
        label8.info = byteVector23;
        java.lang.Object obj27 = label8.info;
        java.lang.Object obj28 = label8.info;
        java.lang.Object obj29 = label8.info;
        java.lang.String str30 = label8.toString();
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        label31.info = byteVector38;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) 100);
        label31.info = byteVector46;
        java.lang.Object obj50 = label31.info;
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putLong((long) (-1));
        label31.info = (-1);
        label8.info = label31;
        java.lang.Object obj62 = label8.info;
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte(0);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putByte(100);
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putUTF8("L855288385");
        label8.info = byteVector73;
        label0.info = label8;
        java.lang.Object obj76 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int77 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2057425478" + "'", str1, "L2057425478");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L2057425478" + "'", str4, "L2057425478");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L2057425478" + "'", str5, "L2057425478");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L2057425478" + "'", str7, "L2057425478");
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L142356054" + "'", str30, "L142356054");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L209877506");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L209877506");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L209877506");
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(obj76);
// flaky:         org.junit.Assert.assertEquals(obj76.toString(), "L142356054");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "L142356054");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "L142356054");
    }

    @Test
    public void test02938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02938");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putLong(10L);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass27 = byteVector24.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02939");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        java.lang.String str16 = label0.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        java.lang.Object obj19 = label17.info;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putShort((-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putUTF8("L90138980");
        label17.info = byteVector28;
        java.lang.Object obj30 = label17.info;
        java.lang.Object obj31 = label17.info;
        java.lang.Object obj32 = null;
        label17.info = obj32;
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putLong(10L);
        label17.info = byteVector42;
        org.mockito.asm.ByteVector byteVector45 = byteVector42.putUTF8("L573057893");
        label0.info = byteVector45;
        org.mockito.asm.ByteVector byteVector48 = byteVector45.putByte(0);
        org.mockito.asm.ByteVector byteVector50 = byteVector45.putInt((int) ' ');
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1823135628" + "'", str10, "L1823135628");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1823135628" + "'", str12, "L1823135628");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1823135628" + "'", str15, "L1823135628");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1823135628" + "'", str16, "L1823135628");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1978131277" + "'", str18, "L1978131277");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
    }

    @Test
    public void test02940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02940");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort(1);
        org.mockito.asm.ByteVector byteVector12 = byteVector6.putLong((long) 10);
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02941");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        java.lang.String str24 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1093445691" + "'", str10, "L1093445691");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1093445691" + "'", str20, "L1093445691");
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1093445691" + "'", str22, "L1093445691");
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1093445691" + "'", str24, "L1093445691");
    }

    @Test
    public void test02942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02942");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        label7.info = byteVector14;
        java.lang.Object obj16 = label7.info;
        java.lang.String str17 = label7.toString();
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((-1));
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putShort((int) (byte) 10);
        label7.info = byteVector24;
        java.lang.Object obj26 = label7.info;
        java.lang.Object obj27 = label7.info;
        java.lang.String str28 = label7.toString();
        java.lang.String str29 = label7.toString();
        label0.info = str29;
        // The following exception was thrown during execution in test generation
        try {
            int int31 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2090326057" + "'", str1, "L2090326057");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L2090326057" + "'", str4, "L2090326057");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L2090326057" + "'", str5, "L2090326057");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 0 + "'", obj6, (short) 0);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1539453180" + "'", str17, "L1539453180");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1539453180" + "'", str28, "L1539453180");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1539453180" + "'", str29, "L1539453180");
    }

    @Test
    public void test02943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02943");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(0);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L46931455");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort((-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putShort(100);
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = byteVector39.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector39.putShort(1);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte(100);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((-1));
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector71 = byteVector61.putByteArray(byteArray68, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector74 = byteVector54.putByteArray(byteArray68, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector39.putByteArray(byteArray68, (int) (short) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector80 = byteVector24.putByteArray(byteArray68, (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test02944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02944");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putInt(0);
        org.mockito.asm.ByteVector byteVector21 = byteVector15.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 0);
        label0.info = (short) 0;
        java.lang.Object obj27 = label0.info;
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putUTF8("L1288163568");
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putInt(10);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) '#');
        label0.info = '#';
        // The following exception was thrown during execution in test generation
        try {
            int int56 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L299860239" + "'", str10, "L299860239");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L299860239" + "'", str12, "L299860239");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 0 + "'", obj27, (short) 0);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
    }

    @Test
    public void test02945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02945");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1123560112");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02946");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte(100);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("L1022999258");
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putShort((int) 'a');
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
    }

    @Test
    public void test02947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02947");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass6 = byteVector5.getClass();
        label0.info = wildcardClass6;
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putShort((-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) (short) 10);
        label0.info = byteVector12;
        org.mockito.asm.ByteVector byteVector19 = byteVector12.putInt(1);
        org.mockito.asm.ByteVector byteVector21 = byteVector12.putInt(10);
        org.mockito.asm.ByteVector byteVector23 = byteVector12.putShort(0);
        org.mockito.asm.ByteVector byteVector25 = byteVector12.putInt((int) (byte) 1);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1886368351" + "'", str1, "L1886368351");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
    }

    @Test
    public void test02948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02948");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        label0.info = "hi!";
        java.lang.Object obj15 = label0.info;
        java.lang.Object obj16 = label0.info;
        label0.info = "";
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putLong(0L);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("L1898729737");
        label0.info = "L1898729737";
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putShort((-1));
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort(100);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putInt(0);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector61.putInt(10);
        label0.info = byteVector61;
        org.mockito.asm.ByteVector byteVector70 = byteVector61.putShort((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1114934237" + "'", str10, "L1114934237");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "hi!" + "'", obj15, "hi!");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1114934237" + "'", str22, "L1114934237");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
    }

    @Test
    public void test02949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02949");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.Object obj33 = label0.info;
        java.lang.String str34 = label0.toString();
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.String str36 = label35.toString();
        label35.info = (short) 0;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector((int) 'a');
        java.lang.Class<?> wildcardClass41 = byteVector40.getClass();
        label35.info = wildcardClass41;
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        label43.info = byteVector50;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putLong((long) 100);
        label43.info = byteVector58;
        java.lang.Object obj62 = label43.info;
        java.lang.Object obj63 = label43.info;
        java.lang.Object obj64 = label43.info;
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putUTF8("L922707703");
        label43.info = byteVector75;
        java.lang.Class<?> wildcardClass77 = byteVector75.getClass();
        label35.info = byteVector75;
        java.lang.Object obj79 = null;
        label35.info = obj79;
        label0.info = label35;
        java.lang.Object obj82 = label35.info;
        java.lang.Object obj83 = label35.info;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass84 = obj83.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L212450736" + "'", str10, "L212450736");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L212450736" + "'", str34, "L212450736");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L897351821" + "'", str36, "L897351821");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test02950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02950");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) (byte) 1);
        label0.info = (byte) 1;
        java.lang.String str9 = label0.toString();
        java.lang.String str10 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1437019162" + "'", str9, "L1437019162");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1437019162" + "'", str10, "L1437019162");
    }

    @Test
    public void test02951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02951");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putInt(0);
        java.lang.Class<?> wildcardClass13 = byteVector12.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02952");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt(100);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte(10);
        org.mockito.asm.ByteVector byteVector26 = byteVector22.putInt((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
    }

    @Test
    public void test02953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02953");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(100);
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((-1));
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector21 = byteVector11.putByteArray(byteArray18, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector24 = byteVector6.putByteArray(byteArray18, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector6.putUTF8("L729713457");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putShort(10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putShort((int) (byte) 0);
        java.lang.Class<?> wildcardClass39 = byteVector36.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test02954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02954");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector8 = byteVector0.putInt(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector0.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector12 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((-1L));
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putInt(0);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((-1));
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort(1);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putUTF8("L941510936");
        byte[] byteArray58 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector61 = byteVector51.putByteArray(byteArray58, 0, 1);
        org.mockito.asm.ByteVector byteVector64 = byteVector38.putByteArray(byteArray58, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector31.putByteArray(byteArray58, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector70 = byteVector0.putByteArray(byteArray58, (int) (byte) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
    }

    @Test
    public void test02955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02955");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putByte((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putUTF8("L1212864892");
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02956");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte(0);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte(100);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt(100);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L374832530");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putInt(1);
        org.mockito.asm.ByteVector byteVector34 = byteVector26.putInt((-1));
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((-1));
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector49 = byteVector39.putByteArray(byteArray46, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector52 = byteVector34.putByteArray(byteArray46, 1, 1);
        org.mockito.asm.ByteVector byteVector55 = byteVector23.putByteArray(byteArray46, (int) (byte) 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector58 = byteVector6.putByteArray(byteArray46, (int) 'a', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test02957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02957");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong(10L);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((-1));
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort(10);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt(1);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putInt(0);
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putByte(100);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        byte[] byteArray59 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector62 = byteVector52.putByteArray(byteArray59, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector65 = byteVector47.putByteArray(byteArray59, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector68 = byteVector38.putByteArray(byteArray59, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector71 = byteVector27.putByteArray(byteArray59, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector74 = byteVector16.putByteArray(byteArray59, (int) (byte) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
    }

    @Test
    public void test02958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02958");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort(100);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong(0L);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putLong(0L);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putShort((int) '#');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((-1L));
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector50.putInt(0);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putByte((int) (short) 0);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((-1));
        org.mockito.asm.ByteVector byteVector67 = byteVector63.putShort(1);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putUTF8("L941510936");
        byte[] byteArray74 = new byte[] { (byte) 100, (byte) 100 };
        org.mockito.asm.ByteVector byteVector77 = byteVector67.putByteArray(byteArray74, 0, 1);
        org.mockito.asm.ByteVector byteVector80 = byteVector54.putByteArray(byteArray74, (int) (byte) 0, 0);
        org.mockito.asm.ByteVector byteVector83 = byteVector47.putByteArray(byteArray74, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector86 = byteVector28.putByteArray(byteArray74, (int) (byte) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[100, 100]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
    }

    @Test
    public void test02959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02959");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        org.mockito.asm.ByteVector byteVector16 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort((-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(1);
        label0.info = 1;
        java.lang.String str30 = label0.toString();
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putShort((-1));
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        label31.info = byteVector38;
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) 100);
        label31.info = byteVector46;
        org.mockito.asm.ByteVector byteVector51 = byteVector46.putShort(1);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putLong(100L);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putUTF8("L1310345801");
        org.mockito.asm.ByteVector byteVector59 = byteVector51.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("L1673143499");
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putShort((-1));
        label0.info = (-1);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1998375704" + "'", str30, "L1998375704");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
    }

    @Test
    public void test02960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02960");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putShort(10);
        java.lang.Class<?> wildcardClass21 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test02961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02961");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.String str4 = label0.toString();
        org.mockito.asm.ByteVector byteVector5 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putInt(10);
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putLong((long) '4');
        label0.info = byteVector13;
        label0.info = "L499234616";
        java.lang.String str17 = label0.toString();
        java.lang.Object obj18 = label0.info;
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(0L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putLong((long) 1);
        java.lang.Class<?> wildcardClass40 = byteVector39.getClass();
        label0.info = wildcardClass40;
        java.lang.Object obj42 = label0.info;
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L2013103553" + "'", str1, "L2013103553");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L2013103553" + "'", str4, "L2013103553");
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L2013103553" + "'", str17, "L2013103553");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "L499234616" + "'", obj18, "L499234616");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class org.mockito.asm.ByteVector");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class org.mockito.asm.ByteVector");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class org.mockito.asm.ByteVector");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test02962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02962");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) ' ');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putByte((int) (byte) 0);
        java.lang.Class<?> wildcardClass8 = byteVector5.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test02963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02963");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putUTF8("L1825594578");
        java.lang.Class<?> wildcardClass17 = byteVector16.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02964");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        java.lang.String str28 = label0.toString();
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        java.lang.String str30 = label29.toString();
        label29.info = (short) 0;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong((long) 100);
        label29.info = byteVector39;
        java.lang.Object obj43 = label29.info;
        label0.info = obj43;
        java.lang.String str45 = label0.toString();
        java.lang.Object obj46 = label0.info;
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        java.lang.String str48 = label47.toString();
        java.lang.String str49 = label47.toString();
        java.lang.Object obj50 = label47.info;
        java.lang.String str51 = label47.toString();
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putLong((long) (byte) -1);
        label47.info = byteVector60;
        label0.info = byteVector60;
        // The following exception was thrown during execution in test generation
        try {
            int int65 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L2016254441" + "'", str28, "L2016254441");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1975759563" + "'", str30, "L1975759563");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(obj43);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L2016254441" + "'", str45, "L2016254441");
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L1221940044" + "'", str48, "L1221940044");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1221940044" + "'", str49, "L1221940044");
        org.junit.Assert.assertNull(obj50);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L1221940044" + "'", str51, "L1221940044");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
    }

    @Test
    public void test02965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02965");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector16 = byteVector10.putUTF8("L1176870368");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(1);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte(100);
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putInt(1);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putByte(100);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector74 = byteVector64.putByteArray(byteArray71, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector59.putByteArray(byteArray71, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector80 = byteVector50.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector83 = byteVector37.putByteArray(byteArray71, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector86 = byteVector20.putByteArray(byteArray71, (int) (byte) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
    }

    @Test
    public void test02966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02966");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        java.lang.String str9 = label0.toString();
        java.lang.Object obj10 = label0.info;
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L763528048");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte(0);
        label0.info = 0;
        java.lang.String str27 = label0.toString();
        java.lang.String str28 = label0.toString();
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putShort((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putInt(100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putByte((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector39.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector49 = byteVector39.putByte((int) 'a');
        label0.info = byteVector49;
        // The following exception was thrown during execution in test generation
        try {
            int int51 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L300569425" + "'", str9, "L300569425");
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L300569425" + "'", str27, "L300569425");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L300569425" + "'", str28, "L300569425");
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
    }

    @Test
    public void test02967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02967");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong(1L);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) (short) 100);
        label0.info = (short) 100;
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putShort((-1));
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        label39.info = byteVector46;
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((-1));
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong((long) 100);
        label39.info = byteVector54;
        java.lang.Object obj58 = label39.info;
        java.lang.String str59 = label39.toString();
        java.lang.Class<?> wildcardClass60 = label39.getClass();
        label0.info = label39;
        java.lang.Object obj62 = label0.info;
        label0.info = 0L;
        java.lang.String str65 = label0.toString();
        java.lang.String str66 = label0.toString();
        java.lang.String str67 = label0.toString();
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector68.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putLong(1L);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putShort((-1));
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putUTF8("L1024735804");
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector88.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector92 = byteVector88.putInt((int) (byte) -1);
        label0.info = byteVector92;
        // The following exception was thrown during execution in test generation
        try {
            int int94 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L916785376" + "'", str20, "L916785376");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1185104566" + "'", str59, "L1185104566");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "L1185104566");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "L1185104566");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "L1185104566");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L916785376" + "'", str65, "L916785376");
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L916785376" + "'", str66, "L916785376");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L916785376" + "'", str67, "L916785376");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
    }

    @Test
    public void test02968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02968");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        java.lang.Object obj2 = label0.info;
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((-1));
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putUTF8("L90138980");
        label0.info = byteVector11;
        java.lang.Object obj13 = label0.info;
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putInt(1);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putUTF8("L102640438");
        java.lang.Class<?> wildcardClass37 = byteVector32.getClass();
        label0.info = byteVector32;
        java.lang.Class<?> wildcardClass39 = label0.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L216380223" + "'", str1, "L216380223");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test02969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02969");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("L354999178");
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putByte(1);
        java.lang.Class<?> wildcardClass15 = byteVector14.getClass();
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02970");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt(1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (short) 1);
        label0.info = (short) 1;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector70 = byteVector66.putShort((int) (short) -1);
        label0.info = byteVector66;
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector86 = byteVector84.putLong(0L);
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector90 = byteVector86.putInt((-1));
        label0.info = byteVector90;
        // The following exception was thrown during execution in test generation
        try {
            int int92 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1432149556" + "'", str10, "L1432149556");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1432149556" + "'", str33, "L1432149556");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1432149556" + "'", str34, "L1432149556");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
    }

    @Test
    public void test02971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02971");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putInt(0);
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt(0);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putInt(1);
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt(0);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putByte(100);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector47 = byteVector37.putByteArray(byteArray44, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector50 = byteVector32.putByteArray(byteArray44, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector53 = byteVector25.putByteArray(byteArray44, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector56 = byteVector8.putByteArray(byteArray44, (int) (byte) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector53);
    }

    @Test
    public void test02972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02972");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1038142970");
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
    }

    @Test
    public void test02973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02973");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L917836053");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte(100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L321534629");
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putByte(100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putInt(1);
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte(100);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector70 = byteVector60.putByteArray(byteArray67, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector73 = byteVector53.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector76 = byteVector44.putByteArray(byteArray67, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector39.putByteArray(byteArray67, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector82 = byteVector20.putByteArray(byteArray67, 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test02974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02974");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.Object obj20 = label0.info;
        java.lang.Object obj21 = label0.info;
        java.lang.String str22 = label0.toString();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putInt(0);
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putLong((long) (byte) -1);
        java.lang.Class<?> wildcardClass34 = byteVector33.getClass();
        label0.info = byteVector33;
        java.lang.String str36 = label0.toString();
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte(0);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong(1L);
        org.mockito.asm.ByteVector byteVector47 = byteVector43.putUTF8("L187574180");
        org.mockito.asm.ByteVector byteVector49 = byteVector43.putInt((int) (byte) 1);
        label0.info = byteVector43;
        java.lang.String str51 = label0.toString();
        java.lang.Object obj52 = label0.info;
        java.lang.String str53 = label0.toString();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L778547802" + "'", str22, "L778547802");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(wildcardClass34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L778547802" + "'", str36, "L778547802");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L778547802" + "'", str51, "L778547802");
        org.junit.Assert.assertNotNull(obj52);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L778547802" + "'", str53, "L778547802");
    }

    @Test
    public void test02975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02975");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        org.mockito.asm.ByteVector byteVector3 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt(0);
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector10 = byteVector7.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putLong(0L);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putShort((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putByte((int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
    }

    @Test
    public void test02976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02976");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.Object obj19 = label0.info;
        java.lang.String str20 = label0.toString();
        label0.info = 100L;
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector23.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector31 = byteVector23.putUTF8("hi!");
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putLong((long) (byte) 0);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("L1404822831");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort(10);
        org.mockito.asm.ByteVector byteVector40 = byteVector34.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort(0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L716424752" + "'", str20, "L716424752");
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
    }

    @Test
    public void test02977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02977");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (short) 10);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L815469913");
        org.mockito.asm.ByteVector byteVector24 = byteVector18.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector26 = byteVector18.putInt((int) (short) 1);
        org.mockito.asm.ByteVector byteVector28 = byteVector18.putLong((long) 0);
        java.lang.Class<?> wildcardClass29 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02978");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(1);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putLong((long) (short) 1);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((-1));
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector33 = byteVector27.putLong(100L);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putShort(100);
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector54 = byteVector46.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector46.putShort(1);
        org.mockito.asm.ByteVector byteVector57 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector61 = byteVector57.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte(100);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putShort((-1));
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        byte[] byteArray75 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector78 = byteVector68.putByteArray(byteArray75, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector61.putByteArray(byteArray75, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector84 = byteVector46.putByteArray(byteArray75, (int) (short) 0, 1);
        org.mockito.asm.ByteVector byteVector87 = byteVector27.putByteArray(byteArray75, (int) (byte) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector90 = byteVector18.putByteArray(byteArray75, (int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test02979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02979");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte(0);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putInt(0);
        org.mockito.asm.ByteVector byteVector23 = byteVector17.putByte(100);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putInt(1);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putInt(0);
        org.mockito.asm.ByteVector byteVector43 = byteVector37.putByte(100);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector58 = byteVector48.putByteArray(byteArray55, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector43.putByteArray(byteArray55, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector64 = byteVector34.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector17.putByteArray(byteArray55, (int) (short) 1, 0);
        org.mockito.asm.ByteVector byteVector70 = byteVector12.putByteArray(byteArray55, (int) (byte) 0, 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putShort(100);
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
    }

    @Test
    public void test02980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02980");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        java.lang.Object obj11 = label0.info;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector20 = byteVector16.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector22 = byteVector16.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) 100);
        label0.info = byteVector22;
        label0.info = "L42697657";
        java.lang.String str28 = label0.toString();
        java.lang.String str29 = label0.toString();
        label0.info = "L928804396";
        java.lang.String str32 = label0.toString();
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        label33.info = byteVector40;
        java.lang.Object obj42 = label33.info;
        java.lang.String str43 = label33.toString();
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((-1));
        org.mockito.asm.ByteVector byteVector50 = byteVector44.putShort((int) (byte) 10);
        label33.info = byteVector50;
        java.lang.Object obj52 = label33.info;
        java.lang.Object obj53 = label33.info;
        java.lang.String str54 = label33.toString();
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putShort((-1));
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putLong((long) ' ');
        label33.info = byteVector63;
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putShort((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putByte(10);
        org.mockito.asm.ByteVector byteVector79 = byteVector75.putLong(100L);
        label33.info = byteVector75;
        java.lang.String str81 = label33.toString();
        label33.info = "L2025840233";
        label0.info = label33;
        // The following exception was thrown during execution in test generation
        try {
            int int85 = label33.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1400558772" + "'", str28, "L1400558772");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1400558772" + "'", str29, "L1400558772");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1400558772" + "'", str32, "L1400558772");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(obj42);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L809668705" + "'", str43, "L809668705");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L809668705" + "'", str54, "L809668705");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L809668705" + "'", str81, "L809668705");
    }

    @Test
    public void test02981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02981");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector2.putShort((-1));
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putLong(10L);
        label0.info = 10L;
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putByte((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putLong((long) 0);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L939255399");
        label0.info = byteVector20;
        org.mockito.asm.ByteVector byteVector25 = byteVector20.putInt((int) (short) 0);
        org.mockito.asm.ByteVector byteVector27 = byteVector20.putInt((int) (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1810299527" + "'", str1, "L1810299527");
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
    }

    @Test
    public void test02982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02982");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.Object obj33 = label0.info;
        java.lang.Object obj34 = label0.info;
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putUTF8("");
        org.mockito.asm.ByteVector byteVector43 = byteVector35.putLong(10L);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("L1216780350");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt(100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putShort(1);
        label0.info = byteVector49;
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector52.putShort((-1));
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        label51.info = byteVector58;
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putLong((long) 100);
        label51.info = byteVector66;
        org.mockito.asm.ByteVector byteVector71 = byteVector66.putShort(1);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putLong(100L);
        org.mockito.asm.ByteVector byteVector77 = byteVector71.putUTF8("L1310345801");
        label0.info = byteVector71;
        java.lang.Object obj79 = label0.info;
        java.lang.Object obj80 = label0.info;
        java.lang.Object obj81 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L634033227" + "'", str10, "L634033227");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test02983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02983");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector4.putShort(0);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte(0);
        org.mockito.asm.ByteVector byteVector14 = byteVector10.putInt((int) (byte) 0);
        java.lang.Class<?> wildcardClass15 = byteVector10.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02984");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        java.lang.String str33 = label0.toString();
        java.lang.String str34 = label0.toString();
        java.lang.Object obj35 = label0.info;
        java.lang.String str36 = label0.toString();
        java.lang.Object obj37 = label0.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        label38.info = ' ';
        java.lang.Object obj41 = label38.info;
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector52 = byteVector46.putLong((long) 'a');
        label38.info = byteVector46;
        java.lang.String str54 = label38.toString();
        java.lang.Object obj55 = label38.info;
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putLong((long) (short) 10);
        label38.info = byteVector68;
        label0.info = label38;
        // The following exception was thrown during execution in test generation
        try {
            int int71 = label38.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1068958763" + "'", str10, "L1068958763");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1068958763" + "'", str33, "L1068958763");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1068958763" + "'", str34, "L1068958763");
        org.junit.Assert.assertNotNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1068958763" + "'", str36, "L1068958763");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + ' ' + "'", obj41, ' ');
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L2130187415" + "'", str54, "L2130187415");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
    }

    @Test
    public void test02985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02985");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putByte(100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte(10);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(100L);
        label0.info = byteVector36;
        org.mockito.asm.ByteVector byteVector39 = byteVector36.putLong(10L);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector43 = byteVector39.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector45 = byteVector39.putInt((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L838930482" + "'", str10, "L838930482");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L838930482" + "'", str19, "L838930482");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L838930482" + "'", str22, "L838930482");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
    }

    @Test
    public void test02986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02986");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putByte((int) (short) 1);
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt(0);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector13.putShort((-1));
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong(0L);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector31 = byteVector25.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putShort((-1));
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt(1);
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putInt(0);
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putByte(100);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putShort((-1));
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector70 = byteVector60.putByteArray(byteArray67, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector73 = byteVector55.putByteArray(byteArray67, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector76 = byteVector48.putByteArray(byteArray67, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector31.putByteArray(byteArray67, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector82 = byteVector10.putByteArray(byteArray67, (int) (byte) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test02987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02987");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putLong(1L);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) (short) 100);
        label0.info = byteVector25;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putInt((int) '4');
        label0.info = byteVector31;
        org.mockito.asm.ByteVector byteVector34 = byteVector31.putByte(0);
        java.lang.Class<?> wildcardClass35 = byteVector34.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L490465921" + "'", str10, "L490465921");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02988");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong((long) (byte) 1);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putShort((-1));
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) 10);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putShort(0);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector36.putShort((-1));
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putShort(10);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector47.putShort((-1));
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putInt(1);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putInt(0);
        org.mockito.asm.ByteVector byteVector66 = byteVector60.putByte(100);
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector67.putShort((-1));
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector81 = byteVector71.putByteArray(byteArray78, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector84 = byteVector66.putByteArray(byteArray78, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector87 = byteVector57.putByteArray(byteArray78, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector90 = byteVector46.putByteArray(byteArray78, 0, 0);
        org.mockito.asm.ByteVector byteVector93 = byteVector33.putByteArray(byteArray78, (int) (byte) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector96 = byteVector16.putByteArray(byteArray78, (int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test02989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02989");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        java.lang.String str7 = label0.toString();
        java.lang.Object obj8 = label0.info;
        java.lang.Object obj9 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1018462467" + "'", str1, "L1018462467");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1018462467" + "'", str5, "L1018462467");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1018462467" + "'", str6, "L1018462467");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L1018462467" + "'", str7, "L1018462467");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 0 + "'", obj8, (short) 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 0 + "'", obj9, (short) 0);
    }

    @Test
    public void test02990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02990");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putLong(0L);
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector18 = byteVector12.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector20 = byteVector12.putByte((int) '#');
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putInt(0);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((int) (short) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByte((-1));
        java.lang.Class<?> wildcardClass33 = byteVector28.getClass();
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02991");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(1);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putLong(100L);
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putUTF8("L1310345801");
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector30 = byteVector20.putByte((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putShort(1);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector35.putInt(0);
        org.mockito.asm.ByteVector byteVector41 = byteVector35.putByte(100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putLong((long) '4');
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putInt(1);
        org.mockito.asm.ByteVector byteVector49 = byteVector45.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putShort((int) (short) 0);
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("L1671309659");
        org.mockito.asm.ByteVector byteVector60 = byteVector56.putByte((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte(100);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector68.putShort((-1));
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector82 = byteVector72.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector85 = byteVector65.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector88 = byteVector56.putByteArray(byteArray79, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector91 = byteVector51.putByteArray(byteArray79, 1, 0);
        org.mockito.asm.ByteVector byteVector94 = byteVector32.putByteArray(byteArray79, 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector94);
    }

    @Test
    public void test02992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02992");
        org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector4 = byteVector0.putShort((-1));
        org.mockito.asm.ByteVector byteVector6 = byteVector0.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putLong(1L);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putShort((-1));
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) (short) 10);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte(0);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putInt((int) (short) 10);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putLong((long) (short) 100);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) (short) -1);
        byte[] byteArray34 = null;
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByteArray(byteArray34, (int) (short) -1, (int) '4');
        byte[] byteArray38 = null;
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putByteArray(byteArray38, (int) (byte) 1, (int) '4');
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((-1));
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putLong(0L);
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector60 = byteVector54.putUTF8("L1337376893");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putShort(0);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putInt((int) (short) 100);
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putInt(0);
        org.mockito.asm.ByteVector byteVector71 = byteVector65.putByte(100);
        org.mockito.asm.ByteVector byteVector72 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putShort((-1));
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putUTF8("hi!");
        byte[] byteArray83 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector86 = byteVector76.putByteArray(byteArray83, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector89 = byteVector71.putByteArray(byteArray83, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector92 = byteVector62.putByteArray(byteArray83, (int) (byte) 1, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector95 = byteVector37.putByteArray(byteArray83, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector98 = byteVector22.putByteArray(byteArray83, 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector2);
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector95);
    }

    @Test
    public void test02993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02993");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(1);
        label0.info = byteVector22;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putShort((-1));
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong(0L);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putInt(0);
        org.mockito.asm.ByteVector byteVector44 = byteVector40.putLong(10L);
        org.mockito.asm.ByteVector byteVector46 = byteVector40.putLong(100L);
        label0.info = byteVector40;
        label0.info = "L2002307881";
        java.lang.String str50 = label0.toString();
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector57 = byteVector51.putUTF8("");
        org.mockito.asm.ByteVector byteVector59 = byteVector51.putShort((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector61 = byteVector51.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putLong((long) 'a');
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putLong((long) ' ');
        label0.info = byteVector67;
        java.lang.Object obj69 = label0.info;
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L452840612" + "'", str19, "L452840612");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L452840612" + "'", str50, "L452840612");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test02994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02994");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = ' ';
        java.lang.Object obj3 = label0.info;
        org.mockito.asm.ByteVector byteVector4 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector8 = byteVector4.putShort((-1));
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector12 = byteVector8.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector14 = byteVector8.putLong((long) 'a');
        label0.info = byteVector8;
        java.lang.Object obj16 = label0.info;
        java.lang.Object obj17 = label0.info;
        java.lang.Object obj18 = label0.info;
        java.lang.String str19 = label0.toString();
        java.lang.Object obj20 = label0.info;
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + ' ' + "'", obj3, ' ');
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1025395099" + "'", str19, "L1025395099");
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test02995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02995");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) '#');
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putLong((long) (byte) 100);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector6 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putShort((int) ' ');
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putLong(0L);
        org.mockito.asm.ByteVector byteVector22 = byteVector18.putUTF8("L644109221");
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector27 = byteVector23.putShort((int) (short) 1);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putInt(10);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector38.putShort((-1));
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt(1);
        org.mockito.asm.ByteVector byteVector52 = byteVector48.putShort((int) (short) 10);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector53.putInt(0);
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putByte(100);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector60.putShort((-1));
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector74 = byteVector64.putByteArray(byteArray71, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector77 = byteVector59.putByteArray(byteArray71, 1, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector80 = byteVector52.putByteArray(byteArray71, (int) (byte) 1, 1);
        org.mockito.asm.ByteVector byteVector83 = byteVector33.putByteArray(byteArray71, 0, (int) (byte) 0);
        org.mockito.asm.ByteVector byteVector86 = byteVector18.putByteArray(byteArray71, (int) (byte) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector89 = byteVector5.putByteArray(byteArray71, (int) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector86);
    }

    @Test
    public void test02996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02996");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        label0.info = '4';
        java.lang.String str22 = label0.toString();
        java.lang.Object obj23 = label0.info;
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector24.putInt(0);
        org.mockito.asm.ByteVector byteVector30 = byteVector24.putByte(100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte(0);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte(10);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(100L);
        label0.info = byteVector36;
        label0.info = "L484427935";
        java.lang.String str40 = label0.toString();
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putShort((-1));
        org.mockito.asm.ByteVector byteVector47 = byteVector41.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt(100);
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putUTF8("L386554824");
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putByte((int) (short) -1);
        org.mockito.asm.ByteVector byteVector57 = byteVector49.putUTF8("L1029732739");
        org.mockito.asm.ByteVector byteVector59 = byteVector49.putInt(1);
        org.mockito.asm.ByteVector byteVector61 = byteVector49.putUTF8("");
        label0.info = byteVector61;
        java.lang.String str63 = label0.toString();
        java.lang.Object obj64 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int65 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L308051728" + "'", str10, "L308051728");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L308051728" + "'", str19, "L308051728");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L308051728" + "'", str22, "L308051728");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L308051728" + "'", str40, "L308051728");
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L308051728" + "'", str63, "L308051728");
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test02997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02997");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        label0.info = (short) 0;
        java.lang.Object obj4 = label0.info;
        java.lang.String str5 = label0.toString();
        org.mockito.asm.ByteVector byteVector6 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector8 = byteVector6.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector10 = byteVector6.putShort((-1));
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1663430528");
        org.mockito.asm.ByteVector byteVector18 = byteVector14.putByte((int) (byte) -1);
        label0.info = byteVector14;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L601811098" + "'", str1, "L601811098");
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 0 + "'", obj4, (short) 0);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L601811098" + "'", str5, "L601811098");
        org.junit.Assert.assertNotNull(byteVector8);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
    }

    @Test
    public void test02998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02998");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector11.putShort((-1));
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putShort((int) (byte) 10);
        label0.info = byteVector17;
        java.lang.String str19 = label0.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((-1));
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        label20.info = byteVector27;
        java.lang.Object obj29 = label20.info;
        java.lang.String str30 = label20.toString();
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector31.putShort((-1));
        org.mockito.asm.ByteVector byteVector37 = byteVector31.putShort((int) (byte) 10);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putLong(1L);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) (short) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) (short) 100);
        label20.info = byteVector45;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) '4');
        label20.info = byteVector51;
        java.lang.Object obj53 = label20.info;
        label0.info = label20;
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putInt(0);
        org.mockito.asm.ByteVector byteVector61 = byteVector55.putByte(100);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector62.putShort((-1));
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) -1 };
        org.mockito.asm.ByteVector byteVector76 = byteVector66.putByteArray(byteArray73, 0, (int) (short) 1);
        org.mockito.asm.ByteVector byteVector79 = byteVector61.putByteArray(byteArray73, 1, (int) (short) 0);
        label20.info = (short) 0;
        java.lang.String str81 = label20.toString();
        java.lang.Object obj82 = label20.info;
        java.lang.Object obj83 = label20.info;
        java.lang.Object obj84 = label20.info;
        label20.info = "L418675214";
        java.lang.Class<?> wildcardClass87 = label20.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1012683578" + "'", str10, "L1012683578");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1012683578" + "'", str19, "L1012683578");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1883709006" + "'", str30, "L1883709006");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 0, 100, -1]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector79);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1883709006" + "'", str81, "L1883709006");
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 0 + "'", obj82, (short) 0);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 0 + "'", obj83, (short) 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 0 + "'", obj84, (short) 0);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test02999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02999");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = null;
        label0.info = obj13;
        java.lang.String str15 = label0.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label16.info = ' ';
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector19.putInt(0);
        label16.info = byteVector23;
        org.mockito.asm.ByteVector byteVector26 = byteVector23.putUTF8("L778582462");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) '4');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putShort(1);
        label0.info = byteVector26;
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putInt(0);
        org.mockito.asm.ByteVector byteVector38 = byteVector32.putShort((int) (short) 10);
        label0.info = byteVector32;
        org.mockito.asm.ByteVector byteVector41 = byteVector32.putShort((int) 'a');
        org.mockito.asm.ByteVector byteVector43 = byteVector32.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector45 = byteVector32.putShort((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1004666301" + "'", str10, "L1004666301");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1004666301" + "'", str12, "L1004666301");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1004666301" + "'", str15, "L1004666301");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
    }

    @Test
    public void test03000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test03000");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((-1));
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putUTF8("hi!");
        label0.info = byteVector7;
        org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector();
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector13 = byteVector9.putShort((-1));
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putLong((long) 100);
        label0.info = byteVector15;
        org.mockito.asm.ByteVector byteVector20 = byteVector15.putShort(100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L90138980");
        org.mockito.asm.ByteVector byteVector24 = byteVector20.putUTF8("L966497915");
        org.mockito.asm.ByteVector byteVector26 = byteVector20.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector28 = byteVector20.putLong((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putInt((-1));
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) (byte) -1);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }
}
